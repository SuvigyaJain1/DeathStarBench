apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: compose-post-service
    name: compose-post-service
    namespace: default
    resourceVersion: "7658082"
    uid: d2d4d365-bd79-42a0-ab95-fd1c4a0a30b7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: compose-post-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: compose-post-service
          kubectl.kubernetes.io/default-logs-container: compose-post-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: compose-post-service
          security.istio.io/tlsMode: istio
          service: compose-post-service
          service.istio.io/canonical-name: compose-post-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - ComposePostService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: compose-post-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: compose-post-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: compose-post-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: compose-post-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: compose-post-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: compose-post-service
          name: compose-post-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:31Z"
      lastUpdateTime: "2022-10-11T16:17:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:31Z"
      message: ReplicaSet "compose-post-service-7b6c5fc858" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: home-timeline-redis
    name: home-timeline-redis
    namespace: default
    resourceVersion: "7657511"
    uid: 07d0ef10-719a-459c-8a2a-67c25051c096
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: home-timeline-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: home-timeline-redis
          kubectl.kubernetes.io/default-logs-container: home-timeline-redis
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: home-timeline-redis
          security.istio.io/tlsMode: istio
          service: home-timeline-redis
          service.istio.io/canonical-name: home-timeline-redis
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - /social-network-microservices/config/redis.conf
          image: docker.io/library/redis:6.2.4
          imagePullPolicy: IfNotPresent
          name: home-timeline-redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/redis.conf
            name: home-timeline-redis-config
            subPath: redis.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":6379,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: home-timeline-redis
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: home-timeline-redis
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: home-timeline-redis
          name: home-timeline-redis-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:29Z"
      lastUpdateTime: "2022-10-11T16:16:29Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:14Z"
      lastUpdateTime: "2022-10-11T16:16:29Z"
      message: ReplicaSet "home-timeline-redis-7c66c87b5c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: home-timeline-service
    name: home-timeline-service
    namespace: default
    resourceVersion: "7658229"
    uid: 97621c0e-b462-40f8-92ea-4ac2d96e440b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: home-timeline-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: home-timeline-service
          kubectl.kubernetes.io/default-logs-container: home-timeline-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: home-timeline-service
          security.istio.io/tlsMode: istio
          service: home-timeline-service
          service.istio.io/canonical-name: home-timeline-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - HomeTimelineService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: home-timeline-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: home-timeline-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: home-timeline-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: home-timeline-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: home-timeline-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: home-timeline-service
          name: home-timeline-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:44Z"
      lastUpdateTime: "2022-10-11T16:17:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:18Z"
      lastUpdateTime: "2022-10-11T16:17:44Z"
      message: ReplicaSet "home-timeline-service-7888d6bcb8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: jaeger
    name: jaeger
    namespace: default
    resourceVersion: "7658150"
    uid: 5a50af6c-8939-4cd3-888f-8804b5acd820
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: jaeger
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: jaeger
          kubectl.kubernetes.io/default-logs-container: jaeger
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: jaeger
          security.istio.io/tlsMode: istio
          service: jaeger
          service.istio.io/canonical-name: jaeger
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - env:
          - name: COLLECTOR_ZIPKIN_HTTP_PORT
            value: "9411"
          image: docker.io/jaegertracing/all-in-one:latest
          imagePullPolicy: IfNotPresent
          name: jaeger
          ports:
          - containerPort: 5775
            protocol: TCP
          - containerPort: 6831
            protocol: TCP
          - containerPort: 6832
            protocol: TCP
          - containerPort: 5778
            protocol: TCP
          - containerPort: 16686
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: jaeger-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: jaeger-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":5775,"protocol":"TCP"}
                  ,{"containerPort":6831,"protocol":"TCP"}
                  ,{"containerPort":6832,"protocol":"TCP"}
                  ,{"containerPort":5778,"protocol":"TCP"}
                  ,{"containerPort":16686,"protocol":"TCP"}
                  ,{"containerPort":14268,"protocol":"TCP"}
                  ,{"containerPort":9411,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: jaeger
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: jaeger
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: jaeger
          name: jaeger-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:38Z"
      lastUpdateTime: "2022-10-11T16:17:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:17Z"
      lastUpdateTime: "2022-10-11T16:17:38Z"
      message: ReplicaSet "jaeger-68f87fdd79" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: media-frontend
    name: media-frontend
    namespace: default
    resourceVersion: "7657976"
    uid: 7872f632-1e2b-4ae2-971a-6cae24df1c89
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: media-frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: media-frontend
          kubectl.kubernetes.io/default-logs-container: media-frontend
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: media-frontend
          security.istio.io/tlsMode: istio
          service: media-frontend
          service.istio.io/canonical-name: media-frontend
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - env:
          - name: fqdn_suffix
            value: .default.svc.cluster.local
          image: docker.io/yg397/media-frontend:xenial
          imagePullPolicy: IfNotPresent
          name: media-frontend
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/openresty/nginx/conf/nginx.conf
            name: media-frontend-config
            subPath: nginx.conf
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: media-frontend-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: media-frontend-config
            subPath: service-config.json
          - mountPath: /usr/local/openresty/nginx/lua-scripts
            name: lua-scripts
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":8081,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: media-frontend
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: media-frontend
        initContainers:
        - args:
          - -c
          - git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench
            && cp -r /DeathStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/
          command:
          - /bin/sh
          image: docker.io/alpine/git:latest
          imagePullPolicy: IfNotPresent
          name: alpine-container
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /lua-scripts
            name: lua-scripts
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: media-frontend
          name: media-frontend-config
        - emptyDir: {}
          name: lua-scripts
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:23Z"
      lastUpdateTime: "2022-10-11T16:17:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:14Z"
      lastUpdateTime: "2022-10-11T16:17:23Z"
      message: ReplicaSet "media-frontend-66679df8b8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: media-memcached
    name: media-memcached
    namespace: default
    resourceVersion: "7658234"
    uid: ecb1e962-3b9d-4c60-9f4b-8d96cb676f82
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: media-memcached
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: media-memcached
          kubectl.kubernetes.io/default-logs-container: media-memcached
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: media-memcached
          security.istio.io/tlsMode: istio
          service: media-memcached
          service.istio.io/canonical-name: media-memcached
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - image: docker.io/library/memcached:1.6.7
          imagePullPolicy: IfNotPresent
          name: media-memcached
          ports:
          - containerPort: 11211
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: media-memcached-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: media-memcached-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":11211,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: media-memcached
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: media-memcached
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: media-memcached
          name: media-memcached-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:44Z"
      lastUpdateTime: "2022-10-11T16:17:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:17Z"
      lastUpdateTime: "2022-10-11T16:17:44Z"
      message: ReplicaSet "media-memcached-7b58f7699b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: media-mongodb
    name: media-mongodb
    namespace: default
    resourceVersion: "7658176"
    uid: 8ca62ef1-cc9b-4cc9-b033-fda2b6ca82c8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: media-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: media-mongodb
          kubectl.kubernetes.io/default-logs-container: media-mongodb
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: media-mongodb
          security.istio.io/tlsMode: istio
          service: media-mongodb
          service.istio.io/canonical-name: media-mongodb
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - --config
          - /social-network-microservices/config/mongod.conf
          image: docker.io/library/mongo:4.4.6
          imagePullPolicy: IfNotPresent
          name: media-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/mongod.conf
            name: media-mongodb-config
            subPath: mongod.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":27017,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: media-mongodb
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: media-mongodb
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: media-mongodb
          name: media-mongodb-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:41Z"
      lastUpdateTime: "2022-10-11T16:17:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:17Z"
      lastUpdateTime: "2022-10-11T16:17:41Z"
      message: ReplicaSet "media-mongodb-75b959d8f9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: media-service
    name: media-service
    namespace: default
    resourceVersion: "7657612"
    uid: da21dade-98ce-4033-8d81-9ea8376e0e2e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: media-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: media-service
          kubectl.kubernetes.io/default-logs-container: media-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: media-service
          security.istio.io/tlsMode: istio
          service: media-service
          service.istio.io/canonical-name: media-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - MediaService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: media-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: media-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: media-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: media-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: media-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: media-service
          name: media-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:41Z"
      lastUpdateTime: "2022-10-11T16:16:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:15Z"
      lastUpdateTime: "2022-10-11T16:16:41Z"
      message: ReplicaSet "media-service-5c4df49d86" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: nginx-thrift
    name: nginx-thrift
    namespace: default
    resourceVersion: "7658279"
    uid: f955b9b0-43f1-4b85-8cf5-7a50627e14f6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: nginx-thrift
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: nginx-thrift
          kubectl.kubernetes.io/default-logs-container: nginx-thrift
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: nginx-thrift
          security.istio.io/tlsMode: istio
          service: nginx-thrift
          service.istio.io/canonical-name: nginx-thrift
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - env:
          - name: fqdn_suffix
            value: .default.svc.cluster.local
          image: docker.io/yg397/openresty-thrift:xenial
          imagePullPolicy: IfNotPresent
          name: nginx-thrift
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/openresty/nginx/jaeger-config.json
            name: nginx-thrift-config
            subPath: jaeger-config.json
          - mountPath: /usr/local/openresty/nginx/conf/nginx.conf
            name: nginx-thrift-config
            subPath: nginx.conf
          - mountPath: /usr/local/openresty/nginx/lua-scripts
            name: lua-scripts
          - mountPath: /usr/local/openresty/lualib/thrift
            name: lua-thrift
          - mountPath: /usr/local/openresty/nginx/pages
            name: pages
          - mountPath: /gen-lua
            name: gen-lua
          - mountPath: /keys
            name: keys
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":8080,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: nginx-thrift
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: nginx-thrift
        initContainers:
        - args:
          - -c
          - git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench
            && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/*
            /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/*
            /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/*
            /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/
          command:
          - /bin/sh
          image: docker.io/alpine/git:latest
          imagePullPolicy: IfNotPresent
          name: alpine-container
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /lua-scripts
            name: lua-scripts
          - mountPath: /lua-thrift
            name: lua-thrift
          - mountPath: /pages
            name: pages
          - mountPath: /gen-lua
            name: gen-lua
          - mountPath: /keys
            name: keys
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: nginx-thrift
          name: nginx-thrift-config
        - emptyDir: {}
          name: lua-scripts
        - emptyDir: {}
          name: pages
        - emptyDir: {}
          name: gen-lua
        - emptyDir: {}
          name: lua-thrift
        - emptyDir: {}
          name: keys
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:56Z"
      lastUpdateTime: "2022-10-11T16:17:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:18Z"
      lastUpdateTime: "2022-10-11T16:17:56Z"
      message: ReplicaSet "nginx-thrift-74648c4b7c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: post-storage-memcached
    name: post-storage-memcached
    namespace: default
    resourceVersion: "7657793"
    uid: 05f9af1c-b0ca-42c0-b772-6006d46b6add
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: post-storage-memcached
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: post-storage-memcached
          kubectl.kubernetes.io/default-logs-container: post-storage-memcached
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: post-storage-memcached
          security.istio.io/tlsMode: istio
          service: post-storage-memcached
          service.istio.io/canonical-name: post-storage-memcached
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - image: docker.io/library/memcached:1.6.7
          imagePullPolicy: IfNotPresent
          name: post-storage-memcached
          ports:
          - containerPort: 11211
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: post-storage-memcached-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: post-storage-memcached-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":11211,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: post-storage-memcached
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: post-storage-memcached
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: post-storage-memcached
          name: post-storage-memcached-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:00Z"
      lastUpdateTime: "2022-10-11T16:17:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:15Z"
      lastUpdateTime: "2022-10-11T16:17:00Z"
      message: ReplicaSet "post-storage-memcached-5965f5d748" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: post-storage-mongodb
    name: post-storage-mongodb
    namespace: default
    resourceVersion: "7657732"
    uid: 43fdc54d-9134-4741-b62b-46aa615fdd94
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: post-storage-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: post-storage-mongodb
          kubectl.kubernetes.io/default-logs-container: post-storage-mongodb
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: post-storage-mongodb
          security.istio.io/tlsMode: istio
          service: post-storage-mongodb
          service.istio.io/canonical-name: post-storage-mongodb
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - --config
          - /social-network-microservices/config/mongod.conf
          image: docker.io/library/mongo:4.4.6
          imagePullPolicy: IfNotPresent
          name: post-storage-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/mongod.conf
            name: post-storage-mongodb-config
            subPath: mongod.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":27017,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: post-storage-mongodb
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: post-storage-mongodb
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: post-storage-mongodb
          name: post-storage-mongodb-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:53Z"
      lastUpdateTime: "2022-10-11T16:16:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:15Z"
      lastUpdateTime: "2022-10-11T16:16:53Z"
      message: ReplicaSet "post-storage-mongodb-5b945c4b7f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: post-storage-service
    name: post-storage-service
    namespace: default
    resourceVersion: "7657893"
    uid: 5da3930b-5d08-46ad-b04a-4190dd6a559a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: post-storage-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: post-storage-service
          kubectl.kubernetes.io/default-logs-container: post-storage-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: post-storage-service
          security.istio.io/tlsMode: istio
          service: post-storage-service
          service.istio.io/canonical-name: post-storage-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - PostStorageService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: post-storage-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: post-storage-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: post-storage-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: post-storage-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: post-storage-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: post-storage-service
          name: post-storage-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:13Z"
      lastUpdateTime: "2022-10-11T16:17:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:13Z"
      message: ReplicaSet "post-storage-service-849d86667" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: social-graph-mongodb
    name: social-graph-mongodb
    namespace: default
    resourceVersion: "7657802"
    uid: add559bd-2e83-401e-a3c3-b45b32b3c92f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: social-graph-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: social-graph-mongodb
          kubectl.kubernetes.io/default-logs-container: social-graph-mongodb
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: social-graph-mongodb
          security.istio.io/tlsMode: istio
          service: social-graph-mongodb
          service.istio.io/canonical-name: social-graph-mongodb
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - --config
          - /social-network-microservices/config/mongod.conf
          image: docker.io/library/mongo:4.4.6
          imagePullPolicy: IfNotPresent
          name: social-graph-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/mongod.conf
            name: social-graph-mongodb-config
            subPath: mongod.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":27017,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: social-graph-mongodb
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: social-graph-mongodb
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: social-graph-mongodb
          name: social-graph-mongodb-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:00Z"
      lastUpdateTime: "2022-10-11T16:17:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:14Z"
      lastUpdateTime: "2022-10-11T16:17:00Z"
      message: ReplicaSet "social-graph-mongodb-7b84fdbfb7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: social-graph-redis
    name: social-graph-redis
    namespace: default
    resourceVersion: "7658144"
    uid: 4a3002e0-855f-4431-bce8-c5dbc3badff6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: social-graph-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: social-graph-redis
          kubectl.kubernetes.io/default-logs-container: social-graph-redis
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: social-graph-redis
          security.istio.io/tlsMode: istio
          service: social-graph-redis
          service.istio.io/canonical-name: social-graph-redis
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - /social-network-microservices/config/redis.conf
          image: docker.io/library/redis:6.2.4
          imagePullPolicy: IfNotPresent
          name: social-graph-redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/redis.conf
            name: social-graph-redis-config
            subPath: redis.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":6379,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: social-graph-redis
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: social-graph-redis
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: social-graph-redis
          name: social-graph-redis-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:38Z"
      lastUpdateTime: "2022-10-11T16:17:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:38Z"
      message: ReplicaSet "social-graph-redis-7958dc4bc8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: social-graph-service
    name: social-graph-service
    namespace: default
    resourceVersion: "7657562"
    uid: 0508586e-0206-4a57-a147-b3e80cd09a0e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: social-graph-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: social-graph-service
          kubectl.kubernetes.io/default-logs-container: social-graph-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: social-graph-service
          security.istio.io/tlsMode: istio
          service: social-graph-service
          service.istio.io/canonical-name: social-graph-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - SocialGraphService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: social-graph-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: social-graph-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: social-graph-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: social-graph-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: social-graph-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: social-graph-service
          name: social-graph-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:35Z"
      lastUpdateTime: "2022-10-11T16:16:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:16:35Z"
      message: ReplicaSet "social-graph-service-b64ccf865" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: text-service
    name: text-service
    namespace: default
    resourceVersion: "7657721"
    uid: 4591f2f5-825b-47bd-99cb-18ad90743b23
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: text-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: text-service
          kubectl.kubernetes.io/default-logs-container: text-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: text-service
          security.istio.io/tlsMode: istio
          service: text-service
          service.istio.io/canonical-name: text-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - TextService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: text-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: text-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: text-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: text-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: text-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: text-service
          name: text-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:51Z"
      lastUpdateTime: "2022-10-11T16:16:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:15Z"
      lastUpdateTime: "2022-10-11T16:16:51Z"
      message: ReplicaSet "text-service-664f6d7c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: unique-id-service
    name: unique-id-service
    namespace: default
    resourceVersion: "7657583"
    uid: 1d8f4fb6-7a44-4da4-9613-c7d29edc170e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: unique-id-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: unique-id-service
          kubectl.kubernetes.io/default-logs-container: unique-id-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: unique-id-service
          security.istio.io/tlsMode: istio
          service: unique-id-service
          service.istio.io/canonical-name: unique-id-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - UniqueIdService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: unique-id-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: unique-id-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: unique-id-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: unique-id-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: unique-id-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: unique-id-service
          name: unique-id-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:37Z"
      lastUpdateTime: "2022-10-11T16:16:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:14Z"
      lastUpdateTime: "2022-10-11T16:16:37Z"
      message: ReplicaSet "unique-id-service-66656c57c8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: url-shorten-memcached
    name: url-shorten-memcached
    namespace: default
    resourceVersion: "7657975"
    uid: dd0f0aa5-ded7-41da-90f3-114d9d1589e2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: url-shorten-memcached
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: url-shorten-memcached
          kubectl.kubernetes.io/default-logs-container: url-shorten-memcached
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: url-shorten-memcached
          security.istio.io/tlsMode: istio
          service: url-shorten-memcached
          service.istio.io/canonical-name: url-shorten-memcached
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - image: docker.io/library/memcached:1.6.7
          imagePullPolicy: IfNotPresent
          name: url-shorten-memcached
          ports:
          - containerPort: 11211
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: url-shorten-memcached-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: url-shorten-memcached-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":11211,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: url-shorten-memcached
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: url-shorten-memcached
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: url-shorten-memcached
          name: url-shorten-memcached-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:23Z"
      lastUpdateTime: "2022-10-11T16:17:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:23Z"
      message: ReplicaSet "url-shorten-memcached-76d46dc69b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: url-shorten-mongodb
    name: url-shorten-mongodb
    namespace: default
    resourceVersion: "7658051"
    uid: c0655206-bd0c-4e6d-9c5f-ab85ace6da13
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: url-shorten-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: url-shorten-mongodb
          kubectl.kubernetes.io/default-logs-container: url-shorten-mongodb
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: url-shorten-mongodb
          security.istio.io/tlsMode: istio
          service: url-shorten-mongodb
          service.istio.io/canonical-name: url-shorten-mongodb
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - --config
          - /social-network-microservices/config/mongod.conf
          image: docker.io/library/mongo:4.4.6
          imagePullPolicy: IfNotPresent
          name: url-shorten-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/mongod.conf
            name: url-shorten-mongodb-config
            subPath: mongod.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":27017,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: url-shorten-mongodb
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: url-shorten-mongodb
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: url-shorten-mongodb
          name: url-shorten-mongodb-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:29Z"
      lastUpdateTime: "2022-10-11T16:17:29Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:29Z"
      message: ReplicaSet "url-shorten-mongodb-7f6fc7999b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: url-shorten-service
    name: url-shorten-service
    namespace: default
    resourceVersion: "7658219"
    uid: 3fd3b145-060a-4a22-937a-97f5f92692a8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: url-shorten-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: url-shorten-service
          kubectl.kubernetes.io/default-logs-container: url-shorten-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: url-shorten-service
          security.istio.io/tlsMode: istio
          service: url-shorten-service
          service.istio.io/canonical-name: url-shorten-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - UrlShortenService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: url-shorten-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: url-shorten-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: url-shorten-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: url-shorten-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: url-shorten-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: url-shorten-service
          name: url-shorten-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:43Z"
      lastUpdateTime: "2022-10-11T16:17:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:17Z"
      lastUpdateTime: "2022-10-11T16:17:43Z"
      message: ReplicaSet "url-shorten-service-58d5c7c666" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: user-memcached
    name: user-memcached
    namespace: default
    resourceVersion: "7657550"
    uid: 1988e40c-89bd-414d-add4-2fd07592d8c4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user-memcached
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: user-memcached
          kubectl.kubernetes.io/default-logs-container: user-memcached
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: user-memcached
          security.istio.io/tlsMode: istio
          service: user-memcached
          service.istio.io/canonical-name: user-memcached
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - image: docker.io/library/memcached:1.6.7
          imagePullPolicy: IfNotPresent
          name: user-memcached
          ports:
          - containerPort: 11211
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: user-memcached-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: user-memcached-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":11211,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: user-memcached
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: user-memcached
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: user-memcached
          name: user-memcached-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:33Z"
      lastUpdateTime: "2022-10-11T16:16:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:15Z"
      lastUpdateTime: "2022-10-11T16:16:33Z"
      message: ReplicaSet "user-memcached-7bfd986c84" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: user-mention-service
    name: user-mention-service
    namespace: default
    resourceVersion: "7658167"
    uid: 81f26976-bc40-4fe7-b451-070c442e32ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user-mention-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: user-mention-service
          kubectl.kubernetes.io/default-logs-container: user-mention-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: user-mention-service
          security.istio.io/tlsMode: istio
          service: user-mention-service
          service.istio.io/canonical-name: user-mention-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - UserMentionService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: user-mention-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: user-mention-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: user-mention-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: user-mention-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: user-mention-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: user-mention-service
          name: user-mention-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:40Z"
      lastUpdateTime: "2022-10-11T16:17:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:40Z"
      message: ReplicaSet "user-mention-service-5957dc9c5f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: user-mongodb
    name: user-mongodb
    namespace: default
    resourceVersion: "7658008"
    uid: 16cb0158-3a36-4b59-9ce4-080ea76f96cf
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: user-mongodb
          kubectl.kubernetes.io/default-logs-container: user-mongodb
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: user-mongodb
          security.istio.io/tlsMode: istio
          service: user-mongodb
          service.istio.io/canonical-name: user-mongodb
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - --config
          - /social-network-microservices/config/mongod.conf
          image: docker.io/library/mongo:4.4.6
          imagePullPolicy: IfNotPresent
          name: user-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/mongod.conf
            name: user-mongodb-config
            subPath: mongod.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":27017,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: user-mongodb
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: user-mongodb
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: user-mongodb
          name: user-mongodb-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:26Z"
      lastUpdateTime: "2022-10-11T16:17:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:26Z"
      message: ReplicaSet "user-mongodb-77cfd8b4f8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: user-service
    name: user-service
    namespace: default
    resourceVersion: "7657882"
    uid: 84440f0c-3b31-47b6-a260-3fc3f7ac19a1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: user-service
          kubectl.kubernetes.io/default-logs-container: user-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: user-service
          security.istio.io/tlsMode: istio
          service: user-service
          service.istio.io/canonical-name: user-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - UserService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: user-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: user-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: user-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: user-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: user-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: user-service
          name: user-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:11Z"
      lastUpdateTime: "2022-10-11T16:17:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:17:11Z"
      message: ReplicaSet "user-service-69479c58fc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: user-timeline-mongodb
    name: user-timeline-mongodb
    namespace: default
    resourceVersion: "7657536"
    uid: 16e1b8ca-5532-4c8d-a4f8-b045c463149c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user-timeline-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: user-timeline-mongodb
          kubectl.kubernetes.io/default-logs-container: user-timeline-mongodb
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: user-timeline-mongodb
          security.istio.io/tlsMode: istio
          service: user-timeline-mongodb
          service.istio.io/canonical-name: user-timeline-mongodb
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - --config
          - /social-network-microservices/config/mongod.conf
          image: docker.io/library/mongo:4.4.6
          imagePullPolicy: IfNotPresent
          name: user-timeline-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/mongod.conf
            name: user-timeline-mongodb-config
            subPath: mongod.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":27017,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: user-timeline-mongodb
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: user-timeline-mongodb
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: user-timeline-mongodb
          name: user-timeline-mongodb-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:31Z"
      lastUpdateTime: "2022-10-11T16:16:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:16Z"
      lastUpdateTime: "2022-10-11T16:16:31Z"
      message: ReplicaSet "user-timeline-mongodb-8677f4f57b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: user-timeline-redis
    name: user-timeline-redis
    namespace: default
    resourceVersion: "7657671"
    uid: a3badae1-f06e-457a-b348-21ccc1234dbb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user-timeline-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: user-timeline-redis
          kubectl.kubernetes.io/default-logs-container: user-timeline-redis
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: user-timeline-redis
          security.istio.io/tlsMode: istio
          service: user-timeline-redis
          service.istio.io/canonical-name: user-timeline-redis
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - args:
          - /social-network-microservices/config/redis.conf
          image: docker.io/library/redis:6.2.4
          imagePullPolicy: IfNotPresent
          name: user-timeline-redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/redis.conf
            name: user-timeline-redis-config
            subPath: redis.conf
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":6379,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: user-timeline-redis
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: user-timeline-redis
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: user-timeline-redis
          name: user-timeline-redis-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:16:47Z"
      lastUpdateTime: "2022-10-11T16:16:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:14Z"
      lastUpdateTime: "2022-10-11T16:16:47Z"
      message: ReplicaSet "user-timeline-redis-9f99f6569" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      service: user-timeline-service
    name: user-timeline-service
    namespace: default
    resourceVersion: "7658192"
    uid: d59930bd-f169-463e-a980-1784f7755014
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user-timeline-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: user-timeline-service
          kubectl.kubernetes.io/default-logs-container: user-timeline-service
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
        creationTimestamp: null
        labels:
          app: user-timeline-service
          security.istio.io/tlsMode: istio
          service: user-timeline-service
          service.istio.io/canonical-name: user-timeline-service
          service.istio.io/canonical-revision: latest
      spec:
        containers:
        - command:
          - UserTimelineService
          image: docker.io/deathstarbench/social-network-microservices:latest
          imagePullPolicy: IfNotPresent
          name: user-timeline-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /social-network-microservices/config/jaeger-config.yml
            name: user-timeline-service-config
            subPath: jaeger-config.yml
          - mountPath: /social-network-microservices/config/service-config.json
            name: user-timeline-service-config
            subPath: service-config.json
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --concurrency
          - "2"
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PROXY_CONFIG
            value: |
              {"tracing":{"zipkin":{"address":"10.0.0.10:9411"}}}
          - name: ISTIO_META_POD_PORTS
            value: |-
              [
                  {"containerPort":9090,"protocol":"TCP"}
              ]
          - name: ISTIO_META_APP_CONTAINERS
            value: user-timeline-service
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: TRUST_DOMAIN
            value: cluster.local
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /var/run/secrets/tokens
            name: istio-token
          - mountPath: /etc/istio/pod
            name: istio-podinfo
        dnsPolicy: ClusterFirst
        hostname: user-timeline-service
        initContainers:
        - args:
          - istio-iptables
          - -p
          - "15001"
          - -z
          - "15006"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - '*'
          - -d
          - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.14.3
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: workload-socket
        - name: workload-certs
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            defaultMode: 420
            name: user-timeline-service
          name: user-timeline-service-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-10-11T16:17:42Z"
      lastUpdateTime: "2022-10-11T16:17:42Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-10-11T16:16:17Z"
      lastUpdateTime: "2022-10-11T16:17:42Z"
      message: ReplicaSet "user-timeline-service-6c656f56" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: compose-post-service
    namespace: default
    resourceVersion: "7656948"
    uid: d7470024-6b06-4a75-858c-ed194c7150e9
  spec:
    clusterIP: 10.103.153.7
    clusterIPs:
    - 10.103.153.7
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: compose-post-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: home-timeline-redis
    namespace: default
    resourceVersion: "7656932"
    uid: 7993a512-e1a6-4c12-b965-93dc63880fb5
  spec:
    clusterIP: 10.101.245.240
    clusterIPs:
    - 10.101.245.240
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "6379"
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      service: home-timeline-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: home-timeline-service
    namespace: default
    resourceVersion: "7656935"
    uid: cab9e93a-8861-4e00-8f8c-05eba0181cf2
  spec:
    clusterIP: 10.107.79.248
    clusterIPs:
    - 10.107.79.248
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: home-timeline-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: jaeger
    namespace: default
    resourceVersion: "7656994"
    uid: 6e64d275-1f6a-4b6b-b790-fcba88f5b0b1
  spec:
    clusterIP: 10.109.213.76
    clusterIPs:
    - 10.109.213.76
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "5775"
      nodePort: 32000
      port: 5775
      protocol: UDP
      targetPort: 5775
    - name: "6831"
      nodePort: 32001
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: "6832"
      nodePort: 32002
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: "5778"
      nodePort: 32003
      port: 5778
      protocol: TCP
      targetPort: 5778
    - name: "16686"
      nodePort: 32004
      port: 16686
      protocol: TCP
      targetPort: 16686
    - name: "14268"
      nodePort: 32005
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: "9411"
      nodePort: 32006
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      service: jaeger
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-10-11T16:15:33Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "7656769"
    uid: eacba885-ef9d-47aa-b25e-7851ed81dcd8
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: media-frontend
    namespace: default
    resourceVersion: "7656973"
    uid: b8dda3ba-9da6-4d4f-b8ca-100001c5a3f9
  spec:
    clusterIP: 10.97.232.177
    clusterIPs:
    - 10.97.232.177
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "8081"
      port: 8081
      protocol: TCP
      targetPort: 8080
    selector:
      service: media-frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: media-memcached
    namespace: default
    resourceVersion: "7657013"
    uid: e44b4561-49a8-49e5-967c-0e6c21563ba5
  spec:
    clusterIP: 10.106.254.28
    clusterIPs:
    - 10.106.254.28
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "11211"
      port: 11211
      protocol: TCP
      targetPort: 11211
    selector:
      service: media-memcached
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: media-mongodb
    namespace: default
    resourceVersion: "7657003"
    uid: c103a3c7-ad80-4c4b-9aa8-618e316c7452
  spec:
    clusterIP: 10.106.250.36
    clusterIPs:
    - 10.106.250.36
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "27017"
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      service: media-mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: media-service
    namespace: default
    resourceVersion: "7657035"
    uid: eab8db10-a4a8-4a35-97f1-5d19f072fc7b
  spec:
    clusterIP: 10.103.129.38
    clusterIPs:
    - 10.103.129.38
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: media-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: nginx-thrift
    namespace: default
    resourceVersion: "7657049"
    uid: 92d169b2-408c-44e9-848d-2026eb7a5da3
  spec:
    clusterIP: 10.101.97.218
    clusterIPs:
    - 10.101.97.218
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "8080"
      nodePort: 31111
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: nginx-thrift
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: post-storage-memcached
    namespace: default
    resourceVersion: "7656979"
    uid: f4489185-2ad6-4afb-8904-8411138879ef
  spec:
    clusterIP: 10.109.95.43
    clusterIPs:
    - 10.109.95.43
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "11211"
      port: 11211
      protocol: TCP
      targetPort: 11211
    selector:
      service: post-storage-memcached
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: post-storage-mongodb
    namespace: default
    resourceVersion: "7657024"
    uid: 1d074d92-9ff7-4d06-a0e3-2316327471cb
  spec:
    clusterIP: 10.103.157.138
    clusterIPs:
    - 10.103.157.138
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "27017"
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      service: post-storage-mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: post-storage-service
    namespace: default
    resourceVersion: "7657029"
    uid: c07aec4d-fc5d-410f-85ca-ecd3ccb4f52f
  spec:
    clusterIP: 10.101.140.103
    clusterIPs:
    - 10.101.140.103
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: post-storage-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: social-graph-mongodb
    namespace: default
    resourceVersion: "7657008"
    uid: b3e66cab-c188-4fea-b88b-f1a2763296e3
  spec:
    clusterIP: 10.102.109.101
    clusterIPs:
    - 10.102.109.101
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "27017"
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      service: social-graph-mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: social-graph-redis
    namespace: default
    resourceVersion: "7657059"
    uid: cbe44f63-075a-4418-885f-0be5bfc48235
  spec:
    clusterIP: 10.96.151.231
    clusterIPs:
    - 10.96.151.231
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "6379"
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      service: social-graph-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: social-graph-service
    namespace: default
    resourceVersion: "7656940"
    uid: 3370eebf-272b-43f0-a532-6a8fdf424aa9
  spec:
    clusterIP: 10.103.204.16
    clusterIPs:
    - 10.103.204.16
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: social-graph-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: text-service
    namespace: default
    resourceVersion: "7656990"
    uid: 5d78328f-3cc4-4f80-88d7-067bb81aaaef
  spec:
    clusterIP: 10.107.14.94
    clusterIPs:
    - 10.107.14.94
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: text-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: unique-id-service
    namespace: default
    resourceVersion: "7656984"
    uid: 51b87768-809c-4d6c-b811-9931192c9a08
  spec:
    clusterIP: 10.107.82.243
    clusterIPs:
    - 10.107.82.243
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: unique-id-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: url-shorten-memcached
    namespace: default
    resourceVersion: "7656944"
    uid: 141c9db2-e7d0-4944-8b11-38528333c714
  spec:
    clusterIP: 10.105.229.172
    clusterIPs:
    - 10.105.229.172
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "11211"
      port: 11211
      protocol: TCP
      targetPort: 11211
    selector:
      service: url-shorten-memcached
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: url-shorten-mongodb
    namespace: default
    resourceVersion: "7656963"
    uid: 113289f8-9d77-47e9-b32b-636888fddf32
  spec:
    clusterIP: 10.106.219.164
    clusterIPs:
    - 10.106.219.164
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "27017"
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      service: url-shorten-mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: url-shorten-service
    namespace: default
    resourceVersion: "7657042"
    uid: 674aa1a7-a712-4b48-8c22-ec31b2e2ca80
  spec:
    clusterIP: 10.105.157.60
    clusterIPs:
    - 10.105.157.60
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: url-shorten-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: user-memcached
    namespace: default
    resourceVersion: "7656952"
    uid: 29b19377-26f0-4893-a433-f8e12f1a0d90
  spec:
    clusterIP: 10.106.50.137
    clusterIPs:
    - 10.106.50.137
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "11211"
      port: 11211
      protocol: TCP
      targetPort: 11211
    selector:
      service: user-memcached
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: user-mention-service
    namespace: default
    resourceVersion: "7656968"
    uid: a852eb7b-ccfa-49a7-ab2c-8802ed82e8b6
  spec:
    clusterIP: 10.104.199.85
    clusterIPs:
    - 10.104.199.85
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: user-mention-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: user-mongodb
    namespace: default
    resourceVersion: "7657065"
    uid: eae346dc-ba9f-409a-af94-1089b608cc3a
  spec:
    clusterIP: 10.96.28.122
    clusterIPs:
    - 10.96.28.122
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "27017"
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      service: user-mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: user-service
    namespace: default
    resourceVersion: "7657019"
    uid: f1994674-713a-43ac-bef7-9d39ba585d65
  spec:
    clusterIP: 10.108.97.106
    clusterIPs:
    - 10.108.97.106
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: user-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: user-timeline-mongodb
    namespace: default
    resourceVersion: "7656998"
    uid: 2121d341-c221-49ed-9a9a-34f7ec5d28e7
  spec:
    clusterIP: 10.107.106.254
    clusterIPs:
    - 10.107.106.254
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "27017"
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      service: user-timeline-mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: user-timeline-redis
    namespace: default
    resourceVersion: "7657052"
    uid: e99c493c-8b9f-4a0d-88f5-f8a87f8148c9
  spec:
    clusterIP: 10.107.146.147
    clusterIPs:
    - 10.107.146.147
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "6379"
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      service: user-timeline-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: user-timeline-service
    namespace: default
    resourceVersion: "7656958"
    uid: 62b756f7-75a2-45e3-92b3-69c8c54188b4
  spec:
    clusterIP: 10.101.16.226
    clusterIPs:
    - 10.101.16.226
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "9090"
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      service: user-timeline-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: compose-post-service
    name: compose-post-service
    namespace: default
    resourceVersion: "7656904"
    uid: ad6b29ed-bead-47c4-bbab-d4a8da9a76b6
- apiVersion: v1
  data:
    redis.conf: |
      io-threads 8
      io-threads-do-reads yes
      port 6379
      tls-port 0

      tls-cert-file /keys/server.crt
      tls-key-file /keys/server.key

      tls-auth-clients no
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: home-timeline-redis
    name: home-timeline-redis
    namespace: default
    resourceVersion: "7656909"
    uid: 6541ebbc-4d07-4f1d-9138-cf9267ca36da
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: home-timeline-service
    name: home-timeline-service
    namespace: default
    resourceVersion: "7656914"
    uid: deb819b5-58bf-4468-b3ae-d93057e922e9
- apiVersion: v1
  data:
    root-cert.pem: |
      -----BEGIN CERTIFICATE-----
      MIIC/DCCAeSgAwIBAgIQWvMvG+j/0Y+cQkv36JJJqTANBgkqhkiG9w0BAQsFADAY
      MRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIyMDkxMzExMzM1OFoXDTMyMDkx
      MDExMzM1OFowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN
      AQEBBQADggEPADCCAQoCggEBAJs1rcfnxUtpwT4fypvONhRC2pDvlVkZzsVhYyow
      Px+/2Q/lU5Szqj5tZZR6wIF9efaP3mYcfVVzimICgt2YPbJ6Zurvo9mYLJnTIfDy
      vASfxDMeaAhGqoBOGJlELzeIh0JSFgr3qpUMUqQjvlLpQwjys2Gr5dVgit2GAWcr
      0YynkCOn6bx+zCwZ3wkSXhXCTgfTMcAlPrtwC5MgpYU8EjgAGHAJm1XmRW9ctogU
      EZsG0CTwjVfRTI7OGBdn4Zk40q1bkVY4SUoPPqnjsFtmoo9z/E3IdEBM4zVfOwsf
      tguayhmbz9u3iSELPV6htuSUN4FxUqlfaymn8wJFDH0WrhECAwEAAaNCMEAwDgYD
      VR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJ4IWDhDW8+v
      PRo0JZXwaKm8vQbyMA0GCSqGSIb3DQEBCwUAA4IBAQA/J+lI+kQBQWrNHcCi8IZ7
      Ao6e3Q6wX5woONwpJm9bRUVG3YZjkZ4T63tjqP6E21CBopfq6F3Tgurqx//daau9
      B6Y7Zx2A3JZvfNDOSA5od0mjUzgZQ9j9P4MAH8UtmcusHhyAQxF8cnlXzCpSCoZw
      CefbPa/IycxgcNjvsczJUxtou/aQzfD3rycP3z09vcuYv6kN286VQw195Aho/JXs
      Gs+ETb4nAMhRZqBMochHZJI0duk2qgXMmjSDMKvBDxx0UUtPbUdsK1lEz3FR7jw7
      OVz1J3gNI+7MWprzZky9DPHbTb982bKC5BOB1lCp5EpNU0CU2QywQnlXpTfxkgLh
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-10-11T16:15:26Z"
    labels:
      istio.io/config: "true"
    name: istio-ca-root-cert
    namespace: default
    resourceVersion: "7656745"
    uid: 6a07c3e6-cd5d-4342-a175-bbd50f8812a3
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: jaeger
    name: jaeger
    namespace: default
    resourceVersion: "7656919"
    uid: 6c989b28-0c9d-47fb-ba07-d05ee8e33609
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIyMDkxMzExMjQxMloXDTMyMDkxMDExMjQxMlowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPg1
      8I8vtV/ItiAxSFQZh5H0P2Av5TKwY7RMneBxCMNEPbA2hDwUsQoA3bvh0Ebcsi9j
      3ZwRt4SMPWhvvbciOswQg0bh+OOW/pETPwrvqApzSZlbmzkrBtfmYCvVsyQ9NAX1
      1Qvl7Z1PJS45pxEyENywLTJCqPeeLXMpXL4Ozx8G06y6YS5YGReb76LVMT/RV7EW
      Xm3ie78ZdQPo7MdzM/DT1zh0uvY0ghsuqYuje3hIfyWhF2EHqVQCP9y9uOWkWTtT
      rwuodd1EqFkfeMzz5j5BfKoX6QLq38/q53hBhJyxjrzwhLtRK8hIg80GcA+8fqYG
      y4qirX5fbYzACWOJp88CAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFI+F9EytlhwYarA7u/Zd72Y5jTl4MBUGA1UdEQQO
      MAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBACMBIgUlrYmcjMIAyZSC
      btgPododgc03FVEDF7JyU5gQ79UGnfCsNaMvgJ66yud8EM6mJ26JJMJsJsVtHS4v
      fepieFFdm+5bLjjkVDMRVJlCuGMyUPmOfifwIluInCQP9N7c/uIWX5B6ljDhrmTf
      frnkWzuShzBjSaB/A/wik77MgFtFBPZWDgiXR1eXJ9SclXZBH0lkpmDLsCQ57+zt
      vwdMa+lF7CTQTspFnNX6kbVIyNvKaPZwRigt/EI/j2/56w9SE7EpY9YAspwhLH40
      +R57yj3nZhFK5KbLP62uZy752yOpFBXZyhRic0XaBBtK8gN8gn65hRScu6Ccw0yv
      XYc=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2022-10-11T16:15:26Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "7656747"
    uid: cdf44be4-9bed-439b-9f15-1f1661456507
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    nginx.conf: |
      # Checklist: Make sure that worker_processes == #cores you gave to
      # nginx process
      worker_processes  16;

      # error_log  logs/error.log;

      # Checklist: Make sure that worker_connections * worker_processes
      # is greater than the total connections between the client and Nginx.
      events {
        worker_connections  1024;
      }

      env fqdn_suffix;

      http {
        include       mime.types;
        default_type  application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request"'
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        # access_log  logs/access.log  main;

        sendfile        on;
        tcp_nopush      on;
        tcp_nodelay     on;

        # Checklist: Make sure the keepalive_timeout is greateer than
        # the duration of your experiment and keepalive_requests
        # is greateer than the total number of requests sent from
        # the workload generator
        keepalive_timeout  120s;
        keepalive_requests 100000;

        # Docker default hostname resolver
        resolver kube-dns.kube-system.svc.cluster.local valid=10s ipv6=off;

        lua_package_path '/usr/local/openresty/nginx/lua-scripts/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;;';

        lua_shared_dict config 32k;

        init_by_lua_block {
          local upload = require "resty.upload"
          local memcached = require "resty.memcached"
          local mongo = require "resty-mongol"
        }

        server {

          # Checklist: Set up the port that nginx listens to.
          listen       8080 reuseport;
          server_name  localhost;

          # Checklist: Turn of the access_log and error_log if you
          # don't need them.
          access_log  off;
          # error_log off;

          client_max_body_size 100M;
          client_body_buffer_size 100M;

          # Checklist: Make sure that the location here is consistent
          # with the location you specified in wrk2.
          location /upload-media {
                if ($request_method = 'OPTIONS') {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                  add_header 'Access-Control-Max-Age' 1728000;
                  add_header 'Content-Type' 'text/plain; charset=utf-8';
                  add_header 'Content-Length' 0;
                  return 204;
                }
                if ($request_method = 'POST') {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                  add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                }
                if ($request_method = 'GET') {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                  add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                }
            content_by_lua '
              local client = require "upload-media"
              client.UploadMedia();
            ';
          }

          # Checklist: Make sure that the location here is consistent
          # with the location you specified in wrk2.
          location /get-media {
                if ($request_method = 'OPTIONS') {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                  add_header 'Access-Control-Max-Age' 1728000;
                  add_header 'Content-Type' 'text/plain; charset=utf-8';
                  add_header 'Content-Length' 0;
                  return 204;
                }
                if ($request_method = 'POST') {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                  add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                }
                if ($request_method = 'GET') {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                  add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                }
            content_by_lua '
              local client = require "get-media"
              client.GetMedia();
            ';
          }

        }
      }
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: media-frontend
    name: media-frontend
    namespace: default
    resourceVersion: "7656922"
    uid: 01111803-1eaf-4489-9e0a-ff9a4ec6cf57
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: media-memcached
    name: media-memcached
    namespace: default
    resourceVersion: "7656907"
    uid: 3ad53e84-65d4-41fe-8ba6-5c972b62e2ed
- apiVersion: v1
  data:
    mongod.conf: |
      net:
        tls:
          mode: disabled
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: media-mongodb
    name: media-mongodb
    namespace: default
    resourceVersion: "7656905"
    uid: 2cfab15c-bbe6-4edc-8187-fe3c2ccb672d
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: media-service
    name: media-service
    namespace: default
    resourceVersion: "7656911"
    uid: f8455cd6-f0d1-4fd1-a559-c684fb31f27b
- apiVersion: v1
  data:
    jaeger-config.json: |
      {
        "service_name": "nginx-web-server",
        "disabled": false,
        "reporter": {
          "logSpans": false,
          "localAgentHostPort": "jaeger:6831",
          "queueSize": 1000000,
          "bufferFlushInterval": 10
        },
        "sampler": {
          "type": "probabilistic",
          "param": 0.01
        }
      }
    nginx.conf: "# Load the OpenTracing dynamic module.\nload_module modules/ngx_http_opentracing_module.so;\n\n#
      Checklist: Make sure that worker_processes == #cores you gave to\n# nginx process\nworker_processes
      \ auto;\n\n# error_log  logs/error.log;\n\n# Checklist: Make sure that worker_connections
      * worker_processes\n# is greater than the total connections between the client
      and Nginx. \nevents {\n  use epoll;\n  worker_connections  1024;\n}\n\nenv fqdn_suffix;\n\nhttp
      {\n  # Load a vendor tracer\n  opentracing on;\n  opentracing_load_tracer /usr/local/lib/libjaegertracing_plugin.so
      /usr/local/openresty/nginx/jaeger-config.json;\n\n  include       mime.types;\n
      \ default_type  application/octet-stream;\n\n  proxy_read_timeout 5000;\n  proxy_connect_timeout
      5000;\n  proxy_send_timeout 5000;\n  \n  log_format main '$remote_addr - $remote_user
      [$time_local] \"$request\"'\n                  '$status $body_bytes_sent \"$http_referer\"
      '\n                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n  #
      access_log  logs/access.log  main;\n\n  sendfile        on;\n  tcp_nopush      on;\n
      \ tcp_nodelay     on;\n\n  # Checklist: Make sure the keepalive_timeout is greateer
      than\n  # the duration of your experiment and keepalive_requests\n  # is greateer
      than the total number of requests sent from\n  # the workload generator\n  keepalive_timeout
      \ 120s;\n  keepalive_requests 100000;\n\n  # Docker default hostname resolver.
      Set valid timeout to prevent unlimited\n  # ttl for resolver caching.\n  # resolver
      127.0.0.11 valid=10s ipv6=off;\n  resolver kube-dns.kube-system.svc.cluster.local
      valid=10s ipv6=off;\n\n  lua_package_path '/usr/local/openresty/nginx/lua-scripts/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;;';\n\n
      \ lua_shared_dict config 32k;\n\n  init_by_lua_block {\n    local bridge_tracer
      = require \"opentracing_bridge_tracer\"\n    local GenericObjectPool = require
      \"GenericObjectPool\"\n    local ngx = ngx\n    local jwt = require \"resty.jwt\"\n
      \   local cjson = require 'cjson'\n\n    local social_network_UserTimelineService
      = require 'social_network_UserTimelineService'\n    local UserTimelineServiceClient
      = social_network_UserTimelineService.social_network_UserTimelineService\n    local
      social_network_SocialGraphService = require 'social_network_SocialGraphService'\n
      \   local SocialGraphServiceClient = social_network_SocialGraphService.SocialGraphServiceClient\n
      \   local social_network_ComposePostService = require 'social_network_ComposePostService'\n
      \   local ComposePostServiceClient = social_network_ComposePostService.ComposePostServiceClient\n
      \   local social_network_UserService = require 'social_network_UserService'\n
      \   local UserServiceClient = social_network_UserService.UserServiceClient\n\n\n
      \   local config = ngx.shared.config;\n    config:set(\"secret\", \"secret\")\n
      \   config:set(\"cookie_ttl\", 3600 * 24)\n    config:set(\"ssl\", false)\n
      \ }\n\n  server {\n\n    # Checklist: Set up the port that nginx listens to.\n
      \   listen       8080 reuseport;\n    server_name  localhost;\n\n    # Checklist:
      Turn of the access_log and error_log if you\n    # don't need them.\n    access_log
      \ off;\n    # error_log off;\n\n    lua_need_request_body on;\n\n    # Used
      when SSL enabled\n    lua_ssl_trusted_certificate /keys/CA.pem;\n    lua_ssl_ciphers
      ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH;\n\n    # Checklist: Make sure that the location
      here is consistent\n    # with the location you specified in wrk2.\n    location
      /api/user/register {\n          if ($request_method = 'OPTIONS') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/user/register\"\n
      \         client.RegisterUser();\n      ';\n    }\n\n    location /api/user/follow
      {\n          if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin'
      '*';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/user/follow\"\n
      \         client.Follow();\n      ';\n    }\n\n    location /api/user/unfollow
      {\n          if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin'
      '*';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/user/unfollow\"\n
      \         client.Unfollow();\n      ';\n    }\n\n    location /api/user/login
      {\n          if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin'
      '*';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/user/login\"\n
      \         client.Login();\n      ';\n    }\n\n    location /api/post/compose
      {\n          if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin'
      '*';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/post/compose\"\n
      \         client.ComposePost();\n      ';\n    }\n\n    location /api/user-timeline/read
      {\n          if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin'
      '*';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/user-timeline/read\"\n
      \         client.ReadUserTimeline();\n      ';\n    }\n\n    location /api/home-timeline/read
      {\n            if ($request_method = 'OPTIONS') {\n              add_header
      'Access-Control-Allow-Origin' '*';\n              add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n              add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \             add_header 'Access-Control-Max-Age' 1728000;\n              add_header
      'Content-Type' 'text/plain; charset=utf-8';\n              add_header 'Content-Length'
      0;\n              return 204;\n            }\n            if ($request_method
      = 'POST') {\n              add_header 'Access-Control-Allow-Origin' '*';\n              add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n              add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \             add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \           }\n            if ($request_method = 'GET') {\n              add_header
      'Access-Control-Allow-Origin' '*';\n              add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n              add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \             add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \           }\n      content_by_lua '\n          local client = require \"api/home-timeline/read\"\n
      \         client.ReadHomeTimeline();\n      ';\n    }\n\n    # # get userinfo
      lua\n    # location /api/user/user_info {\n    #       if ($request_method =
      'OPTIONS') {\n    #         add_header 'Access-Control-Allow-Origin' '*';\n
      \   #         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \   #         add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \   #         add_header 'Access-Control-Max-Age' 1728000;\n    #         add_header
      'Content-Type' 'text/plain; charset=utf-8';\n    #         add_header 'Content-Length'
      0;\n    #         return 204;\n    #       }\n    #       if ($request_method
      = 'POST') {\n    #         add_header 'Access-Control-Allow-Origin' '*';\n    #
      \        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n    #
      \        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \   #         add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \   #       }\n    #       if ($request_method = 'GET') {\n    #         add_header
      'Access-Control-Allow-Origin' '*';\n    #         add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n    #         add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \   #         add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \   #       }\n    #   content_by_lua '\n    #       local client = require
      \"api/user/user_info\"\n    #       client.UserInfo();\n    #   ';\n    # }\n
      \   # get follower lua\n    location /api/user/get_follower {\n          if
      ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin'
      '*';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/user/get_follower\"\n
      \         client.GetFollower();\n      ';\n    }\n\n    # get followee lua\n
      \   location /api/user/get_followee {\n          if ($request_method = 'OPTIONS')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Max-Age' 1728000;\n            add_header
      'Content-Type' 'text/plain; charset=utf-8';\n            add_header 'Content-Length'
      0;\n            return 204;\n          }\n          if ($request_method = 'POST')
      {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header
      'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header
      'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n          if ($request_method = 'GET') {\n            add_header
      'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods'
      'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers'
      'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \         }\n      content_by_lua '\n          local client = require \"api/user/get_followee\"\n
      \         client.GetFollowee();\n      ';\n    }\n    location / {\n      if
      ($request_method = 'OPTIONS') {\n        add_header 'Access-Control-Allow-Origin'
      '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \       add_header 'Access-Control-Max-Age' 1728000;\n        add_header 'Content-Type'
      'text/plain; charset=utf-8';\n        add_header 'Content-Length' 0;\n        return
      204;\n      }\n      if ($request_method = 'POST') {\n        add_header 'Access-Control-Allow-Origin'
      '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \       add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \     }\n      if ($request_method = 'GET') {\n        add_header 'Access-Control-Allow-Origin'
      '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n
      \       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n
      \       add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n
      \     }\n      root pages;\n    }\n\n    location /wrk2-api/home-timeline/read
      {\n      content_by_lua '\n          local client = require \"wrk2-api/home-timeline/read\"\n
      \         client.ReadHomeTimeline();\n      ';\n    }\n\n    location /wrk2-api/user-timeline/read
      {\n      content_by_lua '\n          local client = require \"wrk2-api/user-timeline/read\"\n
      \         client.ReadUserTimeline();\n      ';\n    }\n\n    location /wrk2-api/post/compose
      {\n      content_by_lua '\n          local client = require \"wrk2-api/post/compose\"\n
      \         client.ComposePost();\n      ';\n    }\n\n    location /wrk2-api/user/register
      {\n      content_by_lua '\n          local client = require \"wrk2-api/user/register\"\n
      \         client.RegisterUser();\n      ';\n    }\n\n    location /wrk2-api/user/follow
      {\n      content_by_lua '\n          local client = require \"wrk2-api/user/follow\"\n
      \         client.Follow();\n      ';\n    }\n\n    location /wrk2-api/user/unfollow
      {\n      content_by_lua '\n          local client = require \"wrk2-api/user/unfollow\"\n
      \         client.Unfollow();\n      ';\n    }\n\n  }\n}\n"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: nginx-thrift
    name: nginx-thrift
    namespace: default
    resourceVersion: "7656930"
    uid: 538a249a-5c13-4e3b-9359-c89ae85ad9ad
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: post-storage-memcached
    name: post-storage-memcached
    namespace: default
    resourceVersion: "7656920"
    uid: b74c7de5-d847-493f-ad7d-a3a67749ab22
- apiVersion: v1
  data:
    mongod.conf: |
      net:
        tls:
          mode: disabled
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: post-storage-mongodb
    name: post-storage-mongodb
    namespace: default
    resourceVersion: "7656906"
    uid: e2990038-682e-4f2c-9d81-65a6abd4f9ac
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: post-storage-service
    name: post-storage-service
    namespace: default
    resourceVersion: "7656913"
    uid: afe1491d-7655-4453-8288-5306935519ee
- apiVersion: v1
  data:
    mongod.conf: |
      net:
        tls:
          mode: disabled
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: social-graph-mongodb
    name: social-graph-mongodb
    namespace: default
    resourceVersion: "7656917"
    uid: a3f8dc01-0c1b-43b6-bf79-a80eab004c64
- apiVersion: v1
  data:
    redis.conf: |
      io-threads 8
      io-threads-do-reads yes
      port 6379
      tls-port 0

      tls-cert-file /keys/server.crt
      tls-key-file /keys/server.key

      tls-auth-clients no
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: social-graph-redis
    name: social-graph-redis
    namespace: default
    resourceVersion: "7656912"
    uid: 2575af75-2294-4e0a-83f7-17597698fbfb
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: social-graph-service
    name: social-graph-service
    namespace: default
    resourceVersion: "7656923"
    uid: 258d4d63-9a8d-4c4c-a05f-02339c180059
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: text-service
    name: text-service
    namespace: default
    resourceVersion: "7656929"
    uid: 63b7aa83-5270-420a-bb62-8df83d6ab7b8
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: unique-id-service
    name: unique-id-service
    namespace: default
    resourceVersion: "7656925"
    uid: 18a1ba42-b59e-4073-92e9-b1a85e070087
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: url-shorten-memcached
    name: url-shorten-memcached
    namespace: default
    resourceVersion: "7656928"
    uid: ff832d17-646c-4f56-905b-4feebaa00560
- apiVersion: v1
  data:
    mongod.conf: |
      net:
        tls:
          mode: disabled
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: url-shorten-mongodb
    name: url-shorten-mongodb
    namespace: default
    resourceVersion: "7656921"
    uid: 201281ed-0fbe-4bd7-b4c8-40d511beaeef
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: url-shorten-service
    name: url-shorten-service
    namespace: default
    resourceVersion: "7656927"
    uid: a14b5deb-4d2a-449d-934e-1713b9dbcc1e
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: user-memcached
    name: user-memcached
    namespace: default
    resourceVersion: "7656926"
    uid: 36c2d262-adb5-4204-8ddd-8bcff8d38757
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: user-mention-service
    name: user-mention-service
    namespace: default
    resourceVersion: "7656924"
    uid: 806a2b1b-31a9-4aea-89b3-63f1a83c25ad
- apiVersion: v1
  data:
    mongod.conf: |
      net:
        tls:
          mode: disabled
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: user-mongodb
    name: user-mongodb
    namespace: default
    resourceVersion: "7656910"
    uid: a4ad101b-f7bc-4727-9e7b-71eb5bfa87b4
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: user-service
    name: user-service
    namespace: default
    resourceVersion: "7656918"
    uid: 15bad86b-2c6f-4202-8010-f4d33774b69a
- apiVersion: v1
  data:
    mongod.conf: |
      net:
        tls:
          mode: disabled
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: user-timeline-mongodb
    name: user-timeline-mongodb
    namespace: default
    resourceVersion: "7656915"
    uid: d81f2113-cc0e-48cb-ae2c-9e106bceafb2
- apiVersion: v1
  data:
    redis.conf: |
      io-threads 8
      io-threads-do-reads yes
      port 6379
      tls-port 0

      tls-cert-file /keys/server.crt
      tls-key-file /keys/server.key

      tls-auth-clients no
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: user-timeline-redis
    name: user-timeline-redis
    namespace: default
    resourceVersion: "7656916"
    uid: 1b836339-4846-4ec1-944b-6b91c0bbc73a
- apiVersion: v1
  data:
    jaeger-config.yml: |
      disabled: false
      reporter:
        logSpans: false
        localAgentHostPort: "jaeger:6831"
        queueSize: 1000000
        bufferFlushInterval: 10
      sampler:
        type: "probabilistic"
        param: 0.01
    service-config.json: |
      {
          "secret": "secret",
          "social-graph-service": {
            "addr": "social-graph-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-mongodb": {
            "addr": "social-graph-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "social-graph-redis": {
            "addr": "social-graph-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "write-home-timeline-service": {
            "addr": "write-home-timeline-service",
            "port": 9090,
            "workers": 32,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "write-home-timeline-rabbitmq": {
            "addr": "write-home-timeline-rabbitmq",
            "port": 5672,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-redis": {
            "addr": "home-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "compose-post-service": {
            "addr": "compose-post-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "compose-post-redis": {
            "addr": "compose-post-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "user-timeline-service": {
            "addr": "user-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-mongodb": {
            "addr": "user-timeline-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-timeline-redis": {
            "addr": "user-timeline-redis",
            "port": 6379,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "use_cluster": 0
          },
          "post-storage-service": {
            "addr": "post-storage-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-mongodb": {
            "addr": "post-storage-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "post-storage-memcached": {
            "addr": "post-storage-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "unique-id-service": {
            "addr": "unique-id-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "media-service": {
            "addr": "media-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-mongodb": {
            "addr": "media-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "media-memcached": {
            "addr": "media-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "media-frontend": {
            "addr": "media-frontend",
            "port": 8081,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "text-service": {
            "addr": "text-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-mention-service": {
            "addr": "user-mention-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-service": {
            "addr": "url-shorten-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "url-shorten-memcached": {
            "addr": "url-shorten-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "url-shorten-mongodb": {
            "addr": "url-shorten-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "user-service": {
            "addr": "user-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "netif": "eth0"
          },
          "user-memcached": {
            "addr": "user-memcached",
            "port": 11211,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000,
            "binary_protocol": 1
          },
          "user-mongodb": {
            "addr": "user-mongodb",
            "port": 27017,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "home-timeline-service": {
            "addr": "home-timeline-service",
            "port": 9090,
            "connections": 512,
            "timeout_ms": 10000,
            "keepalive_ms": 10000
          },
          "ssl": {
            "enabled": false,
            "caPath": "/keys/CA.pem",
            "ciphers": "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH",
            "serverKeyPath": "/keys/server.key",
            "serverCertPath": "/keys/server.crt"
          }
        }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: v1
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      socialnetwork/service: user-timeline-service
    name: user-timeline-service
    namespace: default
    resourceVersion: "7656908"
    uid: 7ca3f84c-2e4a-4b5d-ac58-bc8df7f1d5a0
- apiVersion: v1
  data:
    release: 
  kind: Secret
  metadata:
    creationTimestamp: "2022-10-11T16:16:09Z"
    labels:
      modifiedAt: "1665504974"
      name: v1
      owner: helm
      status: deployed
      version: "1"
    name: sh.helm.release.v1.v1.v1
    namespace: default
    resourceVersion: "7657104"
    uid: 870be99c-b55f-4b91-b797-c154248defcc
  type: helm.sh/release.v1
kind: List
metadata: {}
---
