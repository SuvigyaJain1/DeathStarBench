<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1174.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1157" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1157" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (1 samples, 2.70%)</title><rect x="41.9" y="981" width="31.9" height="15.0" fill="rgb(235,28,10)" rx="2" ry="2" />
<text  x="44.89" y="991.5" >do..</text>
</g>
<g >
<title>vfs_writev (1 samples, 2.70%)</title><rect x="1126.2" y="805" width="31.9" height="15.0" fill="rgb(216,127,12)" rx="2" ry="2" />
<text  x="1129.22" y="815.5" >vf..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::createCodec(Envoy::Buffer::Instance&amp;) (1 samples, 2.70%)</title><rect x="807.3" y="917" width="31.9" height="15.0" fill="rgb(251,160,16)" rx="2" ry="2" />
<text  x="810.30" y="927.5" >En..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 2.70%)</title><rect x="137.6" y="1061" width="31.9" height="15.0" fill="rgb(245,64,15)" rx="2" ry="2" />
<text  x="140.57" y="1071.5" >en..</text>
</g>
<g >
<title>writev (1 samples, 2.70%)</title><rect x="1126.2" y="901" width="31.9" height="15.0" fill="rgb(246,14,14)" rx="2" ry="2" />
<text  x="1129.22" y="911.5" >wr..</text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 2.70%)</title><rect x="392.7" y="677" width="31.9" height="15.0" fill="rgb(245,200,5)" rx="2" ry="2" />
<text  x="395.70" y="687.5" >un..</text>
</g>
<g >
<title>dog:workers_gua (2 samples, 5.41%)</title><rect x="73.8" y="1109" width="63.8" height="15.0" fill="rgb(249,70,4)" rx="2" ry="2" />
<text  x="76.78" y="1119.5" >dog:wor..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2 samples, 5.41%)</title><rect x="807.3" y="997" width="63.8" height="15.0" fill="rgb(223,160,34)" rx="2" ry="2" />
<text  x="810.30" y="1007.5" >std::__..</text>
</g>
<g >
<title>start_thread (8 samples, 21.62%)</title><rect x="934.9" y="1093" width="255.1" height="15.0" fill="rgb(214,46,44)" rx="2" ry="2" />
<text  x="937.86" y="1103.5" >start_thread</text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 2.70%)</title><rect x="488.4" y="885" width="31.9" height="15.0" fill="rgb(206,5,33)" rx="2" ry="2" />
<text  x="491.38" y="895.5" >ev..</text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="181" width="31.9" height="15.0" fill="rgb(233,194,3)" rx="2" ry="2" />
<text  x="1129.22" y="191.5" >ip..</text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (1 samples, 2.70%)</title><rect x="1126.2" y="1013" width="31.9" height="15.0" fill="rgb(237,91,34)" rx="2" ry="2" />
<text  x="1129.22" y="1023.5" >En..</text>
</g>
<g >
<title>readv (1 samples, 2.70%)</title><rect x="392.7" y="869" width="31.9" height="15.0" fill="rgb(230,98,11)" rx="2" ry="2" />
<text  x="395.70" y="879.5" >re..</text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 2.70%)</title><rect x="998.6" y="885" width="31.9" height="15.0" fill="rgb(210,84,27)" rx="2" ry="2" />
<text  x="1001.65" y="895.5" >hr..</text>
</g>
<g >
<title>__schedule (1 samples, 2.70%)</title><rect x="615.9" y="853" width="31.9" height="15.0" fill="rgb(244,190,4)" rx="2" ry="2" />
<text  x="618.95" y="863.5" >__..</text>
</g>
<g >
<title>ep_poll (1 samples, 2.70%)</title><rect x="105.7" y="933" width="31.9" height="15.0" fill="rgb(226,48,12)" rx="2" ry="2" />
<text  x="108.68" y="943.5" >ep..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 2.70%)</title><rect x="41.9" y="837" width="31.9" height="15.0" fill="rgb(241,124,25)" rx="2" ry="2" />
<text  x="44.89" y="847.5" >fi..</text>
</g>
<g >
<title>event_base_loop (1 samples, 2.70%)</title><rect x="105.7" y="1045" width="31.9" height="15.0" fill="rgb(225,113,20)" rx="2" ry="2" />
<text  x="108.68" y="1055.5" >ev..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (1 samples, 2.70%)</title><rect x="1126.2" y="917" width="31.9" height="15.0" fill="rgb(247,141,29)" rx="2" ry="2" />
<text  x="1129.22" y="927.5" >En..</text>
</g>
<g >
<title>Envoy::MainCommonBase::run() (13 samples, 35.14%)</title><rect x="169.5" y="1045" width="414.6" height="15.0" fill="rgb(254,101,32)" rx="2" ry="2" />
<text  x="172.46" y="1055.5" >Envoy::MainCommonBase::run()</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 2.70%)</title><rect x="1126.2" y="293" width="31.9" height="15.0" fill="rgb(213,107,26)" rx="2" ry="2" />
<text  x="1129.22" y="303.5" >tc..</text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 2.70%)</title><rect x="1126.2" y="661" width="31.9" height="15.0" fill="rgb(246,82,1)" rx="2" ry="2" />
<text  x="1129.22" y="671.5" >__..</text>
</g>
<g >
<title>schedule (1 samples, 2.70%)</title><rect x="41.9" y="885" width="31.9" height="15.0" fill="rgb(214,149,23)" rx="2" ry="2" />
<text  x="44.89" y="895.5" >sc..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 2.70%)</title><rect x="1126.2" y="405" width="31.9" height="15.0" fill="rgb(240,212,12)" rx="2" ry="2" />
<text  x="1129.22" y="415.5" >__..</text>
</g>
<g >
<title>inet_sendmsg (1 samples, 2.70%)</title><rect x="1126.2" y="725" width="31.9" height="15.0" fill="rgb(216,146,4)" rx="2" ry="2" />
<text  x="1129.22" y="735.5" >in..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 2.70%)</title><rect x="41.9" y="901" width="31.9" height="15.0" fill="rgb(248,203,31)" rx="2" ry="2" />
<text  x="44.89" y="911.5" >sc..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7&gt;, void ()&gt;::operator()() (1 samples, 2.70%)</title><rect x="552.2" y="997" width="31.9" height="15.0" fill="rgb(253,227,52)" rx="2" ry="2" />
<text  x="555.16" y="1007.5" >st..</text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (2 samples, 5.41%)</title><rect x="807.3" y="1013" width="63.8" height="15.0" fill="rgb(222,145,22)" rx="2" ry="2" />
<text  x="810.30" y="1023.5" >Envoy::..</text>
</g>
<g >
<title>tcp_send_ack (1 samples, 2.70%)</title><rect x="1126.2" y="229" width="31.9" height="15.0" fill="rgb(223,47,27)" rx="2" ry="2" />
<text  x="1129.22" y="239.5" >tc..</text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 2.70%)</title><rect x="105.7" y="885" width="31.9" height="15.0" fill="rgb(220,90,35)" rx="2" ry="2" />
<text  x="108.68" y="895.5" >hr..</text>
</g>
<g >
<title>envoy (15 samples, 40.54%)</title><rect x="137.6" y="1109" width="478.3" height="15.0" fill="rgb(253,71,46)" rx="2" ry="2" />
<text  x="140.57" y="1119.5" >envoy</text>
</g>
<g >
<title>__x64_sys_epoll_wait (2 samples, 5.41%)</title><rect x="265.1" y="933" width="63.8" height="15.0" fill="rgb(236,36,19)" rx="2" ry="2" />
<text  x="268.14" y="943.5" >__x64_s..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 2.70%)</title><rect x="456.5" y="869" width="31.9" height="15.0" fill="rgb(241,40,19)" rx="2" ry="2" />
<text  x="459.49" y="879.5" >do..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 2.70%)</title><rect x="297.0" y="885" width="31.9" height="15.0" fill="rgb(206,152,9)" rx="2" ry="2" />
<text  x="300.03" y="895.5" >sc..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1 samples, 2.70%)</title><rect x="839.2" y="869" width="31.9" height="15.0" fill="rgb(252,34,11)" rx="2" ry="2" />
<text  x="842.19" y="879.5" >En..</text>
</g>
<g >
<title>ep_poll (1 samples, 2.70%)</title><rect x="41.9" y="933" width="31.9" height="15.0" fill="rgb(250,142,31)" rx="2" ry="2" />
<text  x="44.89" y="943.5" >ep..</text>
</g>
<g >
<title>Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;) (1 samples, 2.70%)</title><rect x="807.3" y="885" width="31.9" height="15.0" fill="rgb(219,34,25)" rx="2" ry="2" />
<text  x="810.30" y="895.5" >En..</text>
</g>
<g >
<title>Envoy::Extensions::TransportSockets::Tls::ContextManagerImpl::daysUntilFirstCertExpires() const (2 samples, 5.41%)</title><rect x="328.9" y="901" width="63.8" height="15.0" fill="rgb(247,90,17)" rx="2" ry="2" />
<text  x="331.92" y="911.5" >Envoy::..</text>
</g>
<g >
<title>- (1 samples, 2.70%)</title><rect x="392.7" y="853" width="31.9" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="395.70" y="863.5" >-</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (1 samples, 2.70%)</title><rect x="392.7" y="901" width="31.9" height="15.0" fill="rgb(225,76,26)" rx="2" ry="2" />
<text  x="395.70" y="911.5" >En..</text>
</g>
<g >
<title>net_rx_action (1 samples, 2.70%)</title><rect x="137.6" y="773" width="31.9" height="15.0" fill="rgb(236,153,7)" rx="2" ry="2" />
<text  x="140.57" y="783.5" >ne..</text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 2.70%)</title><rect x="1126.2" y="197" width="31.9" height="15.0" fill="rgb(250,94,52)" rx="2" ry="2" />
<text  x="1129.22" y="207.5" >__..</text>
</g>
<g >
<title>sock_sendmsg (1 samples, 2.70%)</title><rect x="1126.2" y="741" width="31.9" height="15.0" fill="rgb(231,201,38)" rx="2" ry="2" />
<text  x="1129.22" y="751.5" >so..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 2.70%)</title><rect x="297.0" y="869" width="31.9" height="15.0" fill="rgb(233,147,29)" rx="2" ry="2" />
<text  x="300.03" y="879.5" >sc..</text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="597" width="31.9" height="15.0" fill="rgb(231,197,7)" rx="2" ry="2" />
<text  x="1129.22" y="607.5" >__..</text>
</g>
<g >
<title>Envoy::ConstSingleton&lt;Envoy::Runtime::RuntimeFeatures&gt;::get() (1 samples, 2.70%)</title><rect x="807.3" y="821" width="31.9" height="15.0" fill="rgb(213,193,36)" rx="2" ry="2" />
<text  x="810.30" y="831.5" >En..</text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (1 samples, 2.70%)</title><rect x="807.3" y="837" width="31.9" height="15.0" fill="rgb(252,13,1)" rx="2" ry="2" />
<text  x="810.30" y="847.5" >En..</text>
</g>
<g >
<title>ip_rcv (1 samples, 2.70%)</title><rect x="1126.2" y="373" width="31.9" height="15.0" fill="rgb(208,147,22)" rx="2" ry="2" />
<text  x="1129.22" y="383.5" >ip..</text>
</g>
<g >
<title>finish_task_switch (2 samples, 5.41%)</title><rect x="1030.5" y="837" width="63.8" height="15.0" fill="rgb(212,221,20)" rx="2" ry="2" />
<text  x="1033.54" y="847.5" >finish_..</text>
</g>
<g >
<title>do_epoll_wait (4 samples, 10.81%)</title><rect x="998.6" y="949" width="127.6" height="15.0" fill="rgb(231,91,33)" rx="2" ry="2" />
<text  x="1001.65" y="959.5" >do_epoll_wait</text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 2.70%)</title><rect x="392.7" y="613" width="31.9" height="15.0" fill="rgb(222,17,23)" rx="2" ry="2" />
<text  x="395.70" y="623.5" >si..</text>
</g>
<g >
<title>clock_gettime (1 samples, 2.70%)</title><rect x="903.0" y="1093" width="31.9" height="15.0" fill="rgb(216,127,34)" rx="2" ry="2" />
<text  x="905.97" y="1103.5" >cl..</text>
</g>
<g >
<title>do_readv (1 samples, 2.70%)</title><rect x="392.7" y="789" width="31.9" height="15.0" fill="rgb(231,68,17)" rx="2" ry="2" />
<text  x="395.70" y="799.5" >do..</text>
</g>
<g >
<title>__ip_finish_output (1 samples, 2.70%)</title><rect x="1126.2" y="101" width="31.9" height="15.0" fill="rgb(245,221,43)" rx="2" ry="2" />
<text  x="1129.22" y="111.5" >__..</text>
</g>
<g >
<title>- (2 samples, 5.41%)</title><rect x="265.1" y="981" width="63.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="268.14" y="991.5" >-</text>
</g>
<g >
<title>ip_output (1 samples, 2.70%)</title><rect x="1126.2" y="565" width="31.9" height="15.0" fill="rgb(228,4,30)" rx="2" ry="2" />
<text  x="1129.22" y="575.5" >ip..</text>
</g>
<g >
<title>Envoy::ThreadLocal::TypedSlot&lt;Envoy::Stats::ThreadLocalStoreImpl::TlsCache&gt;::runOnAllThreads(std::__1::function&lt;void (Envoy::OptRef&lt;Envoy::Stats::ThreadLocalStoreImpl::TlsCache&gt;)&gt; const&amp;, std::__1::function&lt;void ()&gt; const&amp;) (1 samples, 2.70%)</title><rect x="488.4" y="949" width="31.9" height="15.0" fill="rgb(230,208,37)" rx="2" ry="2" />
<text  x="491.38" y="959.5" >En..</text>
</g>
<g >
<title>iptable_raw_hook (1 samples, 2.70%)</title><rect x="137.6" y="677" width="31.9" height="15.0" fill="rgb(232,158,17)" rx="2" ry="2" />
<text  x="140.57" y="687.5" >ip..</text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (9 samples, 24.32%)</title><rect x="615.9" y="1061" width="287.1" height="15.0" fill="rgb(215,196,17)" rx="2" ry="2" />
<text  x="618.95" y="1071.5" >Envoy::Server::WorkerImpl::threadRouti..</text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackCurrentIteration() (1 samples, 2.70%)</title><rect x="424.6" y="949" width="31.9" height="15.0" fill="rgb(250,150,31)" rx="2" ry="2" />
<text  x="427.59" y="959.5" >En..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 2.70%)</title><rect x="1126.2" y="517" width="31.9" height="15.0" fill="rgb(226,208,25)" rx="2" ry="2" />
<text  x="1129.22" y="527.5" >ip..</text>
</g>
<g >
<title>_copy_to_iter (1 samples, 2.70%)</title><rect x="392.7" y="597" width="31.9" height="15.0" fill="rgb(215,190,41)" rx="2" ry="2" />
<text  x="395.70" y="607.5" >_c..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 2.70%)</title><rect x="297.0" y="821" width="31.9" height="15.0" fill="rgb(218,116,54)" rx="2" ry="2" />
<text  x="300.03" y="831.5" >fi..</text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::run() (13 samples, 35.14%)</title><rect x="169.5" y="1029" width="414.6" height="15.0" fill="rgb(238,118,21)" rx="2" ry="2" />
<text  x="172.46" y="1039.5" >Envoy::Server::InstanceImpl::run()</text>
</g>
<g >
<title>__lock_text_start (1 samples, 2.70%)</title><rect x="998.6" y="853" width="31.9" height="15.0" fill="rgb(230,92,29)" rx="2" ry="2" />
<text  x="1001.65" y="863.5" >__..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;)::$_13, std::__1::allocator&lt;Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;)::$_13&gt;, void ()&gt;::operator()() (2 samples, 5.41%)</title><rect x="328.9" y="965" width="63.8" height="15.0" fill="rgb(217,35,47)" rx="2" ry="2" />
<text  x="331.92" y="975.5" >std::__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 2.70%)</title><rect x="456.5" y="885" width="31.9" height="15.0" fill="rgb(218,3,28)" rx="2" ry="2" />
<text  x="459.49" y="895.5" >en..</text>
</g>
<g >
<title>epoll_wait (4 samples, 10.81%)</title><rect x="998.6" y="1029" width="127.6" height="15.0" fill="rgb(206,126,31)" rx="2" ry="2" />
<text  x="1001.65" y="1039.5" >epoll_wait</text>
</g>
<g >
<title>epoll_wait (5 samples, 13.51%)</title><rect x="615.9" y="1029" width="159.5" height="15.0" fill="rgb(244,202,38)" rx="2" ry="2" />
<text  x="618.95" y="1039.5" >epoll_wait</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 5.41%)</title><rect x="265.1" y="949" width="63.8" height="15.0" fill="rgb(252,46,41)" rx="2" ry="2" />
<text  x="268.14" y="959.5" >do_sysc..</text>
</g>
<g >
<title>__write (1 samples, 2.70%)</title><rect x="456.5" y="917" width="31.9" height="15.0" fill="rgb(245,220,21)" rx="2" ry="2" />
<text  x="459.49" y="927.5" >__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 2.70%)</title><rect x="1126.2" y="869" width="31.9" height="15.0" fill="rgb(233,199,30)" rx="2" ry="2" />
<text  x="1129.22" y="879.5" >en..</text>
</g>
<g >
<title>do_epoll_wait (5 samples, 13.51%)</title><rect x="615.9" y="949" width="159.5" height="15.0" fill="rgb(224,40,2)" rx="2" ry="2" />
<text  x="618.95" y="959.5" >do_epoll_wait</text>
</g>
<g >
<title>unix_stream_read_actor (1 samples, 2.70%)</title><rect x="392.7" y="661" width="31.9" height="15.0" fill="rgb(225,111,15)" rx="2" ry="2" />
<text  x="395.70" y="671.5" >un..</text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 2.70%)</title><rect x="1126.2" y="245" width="31.9" height="15.0" fill="rgb(228,212,15)" rx="2" ry="2" />
<text  x="1129.22" y="255.5" >__..</text>
</g>
<g >
<title>schedule_hrtimeout_range (5 samples, 13.51%)</title><rect x="615.9" y="917" width="159.5" height="15.0" fill="rgb(232,190,22)" rx="2" ry="2" />
<text  x="618.95" y="927.5" >schedule_hrtimeout_r..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 2.70%)</title><rect x="1126.2" y="501" width="31.9" height="15.0" fill="rgb(219,90,32)" rx="2" ry="2" />
<text  x="1129.22" y="511.5" >__..</text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 2.70%)</title><rect x="456.5" y="933" width="31.9" height="15.0" fill="rgb(226,3,13)" rx="2" ry="2" />
<text  x="459.49" y="943.5" >ev..</text>
</g>
<g >
<title>ip_local_out (1 samples, 2.70%)</title><rect x="1126.2" y="149" width="31.9" height="15.0" fill="rgb(242,58,20)" rx="2" ry="2" />
<text  x="1129.22" y="159.5" >ip..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 2.70%)</title><rect x="137.6" y="789" width="31.9" height="15.0" fill="rgb(205,44,19)" rx="2" ry="2" />
<text  x="140.57" y="799.5" >__..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 2.70%)</title><rect x="137.6" y="725" width="31.9" height="15.0" fill="rgb(221,18,24)" rx="2" ry="2" />
<text  x="140.57" y="735.5" >__..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (1 samples, 2.70%)</title><rect x="392.7" y="949" width="31.9" height="15.0" fill="rgb(208,143,31)" rx="2" ry="2" />
<text  x="395.70" y="959.5" >En..</text>
</g>
<g >
<title>finish_task_switch (4 samples, 10.81%)</title><rect x="647.8" y="853" width="127.6" height="15.0" fill="rgb(239,207,13)" rx="2" ry="2" />
<text  x="650.84" y="863.5" >finish_task_switch</text>
</g>
<g >
<title>__x64_sys_epoll_wait (5 samples, 13.51%)</title><rect x="615.9" y="965" width="159.5" height="15.0" fill="rgb(216,217,43)" rx="2" ry="2" />
<text  x="618.95" y="975.5" >__x64_sys_epoll_wait</text>
</g>
<g >
<title>dog:main_thread (2 samples, 5.41%)</title><rect x="10.0" y="1109" width="63.8" height="15.0" fill="rgb(216,170,14)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >dog:mai..</text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::runOnAllThreads(std::__1::function&lt;void (std::__1::shared_ptr&lt;Envoy::ThreadLocal::ThreadLocalObject&gt;)&gt; const&amp;, std::__1::function&lt;void ()&gt; const&amp;) (1 samples, 2.70%)</title><rect x="488.4" y="933" width="31.9" height="15.0" fill="rgb(230,74,40)" rx="2" ry="2" />
<text  x="491.38" y="943.5" >En..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="37" width="31.9" height="15.0" fill="rgb(240,42,7)" rx="2" ry="2" />
<text  x="1129.22" y="47.5" >__..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 2.70%)</title><rect x="105.7" y="917" width="31.9" height="15.0" fill="rgb(247,123,50)" rx="2" ry="2" />
<text  x="108.68" y="927.5" >sc..</text>
</g>
<g >
<title>main (13 samples, 35.14%)</title><rect x="169.5" y="1077" width="414.6" height="15.0" fill="rgb(228,58,44)" rx="2" ry="2" />
<text  x="172.46" y="1087.5" >main</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 2.70%)</title><rect x="392.7" y="837" width="31.9" height="15.0" fill="rgb(217,174,11)" rx="2" ry="2" />
<text  x="395.70" y="847.5" >en..</text>
</g>
<g >
<title>- (1 samples, 2.70%)</title><rect x="105.7" y="1013" width="31.9" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="108.68" y="1023.5" >-</text>
</g>
<g >
<title>process_backlog (1 samples, 2.70%)</title><rect x="137.6" y="757" width="31.9" height="15.0" fill="rgb(227,82,41)" rx="2" ry="2" />
<text  x="140.57" y="767.5" >pr..</text>
</g>
<g >
<title>- (5 samples, 13.51%)</title><rect x="615.9" y="1013" width="159.5" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="618.95" y="1023.5" >-</text>
</g>
<g >
<title>__ip_finish_output (1 samples, 2.70%)</title><rect x="137.6" y="869" width="31.9" height="15.0" fill="rgb(227,111,53)" rx="2" ry="2" />
<text  x="140.57" y="879.5" >__..</text>
</g>
<g >
<title>ep_poll (4 samples, 10.81%)</title><rect x="998.6" y="933" width="127.6" height="15.0" fill="rgb(236,0,44)" rx="2" ry="2" />
<text  x="1001.65" y="943.5" >ep_poll</text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 2.70%)</title><rect x="839.2" y="917" width="31.9" height="15.0" fill="rgb(216,21,9)" rx="2" ry="2" />
<text  x="842.19" y="927.5" >En..</text>
</g>
<g >
<title>event_base_loop (2 samples, 5.41%)</title><rect x="10.0" y="1045" width="63.8" height="15.0" fill="rgb(233,49,27)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >event_b..</text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::set(std::__1::function&lt;std::__1::shared_ptr&lt;Envoy::ThreadLocal::ThreadLocalObject&gt; (Envoy::Event::Dispatcher&amp;)&gt;) (2 samples, 5.41%)</title><rect x="424.6" y="965" width="63.8" height="15.0" fill="rgb(223,189,29)" rx="2" ry="2" />
<text  x="427.59" y="975.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::readv(unsigned long, Envoy::Buffer::RawSlice*, unsigned long) (1 samples, 2.70%)</title><rect x="392.7" y="885" width="31.9" height="15.0" fill="rgb(207,134,28)" rx="2" ry="2" />
<text  x="395.70" y="895.5" >En..</text>
</g>
<g >
<title>event_base_loop (8 samples, 21.62%)</title><rect x="934.9" y="1045" width="255.1" height="15.0" fill="rgb(237,10,37)" rx="2" ry="2" />
<text  x="937.86" y="1055.5" >event_base_loop</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (1 samples, 2.70%)</title><rect x="1126.2" y="965" width="31.9" height="15.0" fill="rgb(242,163,29)" rx="2" ry="2" />
<text  x="1129.22" y="975.5" >En..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 2.70%)</title><rect x="424.6" y="917" width="31.9" height="15.0" fill="rgb(241,138,13)" rx="2" ry="2" />
<text  x="427.59" y="927.5" >pt..</text>
</g>
<g >
<title>sock_recvmsg (1 samples, 2.70%)</title><rect x="392.7" y="709" width="31.9" height="15.0" fill="rgb(210,227,40)" rx="2" ry="2" />
<text  x="395.70" y="719.5" >so..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 2.70%)</title><rect x="105.7" y="853" width="31.9" height="15.0" fill="rgb(239,64,30)" rx="2" ry="2" />
<text  x="108.68" y="863.5" >__..</text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 2.70%)</title><rect x="137.6" y="821" width="31.9" height="15.0" fill="rgb(235,219,29)" rx="2" ry="2" />
<text  x="140.57" y="831.5" >do..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="53" width="31.9" height="15.0" fill="rgb(215,35,27)" rx="2" ry="2" />
<text  x="1129.22" y="63.5" >__..</text>
</g>
<g >
<title>__schedule (1 samples, 2.70%)</title><rect x="41.9" y="869" width="31.9" height="15.0" fill="rgb(237,100,46)" rx="2" ry="2" />
<text  x="44.89" y="879.5" >__..</text>
</g>
<g >
<title>epoll_wait (3 samples, 8.11%)</title><rect x="233.2" y="997" width="95.7" height="15.0" fill="rgb(210,97,24)" rx="2" ry="2" />
<text  x="236.24" y="1007.5" >epoll_wait</text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::flushStats() (1 samples, 2.70%)</title><rect x="488.4" y="981" width="31.9" height="15.0" fill="rgb(250,48,30)" rx="2" ry="2" />
<text  x="491.38" y="991.5" >En..</text>
</g>
<g >
<title>- (1 samples, 2.70%)</title><rect x="41.9" y="1013" width="31.9" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="44.89" y="1023.5" >-</text>
</g>
<g >
<title>do_epoll_wait (1 samples, 2.70%)</title><rect x="105.7" y="949" width="31.9" height="15.0" fill="rgb(209,105,29)" rx="2" ry="2" />
<text  x="108.68" y="959.5" >do..</text>
</g>
<g >
<title>__libc_start_main (13 samples, 35.14%)</title><rect x="169.5" y="1093" width="414.6" height="15.0" fill="rgb(227,78,18)" rx="2" ry="2" />
<text  x="172.46" y="1103.5" >__libc_start_main</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (1 samples, 2.70%)</title><rect x="1126.2" y="933" width="31.9" height="15.0" fill="rgb(231,155,49)" rx="2" ry="2" />
<text  x="1129.22" y="943.5" >En..</text>
</g>
<g >
<title>all (37 samples, 100%)</title><rect x="10.0" y="1125" width="1180.0" height="15.0" fill="rgb(248,73,18)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (1 samples, 2.70%)</title><rect x="1126.2" y="981" width="31.9" height="15.0" fill="rgb(231,46,45)" rx="2" ry="2" />
<text  x="1129.22" y="991.5" >En..</text>
</g>
<g >
<title>schedule_hrtimeout_range (4 samples, 10.81%)</title><rect x="998.6" y="917" width="127.6" height="15.0" fill="rgb(227,205,33)" rx="2" ry="2" />
<text  x="1001.65" y="927.5" >schedule_hrtimeo..</text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="165" width="31.9" height="15.0" fill="rgb(248,137,16)" rx="2" ry="2" />
<text  x="1129.22" y="175.5" >__..</text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::ServerConnectionImpl(Envoy::Network::Connection&amp;, Envoy::Http::Http1::CodecStats&amp;, Envoy::Http::ServerConnectionCallbacks&amp;, Envoy::Http::Http1Settings const&amp;, unsigned int, unsigned int, envoy::config::core::v3::HttpProtocolOptions_HeadersWithUnderscoresAction) (1 samples, 2.70%)</title><rect x="807.3" y="853" width="31.9" height="15.0" fill="rgb(209,114,35)" rx="2" ry="2" />
<text  x="810.30" y="863.5" >En..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageBegin() (1 samples, 2.70%)</title><rect x="839.2" y="821" width="31.9" height="15.0" fill="rgb(212,160,30)" rx="2" ry="2" />
<text  x="842.19" y="831.5" >En..</text>
</g>
<g >
<title>event_process_active_single_queue (6 samples, 16.22%)</title><rect x="328.9" y="997" width="191.4" height="15.0" fill="rgb(207,139,1)" rx="2" ry="2" />
<text  x="331.92" y="1007.5" >event_process_active_sing..</text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (1 samples, 2.70%)</title><rect x="392.7" y="917" width="31.9" height="15.0" fill="rgb(208,217,14)" rx="2" ry="2" />
<text  x="395.70" y="927.5" >En..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 2.70%)</title><rect x="1126.2" y="357" width="31.9" height="15.0" fill="rgb(215,16,35)" rx="2" ry="2" />
<text  x="1129.22" y="367.5" >ip..</text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*, Envoy::Network::ReadBufferSource&amp;) (2 samples, 5.41%)</title><rect x="807.3" y="949" width="63.8" height="15.0" fill="rgb(253,196,1)" rx="2" ry="2" />
<text  x="810.30" y="959.5" >Envoy::..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4, std::__1::allocator&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4&gt;, void ()&gt;::operator()() (1 samples, 2.70%)</title><rect x="105.7" y="1061" width="31.9" height="15.0" fill="rgb(211,104,20)" rx="2" ry="2" />
<text  x="108.68" y="1071.5" >st..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 2.70%)</title><rect x="137.6" y="853" width="31.9" height="15.0" fill="rgb(218,138,22)" rx="2" ry="2" />
<text  x="140.57" y="863.5" >ip..</text>
</g>
<g >
<title>start_thread (1 samples, 2.70%)</title><rect x="105.7" y="1093" width="31.9" height="15.0" fill="rgb(213,4,10)" rx="2" ry="2" />
<text  x="108.68" y="1103.5" >st..</text>
</g>
<g >
<title>schedule (1 samples, 2.70%)</title><rect x="297.0" y="853" width="31.9" height="15.0" fill="rgb(214,53,10)" rx="2" ry="2" />
<text  x="300.03" y="863.5" >sc..</text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 2.70%)</title><rect x="392.7" y="629" width="31.9" height="15.0" fill="rgb(252,152,5)" rx="2" ry="2" />
<text  x="395.70" y="639.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 2.70%)</title><rect x="105.7" y="981" width="31.9" height="15.0" fill="rgb(252,77,53)" rx="2" ry="2" />
<text  x="108.68" y="991.5" >do..</text>
</g>
<g >
<title>do_iter_write (1 samples, 2.70%)</title><rect x="1126.2" y="789" width="31.9" height="15.0" fill="rgb(213,165,42)" rx="2" ry="2" />
<text  x="1129.22" y="799.5" >do..</text>
</g>
<g >
<title>udp_sendmsg (1 samples, 2.70%)</title><rect x="137.6" y="965" width="31.9" height="15.0" fill="rgb(240,152,22)" rx="2" ry="2" />
<text  x="140.57" y="975.5" >ud..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 2.70%)</title><rect x="392.7" y="821" width="31.9" height="15.0" fill="rgb(208,12,49)" rx="2" ry="2" />
<text  x="395.70" y="831.5" >do..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="69" width="31.9" height="15.0" fill="rgb(254,100,21)" rx="2" ry="2" />
<text  x="1129.22" y="79.5" >de..</text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;) (1 samples, 2.70%)</title><rect x="488.4" y="965" width="31.9" height="15.0" fill="rgb(224,26,52)" rx="2" ry="2" />
<text  x="491.38" y="975.5" >En..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 2.70%)</title><rect x="1126.2" y="341" width="31.9" height="15.0" fill="rgb(254,107,4)" rx="2" ry="2" />
<text  x="1129.22" y="351.5" >ip..</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 13.51%)</title><rect x="615.9" y="981" width="159.5" height="15.0" fill="rgb(220,45,42)" rx="2" ry="2" />
<text  x="618.95" y="991.5" >do_syscall_64</text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::runOnAllThreads(std::__1::function&lt;void ()&gt;, std::__1::function&lt;void ()&gt;) (1 samples, 2.70%)</title><rect x="488.4" y="917" width="31.9" height="15.0" fill="rgb(247,98,3)" rx="2" ry="2" />
<text  x="491.38" y="927.5" >En..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 2.70%)</title><rect x="41.9" y="965" width="31.9" height="15.0" fill="rgb(241,181,27)" rx="2" ry="2" />
<text  x="44.89" y="975.5" >__..</text>
</g>
<g >
<title>event_active (1 samples, 2.70%)</title><rect x="456.5" y="949" width="31.9" height="15.0" fill="rgb(250,57,36)" rx="2" ry="2" />
<text  x="459.49" y="959.5" >ev..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 2.70%)</title><rect x="137.6" y="1045" width="31.9" height="15.0" fill="rgb(223,188,46)" rx="2" ry="2" />
<text  x="140.57" y="1055.5" >do..</text>
</g>
<g >
<title>ip_local_out (1 samples, 2.70%)</title><rect x="1126.2" y="581" width="31.9" height="15.0" fill="rgb(231,76,7)" rx="2" ry="2" />
<text  x="1129.22" y="591.5" >ip..</text>
</g>
<g >
<title>inet_sendmsg (1 samples, 2.70%)</title><rect x="137.6" y="981" width="31.9" height="15.0" fill="rgb(228,45,30)" rx="2" ry="2" />
<text  x="140.57" y="991.5" >in..</text>
</g>
<g >
<title>ep_poll (2 samples, 5.41%)</title><rect x="265.1" y="901" width="63.8" height="15.0" fill="rgb(233,134,51)" rx="2" ry="2" />
<text  x="268.14" y="911.5" >ep_poll</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 5.41%)</title><rect x="807.3" y="933" width="63.8" height="15.0" fill="rgb(226,79,0)" rx="2" ry="2" />
<text  x="810.30" y="943.5" >Envoy::..</text>
</g>
<g >
<title>do_epoll_wait (1 samples, 2.70%)</title><rect x="41.9" y="949" width="31.9" height="15.0" fill="rgb(207,37,52)" rx="2" ry="2" />
<text  x="44.89" y="959.5" >do..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7&gt;, void ()&gt;::operator()() (1 samples, 2.70%)</title><rect x="871.1" y="1029" width="31.9" height="15.0" fill="rgb(226,62,10)" rx="2" ry="2" />
<text  x="874.08" y="1039.5" >st..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 2.70%)</title><rect x="1126.2" y="389" width="31.9" height="15.0" fill="rgb(214,88,3)" rx="2" ry="2" />
<text  x="1129.22" y="399.5" >__..</text>
</g>
<g >
<title>Envoy::MainCommon::main(int, char**, std::__1::function&lt;void (Envoy::Server::Instance&amp;)&gt;) (13 samples, 35.14%)</title><rect x="169.5" y="1061" width="414.6" height="15.0" fill="rgb(207,213,50)" rx="2" ry="2" />
<text  x="172.46" y="1071.5" >Envoy::MainCommon::main(int, char**, std::__1::function&lt;..</text>
</g>
<g >
<title>sock_write_iter (1 samples, 2.70%)</title><rect x="1126.2" y="757" width="31.9" height="15.0" fill="rgb(208,196,13)" rx="2" ry="2" />
<text  x="1129.22" y="767.5" >so..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 13.51%)</title><rect x="615.9" y="997" width="159.5" height="15.0" fill="rgb(212,129,15)" rx="2" ry="2" />
<text  x="618.95" y="1007.5" >entry_SYSCALL_64_aft..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 2.70%)</title><rect x="998.6" y="869" width="31.9" height="15.0" fill="rgb(238,132,10)" rx="2" ry="2" />
<text  x="1001.65" y="879.5" >__..</text>
</g>
<g >
<title>event_process_active_single_queue (1 samples, 2.70%)</title><rect x="1126.2" y="1029" width="31.9" height="15.0" fill="rgb(251,187,30)" rx="2" ry="2" />
<text  x="1129.22" y="1039.5" >ev..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 2.70%)</title><rect x="137.6" y="805" width="31.9" height="15.0" fill="rgb(221,192,35)" rx="2" ry="2" />
<text  x="140.57" y="815.5" >do..</text>
</g>
<g >
<title>do_epoll_wait (2 samples, 5.41%)</title><rect x="265.1" y="917" width="63.8" height="15.0" fill="rgb(229,106,27)" rx="2" ry="2" />
<text  x="268.14" y="927.5" >do_epol..</text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (1 samples, 2.70%)</title><rect x="584.1" y="1093" width="31.8" height="15.0" fill="rgb(219,49,27)" rx="2" ry="2" />
<text  x="587.05" y="1103.5" >st..</text>
</g>
<g >
<title>eventfd_write (1 samples, 2.70%)</title><rect x="456.5" y="789" width="31.9" height="15.0" fill="rgb(222,85,41)" rx="2" ry="2" />
<text  x="459.49" y="799.5" >ev..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4 samples, 10.81%)</title><rect x="998.6" y="901" width="127.6" height="15.0" fill="rgb(254,214,49)" rx="2" ry="2" />
<text  x="1001.65" y="911.5" >schedule_hrtimeo..</text>
</g>
<g >
<title>vfs_readv (1 samples, 2.70%)</title><rect x="392.7" y="773" width="31.9" height="15.0" fill="rgb(249,109,18)" rx="2" ry="2" />
<text  x="395.70" y="783.5" >vf..</text>
</g>
<g >
<title>wrk:worker_1 (9 samples, 24.32%)</title><rect x="903.0" y="1109" width="287.0" height="15.0" fill="rgb(212,65,11)" rx="2" ry="2" />
<text  x="905.97" y="1119.5" >wrk:worker_1</text>
</g>
<g >
<title>sock_read_iter (1 samples, 2.70%)</title><rect x="392.7" y="725" width="31.9" height="15.0" fill="rgb(225,75,50)" rx="2" ry="2" />
<text  x="395.70" y="735.5" >so..</text>
</g>
<g >
<title>vfs_write (1 samples, 2.70%)</title><rect x="456.5" y="821" width="31.9" height="15.0" fill="rgb(241,89,29)" rx="2" ry="2" />
<text  x="459.49" y="831.5" >vf..</text>
</g>
<g >
<title>__schedule (1 samples, 2.70%)</title><rect x="297.0" y="837" width="31.9" height="15.0" fill="rgb(215,157,18)" rx="2" ry="2" />
<text  x="300.03" y="847.5" >__..</text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 2.70%)</title><rect x="392.7" y="693" width="31.9" height="15.0" fill="rgb(207,229,19)" rx="2" ry="2" />
<text  x="395.70" y="703.5" >un..</text>
</g>
<g >
<title>__sys_sendto (1 samples, 2.70%)</title><rect x="137.6" y="1013" width="31.9" height="15.0" fill="rgb(224,73,0)" rx="2" ry="2" />
<text  x="140.57" y="1023.5" >__..</text>
</g>
<g >
<title>epoll_dispatch (1 samples, 2.70%)</title><rect x="169.5" y="1013" width="31.9" height="15.0" fill="rgb(251,32,24)" rx="2" ry="2" />
<text  x="172.46" y="1023.5" >ep..</text>
</g>
<g >
<title>[unknown] (1 samples, 2.70%)</title><rect x="73.8" y="1093" width="31.9" height="15.0" fill="rgb(206,169,26)" rx="2" ry="2" />
<text  x="76.78" y="1103.5" >[u..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1 samples, 2.70%)</title><rect x="839.2" y="885" width="31.9" height="15.0" fill="rgb(218,17,52)" rx="2" ry="2" />
<text  x="842.19" y="895.5" >En..</text>
</g>
<g >
<title>nf_hook_slow (1 samples, 2.70%)</title><rect x="137.6" y="693" width="31.9" height="15.0" fill="rgb(230,31,23)" rx="2" ry="2" />
<text  x="140.57" y="703.5" >nf..</text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 2.70%)</title><rect x="392.7" y="741" width="31.9" height="15.0" fill="rgb(220,99,51)" rx="2" ry="2" />
<text  x="395.70" y="751.5" >do..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 2.70%)</title><rect x="41.9" y="853" width="31.9" height="15.0" fill="rgb(244,39,51)" rx="2" ry="2" />
<text  x="44.89" y="863.5" >fi..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 2.70%)</title><rect x="297.0" y="805" width="31.9" height="15.0" fill="rgb(226,104,54)" rx="2" ry="2" />
<text  x="300.03" y="815.5" >fi..</text>
</g>
<g >
<title>ip_local_out (1 samples, 2.70%)</title><rect x="137.6" y="917" width="31.9" height="15.0" fill="rgb(219,48,38)" rx="2" ry="2" />
<text  x="140.57" y="927.5" >ip..</text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 2.70%)</title><rect x="392.7" y="581" width="31.9" height="15.0" fill="rgb(212,45,32)" rx="2" ry="2" />
<text  x="395.70" y="591.5" >co..</text>
</g>
<g >
<title>__x64_sys_writev (1 samples, 2.70%)</title><rect x="1126.2" y="837" width="31.9" height="15.0" fill="rgb(250,91,53)" rx="2" ry="2" />
<text  x="1129.22" y="847.5" >__..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 2.70%)</title><rect x="1126.2" y="309" width="31.9" height="15.0" fill="rgb(253,112,7)" rx="2" ry="2" />
<text  x="1129.22" y="319.5" >ip..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (1 samples, 2.70%)</title><rect x="1126.2" y="997" width="31.9" height="15.0" fill="rgb(228,12,1)" rx="2" ry="2" />
<text  x="1129.22" y="1007.5" >st..</text>
</g>
<g >
<title>sock_sendmsg (1 samples, 2.70%)</title><rect x="137.6" y="997" width="31.9" height="15.0" fill="rgb(253,179,14)" rx="2" ry="2" />
<text  x="140.57" y="1007.5" >so..</text>
</g>
<g >
<title>- (4 samples, 10.81%)</title><rect x="998.6" y="1013" width="127.6" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1001.65" y="1023.5" >-</text>
</g>
<g >
<title>X509_get0_notAfter (2 samples, 5.41%)</title><rect x="328.9" y="837" width="63.8" height="15.0" fill="rgb(219,49,40)" rx="2" ry="2" />
<text  x="331.92" y="847.5" >X509_ge..</text>
</g>
<g >
<title>__ip_finish_output (1 samples, 2.70%)</title><rect x="1126.2" y="533" width="31.9" height="15.0" fill="rgb(228,22,14)" rx="2" ry="2" />
<text  x="1129.22" y="543.5" >__..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 2.70%)</title><rect x="105.7" y="965" width="31.9" height="15.0" fill="rgb(238,88,25)" rx="2" ry="2" />
<text  x="108.68" y="975.5" >__..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 2.70%)</title><rect x="1126.2" y="325" width="31.9" height="15.0" fill="rgb(214,113,37)" rx="2" ry="2" />
<text  x="1129.22" y="335.5" >ip..</text>
</g>
<g >
<title>ip_output (1 samples, 2.70%)</title><rect x="1126.2" y="133" width="31.9" height="15.0" fill="rgb(243,71,19)" rx="2" ry="2" />
<text  x="1129.22" y="143.5" >ip..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 2.70%)</title><rect x="137.6" y="741" width="31.9" height="15.0" fill="rgb(223,163,47)" rx="2" ry="2" />
<text  x="140.57" y="751.5" >__..</text>
</g>
<g >
<title>Envoy::Http::TlsCachingDateProviderImpl::onRefreshDate() (2 samples, 5.41%)</title><rect x="424.6" y="981" width="63.8" height="15.0" fill="rgb(233,27,1)" rx="2" ry="2" />
<text  x="427.59" y="991.5" >Envoy::..</text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 2.70%)</title><rect x="1126.2" y="629" width="31.9" height="15.0" fill="rgb(232,13,3)" rx="2" ry="2" />
<text  x="1129.22" y="639.5" >__..</text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (8 samples, 21.62%)</title><rect x="934.9" y="1077" width="255.1" height="15.0" fill="rgb(212,177,17)" rx="2" ry="2" />
<text  x="937.86" y="1087.5" >Envoy::Thread::ThreadImplPosix::Th..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::autoCreateCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;, Envoy::Stats::Scope&amp;, Envoy::Random::RandomGenerator&amp;, Envoy::Thread::AtomicPtr&lt;Envoy::Http::Http1::CodecStats, (Envoy::Thread::AtomicPtrAllocMode)1&gt;&amp;, Envoy::Thread::AtomicPtr&lt;Envoy::Http::Http2::CodecStats, (Envoy::Thread::AtomicPtrAllocMode)1&gt;&amp;, Envoy::Http::Http1Settings const&amp;, envoy::config::core::v3::Http2ProtocolOptions const&amp;, unsigned int, unsigned int, envoy::config::core::v3::HttpProtocolOptions_HeadersWithUnderscoresAction) (1 samples, 2.70%)</title><rect x="807.3" y="869" width="31.9" height="15.0" fill="rgb(242,163,54)" rx="2" ry="2" />
<text  x="810.30" y="879.5" >En..</text>
</g>
<g >
<title>- (1 samples, 2.70%)</title><rect x="1126.2" y="885" width="31.9" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1129.22" y="895.5" >-</text>
</g>
<g >
<title>finish_task_switch (2 samples, 5.41%)</title><rect x="1030.5" y="853" width="63.8" height="15.0" fill="rgb(247,145,15)" rx="2" ry="2" />
<text  x="1033.54" y="863.5" >finish_..</text>
</g>
<g >
<title>wrk:worker_0 (9 samples, 24.32%)</title><rect x="615.9" y="1109" width="287.1" height="15.0" fill="rgb(251,207,51)" rx="2" ry="2" />
<text  x="618.95" y="1119.5" >wrk:worker_0</text>
</g>
<g >
<title>event_base_loop (12 samples, 32.43%)</title><rect x="201.4" y="1013" width="382.7" height="15.0" fill="rgb(217,56,7)" rx="2" ry="2" />
<text  x="204.35" y="1023.5" >event_base_loop</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 2.70%)</title><rect x="1126.2" y="277" width="31.9" height="15.0" fill="rgb(231,162,23)" rx="2" ry="2" />
<text  x="1129.22" y="287.5" >tc..</text>
</g>
<g >
<title>tcp_push (1 samples, 2.70%)</title><rect x="1126.2" y="677" width="31.9" height="15.0" fill="rgb(222,168,38)" rx="2" ry="2" />
<text  x="1129.22" y="687.5" >tc..</text>
</g>
<g >
<title>do_writev (1 samples, 2.70%)</title><rect x="1126.2" y="821" width="31.9" height="15.0" fill="rgb(246,210,29)" rx="2" ry="2" />
<text  x="1129.22" y="831.5" >do..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4, std::__1::allocator&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4&gt;, void ()&gt;::operator()() (2 samples, 5.41%)</title><rect x="10.0" y="1061" width="63.8" height="15.0" fill="rgb(239,10,35)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >std::__..</text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 2.70%)</title><rect x="1126.2" y="485" width="31.9" height="15.0" fill="rgb(238,149,34)" rx="2" ry="2" />
<text  x="1129.22" y="495.5" >do..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (1 samples, 2.70%)</title><rect x="392.7" y="965" width="31.9" height="15.0" fill="rgb(216,114,53)" rx="2" ry="2" />
<text  x="395.70" y="975.5" >st..</text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::updateServerStats() (2 samples, 5.41%)</title><rect x="328.9" y="917" width="63.8" height="15.0" fill="rgb(212,123,8)" rx="2" ry="2" />
<text  x="331.92" y="927.5" >Envoy::..</text>
</g>
<g >
<title>epoll_wait (1 samples, 2.70%)</title><rect x="41.9" y="1029" width="31.9" height="15.0" fill="rgb(247,127,4)" rx="2" ry="2" />
<text  x="44.89" y="1039.5" >ep..</text>
</g>
<g >
<title>Envoy::Event::LibeventScheduler::onPrepareForCallback(evwatch*, evwatch_prepare_cb_info const*, void*) (1 samples, 2.70%)</title><rect x="201.4" y="997" width="31.8" height="15.0" fill="rgb(207,120,18)" rx="2" ry="2" />
<text  x="204.35" y="1007.5" >En..</text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 2.70%)</title><rect x="1126.2" y="709" width="31.9" height="15.0" fill="rgb(253,156,7)" rx="2" ry="2" />
<text  x="1129.22" y="719.5" >tc..</text>
</g>
<g >
<title>ip_finish_output (1 samples, 2.70%)</title><rect x="137.6" y="885" width="31.9" height="15.0" fill="rgb(228,5,8)" rx="2" ry="2" />
<text  x="140.57" y="895.5" >ip..</text>
</g>
<g >
<title>ep_poll (1 samples, 2.70%)</title><rect x="265.1" y="885" width="31.9" height="15.0" fill="rgb(242,39,54)" rx="2" ry="2" />
<text  x="268.14" y="895.5" >ep..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 2.70%)</title><rect x="1126.2" y="85" width="31.9" height="15.0" fill="rgb(249,147,44)" rx="2" ry="2" />
<text  x="1129.22" y="95.5" >ip..</text>
</g>
<g >
<title>Envoy::Extensions::TransportSockets::Tls::DefaultCertValidator::daysUntilFirstCertExpires() const (2 samples, 5.41%)</title><rect x="328.9" y="869" width="63.8" height="15.0" fill="rgb(249,178,25)" rx="2" ry="2" />
<text  x="331.92" y="879.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (9 samples, 24.32%)</title><rect x="615.9" y="1077" width="287.1" height="15.0" fill="rgb(228,70,36)" rx="2" ry="2" />
<text  x="618.95" y="1087.5" >Envoy::Thread::ThreadImplPosix::Thread..</text>
</g>
<g >
<title>ip_send_skb (1 samples, 2.70%)</title><rect x="137.6" y="933" width="31.9" height="15.0" fill="rgb(227,208,27)" rx="2" ry="2" />
<text  x="140.57" y="943.5" >ip..</text>
</g>
<g >
<title>ipt_do_table (1 samples, 2.70%)</title><rect x="137.6" y="645" width="31.9" height="15.0" fill="rgb(229,83,32)" rx="2" ry="2" />
<text  x="140.57" y="655.5" >ip..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 2.70%)</title><rect x="1126.2" y="853" width="31.9" height="15.0" fill="rgb(232,21,7)" rx="2" ry="2" />
<text  x="1129.22" y="863.5" >do..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (5 samples, 13.51%)</title><rect x="615.9" y="901" width="159.5" height="15.0" fill="rgb(220,113,3)" rx="2" ry="2" />
<text  x="618.95" y="911.5" >schedule_hrtimeout_r..</text>
</g>
<g >
<title>__schedule (5 samples, 13.51%)</title><rect x="615.9" y="869" width="159.5" height="15.0" fill="rgb(239,158,5)" rx="2" ry="2" />
<text  x="618.95" y="879.5" >__schedule</text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (2 samples, 5.41%)</title><rect x="10.0" y="1077" width="63.8" height="15.0" fill="rgb(224,91,28)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >Envoy::..</text>
</g>
<g >
<title>eventfd_write (1 samples, 2.70%)</title><rect x="456.5" y="773" width="31.9" height="15.0" fill="rgb(244,221,20)" rx="2" ry="2" />
<text  x="459.49" y="783.5" >ev..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 2.70%)</title><rect x="456.5" y="853" width="31.9" height="15.0" fill="rgb(220,63,2)" rx="2" ry="2" />
<text  x="459.49" y="863.5" >__..</text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="613" width="31.9" height="15.0" fill="rgb(238,101,47)" rx="2" ry="2" />
<text  x="1129.22" y="623.5" >ip..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;) (1 samples, 2.70%)</title><rect x="807.3" y="901" width="31.9" height="15.0" fill="rgb(228,3,18)" rx="2" ry="2" />
<text  x="810.30" y="911.5" >no..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 5.41%)</title><rect x="265.1" y="965" width="63.8" height="15.0" fill="rgb(236,12,19)" rx="2" ry="2" />
<text  x="268.14" y="975.5" >entry_S..</text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 2.70%)</title><rect x="1126.2" y="645" width="31.9" height="15.0" fill="rgb(205,177,20)" rx="2" ry="2" />
<text  x="1129.22" y="655.5" >tc..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 2.70%)</title><rect x="41.9" y="917" width="31.9" height="15.0" fill="rgb(247,179,46)" rx="2" ry="2" />
<text  x="44.89" y="927.5" >sc..</text>
</g>
<g >
<title>http_parser_execute (1 samples, 2.70%)</title><rect x="839.2" y="853" width="31.9" height="15.0" fill="rgb(237,143,28)" rx="2" ry="2" />
<text  x="842.19" y="863.5" >ht..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 2.70%)</title><rect x="1126.2" y="453" width="31.9" height="15.0" fill="rgb(218,9,12)" rx="2" ry="2" />
<text  x="1129.22" y="463.5" >__..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#1}::__invoke(http_parser*) (1 samples, 2.70%)</title><rect x="839.2" y="837" width="31.9" height="15.0" fill="rgb(245,133,54)" rx="2" ry="2" />
<text  x="842.19" y="847.5" >En..</text>
</g>
<g >
<title>event_process_active_single_queue (3 samples, 8.11%)</title><rect x="775.4" y="1029" width="95.7" height="15.0" fill="rgb(209,112,50)" rx="2" ry="2" />
<text  x="778.41" y="1039.5" >event_proce..</text>
</g>
<g >
<title>finish_task_switch (4 samples, 10.81%)</title><rect x="647.8" y="837" width="127.6" height="15.0" fill="rgb(240,95,10)" rx="2" ry="2" />
<text  x="650.84" y="847.5" >finish_task_switch</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 2.70%)</title><rect x="1126.2" y="261" width="31.9" height="15.0" fill="rgb(217,199,12)" rx="2" ry="2" />
<text  x="1129.22" y="271.5" >tc..</text>
</g>
<g >
<title>schedule (5 samples, 13.51%)</title><rect x="615.9" y="885" width="159.5" height="15.0" fill="rgb(254,61,10)" rx="2" ry="2" />
<text  x="618.95" y="895.5" >schedule</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 2.70%)</title><rect x="105.7" y="901" width="31.9" height="15.0" fill="rgb(229,12,40)" rx="2" ry="2" />
<text  x="108.68" y="911.5" >sc..</text>
</g>
<g >
<title>__x64_sys_readv (1 samples, 2.70%)</title><rect x="392.7" y="805" width="31.9" height="15.0" fill="rgb(236,165,5)" rx="2" ry="2" />
<text  x="395.70" y="815.5" >__..</text>
</g>
<g >
<title>ip_finish_output (1 samples, 2.70%)</title><rect x="1126.2" y="117" width="31.9" height="15.0" fill="rgb(217,47,28)" rx="2" ry="2" />
<text  x="1129.22" y="127.5" >ip..</text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 2.70%)</title><rect x="1126.2" y="693" width="31.9" height="15.0" fill="rgb(225,135,35)" rx="2" ry="2" />
<text  x="1129.22" y="703.5" >tc..</text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::enabled() (1 samples, 2.70%)</title><rect x="424.6" y="933" width="31.9" height="15.0" fill="rgb(226,77,15)" rx="2" ry="2" />
<text  x="427.59" y="943.5" >En..</text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::runPostCallbacks() (2 samples, 5.41%)</title><rect x="328.9" y="981" width="63.8" height="15.0" fill="rgb(205,76,13)" rx="2" ry="2" />
<text  x="331.92" y="991.5" >Envoy::..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 2.70%)</title><rect x="1126.2" y="469" width="31.9" height="15.0" fill="rgb(244,196,15)" rx="2" ry="2" />
<text  x="1129.22" y="479.5" >do..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 2.70%)</title><rect x="1158.1" y="1029" width="31.9" height="15.0" fill="rgb(209,227,29)" rx="2" ry="2" />
<text  x="1161.11" y="1039.5" >pt..</text>
</g>
<g >
<title>- (1 samples, 2.70%)</title><rect x="456.5" y="901" width="31.9" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="459.49" y="911.5" >-</text>
</g>
<g >
<title>do_syscall_64 (4 samples, 10.81%)</title><rect x="998.6" y="981" width="127.6" height="15.0" fill="rgb(244,98,25)" rx="2" ry="2" />
<text  x="1001.65" y="991.5" >do_syscall_64</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 2.70%)</title><rect x="839.2" y="901" width="31.9" height="15.0" fill="rgb(249,18,22)" rx="2" ry="2" />
<text  x="842.19" y="911.5" >En..</text>
</g>
<g >
<title>Envoy::Extensions::TransportSockets::Tls::ContextImpl::daysUntilFirstCertExpires() const (2 samples, 5.41%)</title><rect x="328.9" y="885" width="63.8" height="15.0" fill="rgb(209,132,8)" rx="2" ry="2" />
<text  x="331.92" y="895.5" >Envoy::..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 2.70%)</title><rect x="137.6" y="837" width="31.9" height="15.0" fill="rgb(215,96,30)" rx="2" ry="2" />
<text  x="140.57" y="847.5" >__..</text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (1 samples, 2.70%)</title><rect x="839.2" y="805" width="31.9" height="15.0" fill="rgb(252,181,23)" rx="2" ry="2" />
<text  x="842.19" y="815.5" >En..</text>
</g>
<g >
<title>ipt_do_table (1 samples, 2.70%)</title><rect x="137.6" y="661" width="31.9" height="15.0" fill="rgb(234,124,6)" rx="2" ry="2" />
<text  x="140.57" y="671.5" >ip..</text>
</g>
<g >
<title>event_active (1 samples, 2.70%)</title><rect x="488.4" y="901" width="31.9" height="15.0" fill="rgb(218,155,30)" rx="2" ry="2" />
<text  x="491.38" y="911.5" >ev..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 10.81%)</title><rect x="998.6" y="997" width="127.6" height="15.0" fill="rgb(210,79,1)" rx="2" ry="2" />
<text  x="1001.65" y="1007.5" >entry_SYSCALL_64..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 2.70%)</title><rect x="105.7" y="997" width="31.9" height="15.0" fill="rgb(238,11,13)" rx="2" ry="2" />
<text  x="108.68" y="1007.5" >en..</text>
</g>
<g >
<title>udp_send_skb.isra.0 (1 samples, 2.70%)</title><rect x="137.6" y="949" width="31.9" height="15.0" fill="rgb(251,140,47)" rx="2" ry="2" />
<text  x="140.57" y="959.5" >ud..</text>
</g>
<g >
<title>event_base_loop (9 samples, 24.32%)</title><rect x="615.9" y="1045" width="287.1" height="15.0" fill="rgb(227,91,49)" rx="2" ry="2" />
<text  x="618.95" y="1055.5" >event_base_loop</text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (1 samples, 2.70%)</title><rect x="1126.2" y="949" width="31.9" height="15.0" fill="rgb(241,121,4)" rx="2" ry="2" />
<text  x="1129.22" y="959.5" >En..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 2.70%)</title><rect x="520.3" y="997" width="31.9" height="15.0" fill="rgb(250,4,34)" rx="2" ry="2" />
<text  x="523.27" y="1007.5" >pt..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 2.70%)</title><rect x="105.7" y="869" width="31.9" height="15.0" fill="rgb(211,46,45)" rx="2" ry="2" />
<text  x="108.68" y="879.5" >__..</text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 2.70%)</title><rect x="1126.2" y="773" width="31.9" height="15.0" fill="rgb(220,222,27)" rx="2" ry="2" />
<text  x="1129.22" y="783.5" >do..</text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (8 samples, 21.62%)</title><rect x="934.9" y="1061" width="255.1" height="15.0" fill="rgb(213,18,45)" rx="2" ry="2" />
<text  x="937.86" y="1071.5" >Envoy::Server::WorkerImpl::threadR..</text>
</g>
<g >
<title>__schedule (2 samples, 5.41%)</title><rect x="1030.5" y="869" width="63.8" height="15.0" fill="rgb(212,39,13)" rx="2" ry="2" />
<text  x="1033.54" y="879.5" >__sched..</text>
</g>
<g >
<title>do_iter_read (1 samples, 2.70%)</title><rect x="392.7" y="757" width="31.9" height="15.0" fill="rgb(227,19,14)" rx="2" ry="2" />
<text  x="395.70" y="767.5" >do..</text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (1 samples, 2.70%)</title><rect x="105.7" y="1077" width="31.9" height="15.0" fill="rgb(230,64,2)" rx="2" ry="2" />
<text  x="108.68" y="1087.5" >En..</text>
</g>
<g >
<title>start_thread (9 samples, 24.32%)</title><rect x="615.9" y="1093" width="287.1" height="15.0" fill="rgb(213,45,7)" rx="2" ry="2" />
<text  x="618.95" y="1103.5" >start_thread</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (2 samples, 5.41%)</title><rect x="807.3" y="981" width="63.8" height="15.0" fill="rgb(225,198,43)" rx="2" ry="2" />
<text  x="810.30" y="991.5" >Envoy::..</text>
</g>
<g >
<title>__libc_send (1 samples, 2.70%)</title><rect x="137.6" y="1093" width="31.9" height="15.0" fill="rgb(224,188,4)" rx="2" ry="2" />
<text  x="140.57" y="1103.5" >__..</text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 2.70%)</title><rect x="392.7" y="645" width="31.9" height="15.0" fill="rgb(229,27,34)" rx="2" ry="2" />
<text  x="395.70" y="655.5" >sk..</text>
</g>
<g >
<title>schedule (1 samples, 2.70%)</title><rect x="1094.3" y="869" width="31.9" height="15.0" fill="rgb(230,188,6)" rx="2" ry="2" />
<text  x="1097.32" y="879.5" >sc..</text>
</g>
<g >
<title>ip_output (1 samples, 2.70%)</title><rect x="137.6" y="901" width="31.9" height="15.0" fill="rgb(215,195,48)" rx="2" ry="2" />
<text  x="140.57" y="911.5" >ip..</text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 2.70%)</title><rect x="392.7" y="565" width="31.9" height="15.0" fill="rgb(223,156,18)" rx="2" ry="2" />
<text  x="395.70" y="575.5" >co..</text>
</g>
<g >
<title>__x64_sys_sendto (1 samples, 2.70%)</title><rect x="137.6" y="1029" width="31.9" height="15.0" fill="rgb(230,139,28)" rx="2" ry="2" />
<text  x="140.57" y="1039.5" >__..</text>
</g>
<g >
<title>ip_rcv (1 samples, 2.70%)</title><rect x="137.6" y="709" width="31.9" height="15.0" fill="rgb(218,10,18)" rx="2" ry="2" />
<text  x="140.57" y="719.5" >ip..</text>
</g>
<g >
<title>epoll_dispatch (1 samples, 2.70%)</title><rect x="966.8" y="1029" width="31.8" height="15.0" fill="rgb(231,223,13)" rx="2" ry="2" />
<text  x="969.76" y="1039.5" >ep..</text>
</g>
<g >
<title>- (1 samples, 2.70%)</title><rect x="137.6" y="1077" width="31.9" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="140.57" y="1087.5" >-</text>
</g>
<g >
<title>epoll_wait (1 samples, 2.70%)</title><rect x="105.7" y="1029" width="31.9" height="15.0" fill="rgb(236,138,54)" rx="2" ry="2" />
<text  x="108.68" y="1039.5" >ep..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 2.70%)</title><rect x="41.9" y="997" width="31.9" height="15.0" fill="rgb(208,196,7)" rx="2" ry="2" />
<text  x="44.89" y="1007.5" >en..</text>
</g>
<g >
<title>__vfs_write (1 samples, 2.70%)</title><rect x="456.5" y="805" width="31.9" height="15.0" fill="rgb(206,19,41)" rx="2" ry="2" />
<text  x="459.49" y="815.5" >__..</text>
</g>
<g >
<title>ksys_write (1 samples, 2.70%)</title><rect x="456.5" y="837" width="31.9" height="15.0" fill="rgb(241,189,31)" rx="2" ry="2" />
<text  x="459.49" y="847.5" >ks..</text>
</g>
<g >
<title>ip_finish_output (1 samples, 2.70%)</title><rect x="1126.2" y="549" width="31.9" height="15.0" fill="rgb(242,72,52)" rx="2" ry="2" />
<text  x="1129.22" y="559.5" >ip..</text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1 samples, 2.70%)</title><rect x="1126.2" y="213" width="31.9" height="15.0" fill="rgb(205,50,21)" rx="2" ry="2" />
<text  x="1129.22" y="223.5" >__..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (4 samples, 10.81%)</title><rect x="998.6" y="965" width="127.6" height="15.0" fill="rgb(241,108,53)" rx="2" ry="2" />
<text  x="1001.65" y="975.5" >__x64_sys_epoll_..</text>
</g>
<g >
<title>schedule (3 samples, 8.11%)</title><rect x="1030.5" y="885" width="95.7" height="15.0" fill="rgb(238,68,17)" rx="2" ry="2" />
<text  x="1033.54" y="895.5" >schedule</text>
</g>
<g >
<title>start_thread (2 samples, 5.41%)</title><rect x="10.0" y="1093" width="63.8" height="15.0" fill="rgb(227,220,54)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >start_t..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (1 samples, 2.70%)</title><rect x="392.7" y="933" width="31.9" height="15.0" fill="rgb(208,36,17)" rx="2" ry="2" />
<text  x="395.70" y="943.5" >En..</text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (1 samples, 2.70%)</title><rect x="392.7" y="981" width="31.9" height="15.0" fill="rgb(250,18,34)" rx="2" ry="2" />
<text  x="395.70" y="991.5" >En..</text>
</g>
<g >
<title>process_backlog (1 samples, 2.70%)</title><rect x="1126.2" y="421" width="31.9" height="15.0" fill="rgb(214,34,11)" rx="2" ry="2" />
<text  x="1129.22" y="431.5" >pr..</text>
</g>
<g >
<title>net_rx_action (1 samples, 2.70%)</title><rect x="1126.2" y="437" width="31.9" height="15.0" fill="rgb(209,81,19)" rx="2" ry="2" />
<text  x="1129.22" y="447.5" >ne..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (2 samples, 5.41%)</title><rect x="807.3" y="965" width="63.8" height="15.0" fill="rgb(237,210,43)" rx="2" ry="2" />
<text  x="810.30" y="975.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::flushStatsInternal() (2 samples, 5.41%)</title><rect x="328.9" y="933" width="63.8" height="15.0" fill="rgb(215,223,26)" rx="2" ry="2" />
<text  x="331.92" y="943.5" >Envoy::..</text>
</g>
<g >
<title>ep_poll (5 samples, 13.51%)</title><rect x="615.9" y="933" width="159.5" height="15.0" fill="rgb(247,19,38)" rx="2" ry="2" />
<text  x="618.95" y="943.5" >ep_poll</text>
</g>
<g >
<title>Envoy::Extensions::TransportSockets::Tls::Utility::getDaysUntilExpiration(x509_st const*, Envoy::TimeSource&amp;) (2 samples, 5.41%)</title><rect x="328.9" y="853" width="63.8" height="15.0" fill="rgb(233,96,28)" rx="2" ry="2" />
<text  x="331.92" y="863.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::mergeInternal(std::__1::function&lt;void ()&gt;) (2 samples, 5.41%)</title><rect x="328.9" y="949" width="63.8" height="15.0" fill="rgb(210,200,37)" rx="2" ry="2" />
<text  x="331.92" y="959.5" >Envoy::..</text>
</g>
</g>
</svg>
