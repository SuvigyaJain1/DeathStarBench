<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1142.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1125" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1125" > </text>
<g id="frames">
<g >
<title>__tcp_push_pending_frames (2 samples, 1.82%)</title><rect x="1125.6" y="629" width="21.5" height="15.0" fill="rgb(207,228,23)" rx="2" ry="2" />
<text  x="1128.64" y="639.5" >_..</text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 1.82%)</title><rect x="621.5" y="741" width="21.4" height="15.0" fill="rgb(224,200,33)" rx="2" ry="2" />
<text  x="624.45" y="751.5" >d..</text>
</g>
<g >
<title>do_softirq.part.0 (4 samples, 3.64%)</title><rect x="460.5" y="453" width="43.0" height="15.0" fill="rgb(216,71,51)" rx="2" ry="2" />
<text  x="463.55" y="463.5" >do_s..</text>
</g>
<g >
<title>vfs_writev (2 samples, 1.82%)</title><rect x="621.5" y="773" width="21.4" height="15.0" fill="rgb(235,119,3)" rx="2" ry="2" />
<text  x="624.45" y="783.5" >v..</text>
</g>
<g >
<title>operator new[](unsigned long) (1 samples, 0.91%)</title><rect x="567.8" y="773" width="10.7" height="15.0" fill="rgb(254,172,52)" rx="2" ry="2" />
<text  x="570.82" y="783.5" ></text>
</g>
<g >
<title>do_epoll_wait (3 samples, 2.73%)</title><rect x="74.4" y="917" width="32.1" height="15.0" fill="rgb(241,43,43)" rx="2" ry="2" />
<text  x="77.36" y="927.5" >do..</text>
</g>
<g >
<title>kmem_cache_free (2 samples, 1.82%)</title><rect x="1029.1" y="725" width="21.4" height="15.0" fill="rgb(225,186,27)" rx="2" ry="2" />
<text  x="1032.09" y="735.5" >k..</text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::newStreamEncoder(Envoy::Http::ResponseDecoder&amp;) (1 samples, 0.91%)</title><rect x="310.4" y="629" width="10.7" height="15.0" fill="rgb(215,71,23)" rx="2" ry="2" />
<text  x="313.36" y="639.5" ></text>
</g>
<g >
<title>ip_output (4 samples, 3.64%)</title><rect x="460.5" y="533" width="43.0" height="15.0" fill="rgb(227,33,16)" rx="2" ry="2" />
<text  x="463.55" y="543.5" >ip_o..</text>
</g>
<g >
<title>Envoy::Server::ActiveTcpConnection::~ActiveTcpConnection() (1 samples, 0.91%)</title><rect x="771.6" y="949" width="10.8" height="15.0" fill="rgb(235,18,53)" rx="2" ry="2" />
<text  x="774.64" y="959.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.91%)</title><rect x="621.5" y="549" width="10.7" height="15.0" fill="rgb(215,82,25)" rx="2" ry="2" />
<text  x="624.45" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.91%)</title><rect x="1082.7" y="533" width="10.8" height="15.0" fill="rgb(249,84,0)" rx="2" ry="2" />
<text  x="1085.73" y="543.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::checkMaxHeadersSize() (1 samples, 0.91%)</title><rect x="1007.6" y="773" width="10.8" height="15.0" fill="rgb(214,7,49)" rx="2" ry="2" />
<text  x="1010.64" y="783.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (1 samples, 0.91%)</title><rect x="256.7" y="725" width="10.8" height="15.0" fill="rgb(233,35,54)" rx="2" ry="2" />
<text  x="259.73" y="735.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::RequestEncoderImpl::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (2 samples, 1.82%)</title><rect x="288.9" y="565" width="21.5" height="15.0" fill="rgb(249,169,26)" rx="2" ry="2" />
<text  x="291.91" y="575.5" >n..</text>
</g>
<g >
<title>operator new[](unsigned long) (1 samples, 0.91%)</title><rect x="1018.4" y="853" width="10.7" height="15.0" fill="rgb(238,146,19)" rx="2" ry="2" />
<text  x="1021.36" y="863.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.91%)</title><rect x="74.4" y="821" width="10.7" height="15.0" fill="rgb(223,150,48)" rx="2" ry="2" />
<text  x="77.36" y="831.5" ></text>
</g>
<g >
<title>Envoy::Server::FilterChainManagerImpl::findFilterChain(Envoy::Network::ConnectionSocket const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="853" width="10.7" height="15.0" fill="rgb(254,165,30)" rx="2" ry="2" />
<text  x="1096.45" y="863.5" ></text>
</g>
<g >
<title>tcp_sendmsg (4 samples, 3.64%)</title><rect x="1114.9" y="677" width="42.9" height="15.0" fill="rgb(211,217,6)" rx="2" ry="2" />
<text  x="1117.91" y="687.5" >tcp_..</text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::clearDeferredDeleteList() (1 samples, 0.91%)</title><rect x="771.6" y="981" width="10.8" height="15.0" fill="rgb(232,192,8)" rx="2" ry="2" />
<text  x="774.64" y="991.5" ></text>
</g>
<g >
<title>tcp_sendmsg (4 samples, 3.64%)</title><rect x="460.5" y="677" width="43.0" height="15.0" fill="rgb(215,92,3)" rx="2" ry="2" />
<text  x="463.55" y="687.5" >tcp_..</text>
</g>
<g >
<title>ip_route_input_slow (1 samples, 0.91%)</title><rect x="482.0" y="261" width="10.7" height="15.0" fill="rgb(245,196,2)" rx="2" ry="2" />
<text  x="485.00" y="271.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.91%)</title><rect x="471.3" y="245" width="10.7" height="15.0" fill="rgb(237,15,39)" rx="2" ry="2" />
<text  x="474.27" y="255.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::reserveForRead() (1 samples, 0.91%)</title><rect x="1018.4" y="885" width="10.7" height="15.0" fill="rgb(249,220,5)" rx="2" ry="2" />
<text  x="1021.36" y="895.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (1 samples, 0.91%)</title><rect x="439.1" y="885" width="10.7" height="15.0" fill="rgb(248,5,52)" rx="2" ry="2" />
<text  x="442.09" y="895.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerFilterConfigFactory::createFilterFactoryFromProtoAndHopByHop(envoy::extensions::filters::network::http_connection_manager::v3::HttpConnectionManager const&amp;, Envoy::Server::Configuration::FactoryContext&amp;, bool)::$_7, std::__1::allocator&lt;Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerFilterConfigFactory::createFilterFactoryFromProtoAndHopByHop(envoy::extensions::filters::network::http_connection_manager::v3::HttpConnectionManager const&amp;, Envoy::Server::Configuration::FactoryContext&amp;, bool)::$_7&gt;, void (Envoy::Network::FilterManager&amp;)&gt;::operator()(Envoy::Network::FilterManager&amp;) (2 samples, 1.82%)</title><rect x="578.5" y="837" width="21.5" height="15.0" fill="rgb(224,92,16)" rx="2" ry="2" />
<text  x="581.55" y="847.5" >s..</text>
</g>
<g >
<title>Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createFilterChainForFactories(Envoy::Http::FilterChainFactoryCallbacks&amp;, std::__1::list&lt;std::__1::unique_ptr&lt;Envoy::Config::ExtensionConfigProvider&lt;std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt;, std::__1::default_delete&lt;Envoy::Config::ExtensionConfigProvider&lt;std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt; &gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;Envoy::Config::ExtensionConfigProvider&lt;std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt;, std::__1::default_delete&lt;Envoy::Config::ExtensionConfigProvider&lt;std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt; &gt; &gt; &gt; &gt; const&amp;) (1 samples, 0.91%)</title><rect x="267.5" y="725" width="10.7" height="15.0" fill="rgb(210,107,9)" rx="2" ry="2" />
<text  x="270.45" y="735.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveStreamListenerBase::newConnection(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::StreamInfo::StreamInfo, std::__1::default_delete&lt;Envoy::StreamInfo::StreamInfo&gt; &gt;) (3 samples, 2.73%)</title><rect x="1072.0" y="869" width="32.2" height="15.0" fill="rgb(229,3,48)" rx="2" ry="2" />
<text  x="1075.00" y="879.5" >En..</text>
</g>
<g >
<title>ep_poll (1 samples, 0.91%)</title><rect x="10.0" y="901" width="10.7" height="15.0" fill="rgb(208,151,5)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_getsockname (1 samples, 0.91%)</title><rect x="1061.3" y="853" width="10.7" height="15.0" fill="rgb(223,1,26)" rx="2" ry="2" />
<text  x="1064.27" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::StreamEncoderImpl(Envoy::Http::Http1::ConnectionImpl&amp;, std::__1::shared_ptr&lt;Envoy::StreamInfo::BytesMeter&gt;&amp;&amp;) (1 samples, 0.91%)</title><rect x="310.4" y="581" width="10.7" height="15.0" fill="rgb(218,156,20)" rx="2" ry="2" />
<text  x="313.36" y="591.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1 samples, 0.91%)</title><rect x="471.3" y="181" width="10.7" height="15.0" fill="rgb(246,68,24)" rx="2" ry="2" />
<text  x="474.27" y="191.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.91%)</title><rect x="535.6" y="853" width="10.8" height="15.0" fill="rgb(221,93,52)" rx="2" ry="2" />
<text  x="538.64" y="863.5" ></text>
</g>
<g >
<title>task_work_run (3 samples, 2.73%)</title><rect x="1029.1" y="837" width="32.2" height="15.0" fill="rgb(249,36,28)" rx="2" ry="2" />
<text  x="1032.09" y="847.5" >ta..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (4 samples, 3.64%)</title><rect x="460.5" y="885" width="43.0" height="15.0" fill="rgb(241,203,24)" rx="2" ry="2" />
<text  x="463.55" y="895.5" >Envo..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.91%)</title><rect x="471.3" y="309" width="10.7" height="15.0" fill="rgb(228,151,38)" rx="2" ry="2" />
<text  x="474.27" y="319.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.91%)</title><rect x="471.3" y="261" width="10.7" height="15.0" fill="rgb(228,208,28)" rx="2" ry="2" />
<text  x="474.27" y="271.5" ></text>
</g>
<g >
<title>dput (3 samples, 2.73%)</title><rect x="1029.1" y="789" width="32.2" height="15.0" fill="rgb(252,140,43)" rx="2" ry="2" />
<text  x="1032.09" y="799.5" >dput</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4 samples, 3.64%)</title><rect x="696.5" y="869" width="43.0" height="15.0" fill="rgb(211,28,46)" rx="2" ry="2" />
<text  x="699.55" y="879.5" >sche..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.91%)</title><rect x="1061.3" y="885" width="10.7" height="15.0" fill="rgb(237,89,46)" rx="2" ry="2" />
<text  x="1064.27" y="895.5" ></text>
</g>
<g >
<title>Envoy::Network::TcpListenerImpl::onSocketEvent(short) (7 samples, 6.36%)</title><rect x="1029.1" y="949" width="75.1" height="15.0" fill="rgb(232,64,50)" rx="2" ry="2" />
<text  x="1032.09" y="959.5" >Envoy::N..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#3}::__invoke(http_parser*, char const*, unsigned long) (3 samples, 2.73%)</title><rect x="396.2" y="805" width="32.2" height="15.0" fill="rgb(220,77,21)" rx="2" ry="2" />
<text  x="399.18" y="815.5" >En..</text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 1.82%)</title><rect x="1125.6" y="597" width="21.5" height="15.0" fill="rgb(209,129,39)" rx="2" ry="2" />
<text  x="1128.64" y="607.5" >_..</text>
</g>
<g >
<title>Envoy::Network::ServerConnectionImpl::ServerConnectionImpl(Envoy::Event::Dispatcher&amp;, std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;, bool) (3 samples, 2.73%)</title><rect x="546.4" y="837" width="32.1" height="15.0" fill="rgb(243,213,36)" rx="2" ry="2" />
<text  x="549.36" y="847.5" >En..</text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (1 samples, 0.91%)</title><rect x="996.9" y="773" width="10.7" height="15.0" fill="rgb(232,136,15)" rx="2" ry="2" />
<text  x="999.91" y="783.5" ></text>
</g>
<g >
<title>sock_alloc_file (1 samples, 0.91%)</title><rect x="524.9" y="821" width="10.7" height="15.0" fill="rgb(220,170,24)" rx="2" ry="2" />
<text  x="527.91" y="831.5" ></text>
</g>
<g >
<title>- (1 samples, 0.91%)</title><rect x="31.5" y="1045" width="10.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="34.45" y="1055.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.91%)</title><rect x="535.6" y="757" width="10.8" height="15.0" fill="rgb(230,181,34)" rx="2" ry="2" />
<text  x="538.64" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestEncoderWrapper::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (2 samples, 1.82%)</title><rect x="288.9" y="581" width="21.5" height="15.0" fill="rgb(239,216,3)" rx="2" ry="2" />
<text  x="291.91" y="591.5" >E..</text>
</g>
<g >
<title>__fput (1 samples, 0.91%)</title><rect x="535.6" y="805" width="10.8" height="15.0" fill="rgb(231,73,15)" rx="2" ry="2" />
<text  x="538.64" y="815.5" ></text>
</g>
<g >
<title>Envoy::MainCommon::main(int, char**, std::__1::function&lt;void (Envoy::Server::Instance&amp;)&gt;) (2 samples, 1.82%)</title><rect x="42.2" y="1029" width="21.4" height="15.0" fill="rgb(214,117,50)" rx="2" ry="2" />
<text  x="45.18" y="1039.5" >E..</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.91%)</title><rect x="471.3" y="229" width="10.7" height="15.0" fill="rgb(252,76,42)" rx="2" ry="2" />
<text  x="474.27" y="239.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.91%)</title><rect x="471.3" y="85" width="10.7" height="15.0" fill="rgb(242,156,8)" rx="2" ry="2" />
<text  x="474.27" y="95.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.91%)</title><rect x="1157.8" y="677" width="10.7" height="15.0" fill="rgb(209,66,32)" rx="2" ry="2" />
<text  x="1160.82" y="687.5" ></text>
</g>
<g >
<title>__ip_finish_output (2 samples, 1.82%)</title><rect x="1125.6" y="501" width="21.5" height="15.0" fill="rgb(245,97,43)" rx="2" ry="2" />
<text  x="1128.64" y="511.5" >_..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (2 samples, 1.82%)</title><rect x="911.1" y="773" width="21.4" height="15.0" fill="rgb(239,62,49)" rx="2" ry="2" />
<text  x="914.09" y="783.5" >n..</text>
</g>
<g >
<title>ip_local_out (1 samples, 0.91%)</title><rect x="471.3" y="117" width="10.7" height="15.0" fill="rgb(209,72,43)" rx="2" ry="2" />
<text  x="474.27" y="127.5" ></text>
</g>
<g >
<title>ep_poll (3 samples, 2.73%)</title><rect x="74.4" y="901" width="32.1" height="15.0" fill="rgb(214,10,19)" rx="2" ry="2" />
<text  x="77.36" y="911.5" >ep..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#1}::__invoke(http_parser*, char const*, unsigned long) (2 samples, 1.82%)</title><rect x="996.9" y="805" width="21.5" height="15.0" fill="rgb(250,40,32)" rx="2" ry="2" />
<text  x="999.91" y="815.5" >E..</text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.91%)</title><rect x="492.7" y="325" width="10.8" height="15.0" fill="rgb(244,8,15)" rx="2" ry="2" />
<text  x="495.73" y="335.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (7 samples, 6.36%)</title><rect x="803.8" y="709" width="75.1" height="15.0" fill="rgb(225,187,42)" rx="2" ry="2" />
<text  x="806.82" y="719.5" >Envoy::R..</text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::bufferLimit() const (1 samples, 0.91%)</title><rect x="921.8" y="725" width="10.7" height="15.0" fill="rgb(210,197,34)" rx="2" ry="2" />
<text  x="924.82" y="735.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*, Envoy::Network::ReadBufferSource&amp;) (31 samples, 28.18%)</title><rect x="117.3" y="917" width="332.5" height="15.0" fill="rgb(210,47,7)" rx="2" ry="2" />
<text  x="120.27" y="927.5" >Envoy::Network::FilterManagerImpl::onContinu..</text>
</g>
<g >
<title>ip_finish_output (4 samples, 3.64%)</title><rect x="460.5" y="517" width="43.0" height="15.0" fill="rgb(209,122,30)" rx="2" ry="2" />
<text  x="463.55" y="527.5" >ip_f..</text>
</g>
<g >
<title>__ip_append_data.isra.0 (1 samples, 0.91%)</title><rect x="31.5" y="901" width="10.7" height="15.0" fill="rgb(222,119,23)" rx="2" ry="2" />
<text  x="34.45" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeadersComplete() (1 samples, 0.91%)</title><rect x="793.1" y="773" width="10.7" height="15.0" fill="rgb(209,181,42)" rx="2" ry="2" />
<text  x="796.09" y="783.5" ></text>
</g>
<g >
<title>__dentry_kill (3 samples, 2.73%)</title><rect x="1029.1" y="773" width="32.2" height="15.0" fill="rgb(254,226,44)" rx="2" ry="2" />
<text  x="1032.09" y="783.5" >__..</text>
</g>
<g >
<title>tcp_poll (1 samples, 0.91%)</title><rect x="557.1" y="565" width="10.7" height="15.0" fill="rgb(243,34,48)" rx="2" ry="2" />
<text  x="560.09" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.91%)</title><rect x="460.5" y="341" width="10.8" height="15.0" fill="rgb(241,61,13)" rx="2" ry="2" />
<text  x="463.55" y="351.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (4 samples, 3.64%)</title><rect x="460.5" y="357" width="43.0" height="15.0" fill="rgb(249,190,6)" rx="2" ry="2" />
<text  x="463.55" y="367.5" >__ne..</text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::createServerConnection(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;) (2 samples, 1.82%)</title><rect x="1072.0" y="853" width="21.5" height="15.0" fill="rgb(220,196,15)" rx="2" ry="2" />
<text  x="1075.00" y="863.5" >E..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.91%)</title><rect x="74.4" y="885" width="10.7" height="15.0" fill="rgb(219,130,46)" rx="2" ry="2" />
<text  x="77.36" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageCompleteBase() (18 samples, 16.36%)</title><rect x="203.1" y="773" width="193.1" height="15.0" fill="rgb(209,17,38)" rx="2" ry="2" />
<text  x="206.09" y="783.5" >Envoy::Http::Http1::Serve..</text>
</g>
<g >
<title>ip_local_deliver (2 samples, 1.82%)</title><rect x="1125.6" y="309" width="21.5" height="15.0" fill="rgb(234,73,17)" rx="2" ry="2" />
<text  x="1128.64" y="319.5" >i..</text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamHeaders(unsigned long, std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (4 samples, 3.64%)</title><rect x="128.0" y="693" width="42.9" height="15.0" fill="rgb(253,28,10)" rx="2" ry="2" />
<text  x="131.00" y="703.5" >Envo..</text>
</g>
<g >
<title>virtual thunk to Envoy::Network::ConnectionImpl::addReadFilter(std::__1::shared_ptr&lt;Envoy::Network::ReadFilter&gt;) (1 samples, 0.91%)</title><rect x="600.0" y="837" width="10.7" height="15.0" fill="rgb(248,2,27)" rx="2" ry="2" />
<text  x="603.00" y="847.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.91%)</title><rect x="1050.5" y="757" width="10.8" height="15.0" fill="rgb(234,92,27)" rx="2" ry="2" />
<text  x="1053.55" y="767.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.91%)</title><rect x="1050.5" y="725" width="10.8" height="15.0" fill="rgb(219,186,49)" rx="2" ry="2" />
<text  x="1053.55" y="735.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 2.73%)</title><rect x="471.3" y="341" width="32.2" height="15.0" fill="rgb(219,102,5)" rx="2" ry="2" />
<text  x="474.27" y="351.5" >ip..</text>
</g>
<g >
<title>event_del (1 samples, 0.91%)</title><rect x="138.7" y="661" width="10.8" height="15.0" fill="rgb(242,49,5)" rx="2" ry="2" />
<text  x="141.73" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 3.64%)</title><rect x="460.5" y="373" width="43.0" height="15.0" fill="rgb(221,18,17)" rx="2" ry="2" />
<text  x="463.55" y="383.5" >__ne..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 4.55%)</title><rect x="696.5" y="965" width="53.7" height="15.0" fill="rgb(247,206,40)" rx="2" ry="2" />
<text  x="699.55" y="975.5" >entry..</text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.91%)</title><rect x="535.6" y="693" width="10.8" height="15.0" fill="rgb(219,151,33)" rx="2" ry="2" />
<text  x="538.64" y="703.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (46 samples, 41.82%)</title><rect x="117.3" y="965" width="493.4" height="15.0" fill="rgb(225,80,39)" rx="2" ry="2" />
<text  x="120.27" y="975.5" >std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFi..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.91%)</title><rect x="632.2" y="485" width="10.7" height="15.0" fill="rgb(223,48,42)" rx="2" ry="2" />
<text  x="635.18" y="495.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 1.82%)</title><rect x="10.0" y="1061" width="21.5" height="15.0" fill="rgb(238,142,48)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >s..</text>
</g>
<g >
<title>event_process_active_single_queue (1 samples, 0.91%)</title><rect x="52.9" y="965" width="10.7" height="15.0" fill="rgb(207,48,5)" rx="2" ry="2" />
<text  x="55.91" y="975.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::onPoolReady(std::__1::unique_ptr&lt;Envoy::Router::GenericUpstream, std::__1::default_delete&lt;Envoy::Router::GenericUpstream&gt; &gt;&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, std::__1::shared_ptr&lt;Envoy::Network::Address::Instance const&gt; const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (1 samples, 0.91%)</title><rect x="954.0" y="613" width="10.7" height="15.0" fill="rgb(221,154,48)" rx="2" ry="2" />
<text  x="957.00" y="623.5" ></text>
</g>
<g >
<title>epoll_wait (7 samples, 6.36%)</title><rect x="675.1" y="997" width="75.1" height="15.0" fill="rgb(253,186,47)" rx="2" ry="2" />
<text  x="678.09" y="1007.5" >epoll_wait</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::RouteEntryImplBase::routeEntry() const (1 samples, 0.91%)</title><rect x="213.8" y="725" width="10.7" height="15.0" fill="rgb(222,208,2)" rx="2" ry="2" />
<text  x="216.82" y="735.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.91%)</title><rect x="632.2" y="549" width="10.7" height="15.0" fill="rgb(246,127,7)" rx="2" ry="2" />
<text  x="635.18" y="559.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.91%)</title><rect x="535.6" y="789" width="10.8" height="15.0" fill="rgb(247,199,0)" rx="2" ry="2" />
<text  x="538.64" y="799.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.91%)</title><rect x="471.3" y="69" width="10.7" height="15.0" fill="rgb(251,152,8)" rx="2" ry="2" />
<text  x="474.27" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (1 samples, 0.91%)</title><rect x="546.4" y="613" width="10.7" height="15.0" fill="rgb(235,13,35)" rx="2" ry="2" />
<text  x="549.36" y="623.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (1 samples, 0.91%)</title><rect x="1114.9" y="645" width="10.7" height="15.0" fill="rgb(251,97,10)" rx="2" ry="2" />
<text  x="1117.91" y="655.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::Http::ConnectionManagerImpl, std::__1::allocator&lt;Envoy::Http::ConnectionManagerImpl&gt; &gt;::__on_zero_shared() (1 samples, 0.91%)</title><rect x="771.6" y="885" width="10.8" height="15.0" fill="rgb(208,49,18)" rx="2" ry="2" />
<text  x="774.64" y="895.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2 samples, 1.82%)</title><rect x="1125.6" y="613" width="21.5" height="15.0" fill="rgb(219,221,13)" rx="2" ry="2" />
<text  x="1128.64" y="623.5" >t..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (5 samples, 4.55%)</title><rect x="117.3" y="853" width="53.6" height="15.0" fill="rgb(231,203,25)" rx="2" ry="2" />
<text  x="120.27" y="863.5" >Envoy..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshCachedRoute(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;) (2 samples, 1.82%)</title><rect x="203.1" y="741" width="21.4" height="15.0" fill="rgb(244,157,11)" rx="2" ry="2" />
<text  x="206.09" y="751.5" >E..</text>
</g>
<g >
<title>ipv4_conntrack_in (1 samples, 0.91%)</title><rect x="492.7" y="309" width="10.8" height="15.0" fill="rgb(234,125,35)" rx="2" ry="2" />
<text  x="495.73" y="319.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (4 samples, 3.64%)</title><rect x="460.5" y="933" width="43.0" height="15.0" fill="rgb(254,200,47)" rx="2" ry="2" />
<text  x="463.55" y="943.5" >Envo..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (22 samples, 20.00%)</title><rect x="793.1" y="949" width="236.0" height="15.0" fill="rgb(224,135,2)" rx="2" ry="2" />
<text  x="796.09" y="959.5" >Envoy::Network::ConnectionImpl:..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#2}::__invoke(http_parser*) (1 samples, 0.91%)</title><rect x="793.1" y="789" width="10.7" height="15.0" fill="rgb(220,195,54)" rx="2" ry="2" />
<text  x="796.09" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (3 samples, 2.73%)</title><rect x="396.2" y="773" width="32.2" height="15.0" fill="rgb(227,106,40)" rx="2" ry="2" />
<text  x="399.18" y="783.5" >En..</text>
</g>
<g >
<title>Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (9 samples, 8.18%)</title><rect x="278.2" y="725" width="96.5" height="15.0" fill="rgb(214,52,17)" rx="2" ry="2" />
<text  x="281.18" y="735.5" >Envoy::Rout..</text>
</g>
<g >
<title>Envoy::Http::FilterManager::createFilterChain() (1 samples, 0.91%)</title><rect x="267.5" y="741" width="10.7" height="15.0" fill="rgb(213,153,53)" rx="2" ry="2" />
<text  x="270.45" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.91%)</title><rect x="31.5" y="1029" width="10.7" height="15.0" fill="rgb(225,13,36)" rx="2" ry="2" />
<text  x="34.45" y="1039.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (4 samples, 3.64%)</title><rect x="460.5" y="469" width="43.0" height="15.0" fill="rgb(237,97,35)" rx="2" ry="2" />
<text  x="463.55" y="479.5" >__lo..</text>
</g>
<g >
<title>security_file_permission (1 samples, 0.91%)</title><rect x="1157.8" y="725" width="10.7" height="15.0" fill="rgb(252,74,12)" rx="2" ry="2" />
<text  x="1160.82" y="735.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::inlineHeaders() (1 samples, 0.91%)</title><rect x="417.6" y="709" width="10.8" height="15.0" fill="rgb(233,221,13)" rx="2" ry="2" />
<text  x="420.64" y="719.5" ></text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::flushStats() (1 samples, 0.91%)</title><rect x="52.9" y="949" width="10.7" height="15.0" fill="rgb(251,134,28)" rx="2" ry="2" />
<text  x="55.91" y="959.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (4 samples, 3.64%)</title><rect x="1114.9" y="741" width="42.9" height="15.0" fill="rgb(248,88,30)" rx="2" ry="2" />
<text  x="1117.91" y="751.5" >do_i..</text>
</g>
<g >
<title>Envoy::MainCommonBase::run() (2 samples, 1.82%)</title><rect x="42.2" y="1013" width="21.4" height="15.0" fill="rgb(242,53,33)" rx="2" ry="2" />
<text  x="45.18" y="1023.5" >E..</text>
</g>
<g >
<title>vfs_writev (5 samples, 4.55%)</title><rect x="1114.9" y="773" width="53.6" height="15.0" fill="rgb(212,121,40)" rx="2" ry="2" />
<text  x="1117.91" y="783.5" >vfs_w..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (6 samples, 5.45%)</title><rect x="1104.2" y="933" width="64.3" height="15.0" fill="rgb(251,86,7)" rx="2" ry="2" />
<text  x="1107.18" y="943.5" >Envoy::..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.82%)</title><rect x="546.4" y="645" width="21.4" height="15.0" fill="rgb(220,128,9)" rx="2" ry="2" />
<text  x="549.36" y="655.5" >d..</text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.91%)</title><rect x="524.9" y="725" width="10.7" height="15.0" fill="rgb(205,122,4)" rx="2" ry="2" />
<text  x="527.91" y="735.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.91%)</title><rect x="10.0" y="917" width="10.7" height="15.0" fill="rgb(247,108,45)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Network::ServerConnectionImpl::~ServerConnectionImpl() (1 samples, 0.91%)</title><rect x="771.6" y="933" width="10.8" height="15.0" fill="rgb(213,88,51)" rx="2" ry="2" />
<text  x="774.64" y="943.5" ></text>
</g>
<g >
<title>evmap_io_add_ (2 samples, 1.82%)</title><rect x="546.4" y="725" width="21.4" height="15.0" fill="rgb(253,8,2)" rx="2" ry="2" />
<text  x="549.36" y="735.5" >e..</text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderEntryImpl::key() const (1 samples, 0.91%)</title><rect x="857.5" y="565" width="10.7" height="15.0" fill="rgb(221,85,30)" rx="2" ry="2" />
<text  x="860.45" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 1.82%)</title><rect x="1125.6" y="357" width="21.5" height="15.0" fill="rgb(221,102,54)" rx="2" ry="2" />
<text  x="1128.64" y="367.5" >_..</text>
</g>
<g >
<title>d_alloc_pseudo (1 samples, 0.91%)</title><rect x="524.9" y="789" width="10.7" height="15.0" fill="rgb(231,19,22)" rx="2" ry="2" />
<text  x="527.91" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::RequestEncoderImpl::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (2 samples, 1.82%)</title><rect x="288.9" y="549" width="21.5" height="15.0" fill="rgb(254,140,22)" rx="2" ry="2" />
<text  x="291.91" y="559.5" >E..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::newStream(Envoy::Http::ResponseEncoder&amp;, bool) (2 samples, 1.82%)</title><rect x="911.1" y="741" width="21.4" height="15.0" fill="rgb(240,139,22)" rx="2" ry="2" />
<text  x="914.09" y="751.5" >E..</text>
</g>
<g >
<title>http_parser_execute (5 samples, 4.55%)</title><rect x="117.3" y="805" width="53.6" height="15.0" fill="rgb(241,183,21)" rx="2" ry="2" />
<text  x="120.27" y="815.5" >http_..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::~ConnectionImpl() (1 samples, 0.91%)</title><rect x="771.6" y="917" width="10.8" height="15.0" fill="rgb(244,9,14)" rx="2" ry="2" />
<text  x="774.64" y="927.5" ></text>
</g>
<g >
<title>event_del_nolock_ (2 samples, 1.82%)</title><rect x="750.2" y="997" width="21.4" height="15.0" fill="rgb(234,188,41)" rx="2" ry="2" />
<text  x="753.18" y="1007.5" >e..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (8 samples, 7.27%)</title><rect x="793.1" y="837" width="85.8" height="15.0" fill="rgb(227,212,20)" rx="2" ry="2" />
<text  x="796.09" y="847.5" >Envoy::Htt..</text>
</g>
<g >
<title>sock_poll (1 samples, 0.91%)</title><rect x="557.1" y="581" width="10.7" height="15.0" fill="rgb(206,62,13)" rx="2" ry="2" />
<text  x="560.09" y="591.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::ForwardedProto() const (1 samples, 0.91%)</title><rect x="385.5" y="741" width="10.7" height="15.0" fill="rgb(233,42,33)" rx="2" ry="2" />
<text  x="388.45" y="751.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.91%)</title><rect x="911.1" y="629" width="10.7" height="15.0" fill="rgb(218,159,52)" rx="2" ry="2" />
<text  x="914.09" y="639.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::chargeStats(Envoy::Http::ResponseHeaderMap const&amp;) (1 samples, 0.91%)</title><rect x="846.7" y="629" width="10.8" height="15.0" fill="rgb(210,31,32)" rx="2" ry="2" />
<text  x="849.73" y="639.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::startsWith(absl::string_view) const (1 samples, 0.91%)</title><rect x="878.9" y="821" width="10.7" height="15.0" fill="rgb(224,118,32)" rx="2" ry="2" />
<text  x="881.91" y="831.5" ></text>
</g>
<g >
<title>getsockname (1 samples, 0.91%)</title><rect x="1061.3" y="917" width="10.7" height="15.0" fill="rgb(212,220,27)" rx="2" ry="2" />
<text  x="1064.27" y="927.5" ></text>
</g>
<g >
<title>inet_sendmsg (2 samples, 1.82%)</title><rect x="621.5" y="693" width="21.4" height="15.0" fill="rgb(238,185,0)" rx="2" ry="2" />
<text  x="624.45" y="703.5" >i..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.91%)</title><rect x="74.4" y="805" width="10.7" height="15.0" fill="rgb(214,13,39)" rx="2" ry="2" />
<text  x="77.36" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&amp;, bool) (13 samples, 11.82%)</title><rect x="878.9" y="901" width="139.5" height="15.0" fill="rgb(235,53,12)" rx="2" ry="2" />
<text  x="881.91" y="911.5" >Envoy::Http::Conn..</text>
</g>
<g >
<title>__tcp_push_pending_frames (2 samples, 1.82%)</title><rect x="621.5" y="629" width="21.4" height="15.0" fill="rgb(238,73,9)" rx="2" ry="2" />
<text  x="624.45" y="639.5" >_..</text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 1.82%)</title><rect x="621.5" y="597" width="21.4" height="15.0" fill="rgb(213,161,28)" rx="2" ry="2" />
<text  x="624.45" y="607.5" >_..</text>
</g>
<g >
<title>Envoy::Http::CodecClient::responsePreDecodeComplete(Envoy::Http::CodecClient::ActiveRequest&amp;) (1 samples, 0.91%)</title><rect x="117.3" y="725" width="10.7" height="15.0" fill="rgb(243,129,7)" rx="2" ry="2" />
<text  x="120.27" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.82%)</title><rect x="546.4" y="661" width="21.4" height="15.0" fill="rgb(223,224,18)" rx="2" ry="2" />
<text  x="549.36" y="671.5" >e..</text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::newStream(Envoy::Router::GenericConnectionPoolCallbacks*) (2 samples, 1.82%)</title><rect x="954.0" y="709" width="21.5" height="15.0" fill="rgb(253,152,38)" rx="2" ry="2" />
<text  x="957.00" y="719.5" >E..</text>
</g>
<g >
<title>Envoy::Http::CodecClient::onData(Envoy::Buffer::Instance&amp;) (5 samples, 4.55%)</title><rect x="117.3" y="885" width="53.6" height="15.0" fill="rgb(245,74,31)" rx="2" ry="2" />
<text  x="120.27" y="895.5" >Envoy..</text>
</g>
<g >
<title>sock_poll (1 samples, 0.91%)</title><rect x="1082.7" y="581" width="10.8" height="15.0" fill="rgb(220,217,15)" rx="2" ry="2" />
<text  x="1085.73" y="591.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (3 samples, 2.73%)</title><rect x="396.2" y="725" width="32.2" height="15.0" fill="rgb(222,78,39)" rx="2" ry="2" />
<text  x="399.18" y="735.5" >En..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (6 samples, 5.45%)</title><rect x="1104.2" y="949" width="64.3" height="15.0" fill="rgb(252,191,28)" rx="2" ry="2" />
<text  x="1107.18" y="959.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Network::LcTrie::LcTrie&lt;std::__1::shared_ptr&lt;absl::flat_hash_map&lt;unsigned short, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt;, absl::hash_internal::Hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned short const, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt; &gt; &gt; &gt; &gt; &gt;::getData(std::__1::shared_ptr&lt;Envoy::Network::Address::Instance const&gt; const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="757" width="10.7" height="15.0" fill="rgb(235,69,38)" rx="2" ry="2" />
<text  x="1096.45" y="767.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.91%)</title><rect x="52.9" y="725" width="10.7" height="15.0" fill="rgb(233,186,7)" rx="2" ry="2" />
<text  x="55.91" y="735.5" ></text>
</g>
<g >
<title>tcp_push (4 samples, 3.64%)</title><rect x="460.5" y="645" width="43.0" height="15.0" fill="rgb(211,204,6)" rx="2" ry="2" />
<text  x="463.55" y="655.5" >tcp_..</text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::canFlushClose() (1 samples, 0.91%)</title><rect x="160.2" y="629" width="10.7" height="15.0" fill="rgb(210,165,1)" rx="2" ry="2" />
<text  x="163.18" y="639.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::localAddress() (1 samples, 0.91%)</title><rect x="1061.3" y="933" width="10.7" height="15.0" fill="rgb(246,182,51)" rx="2" ry="2" />
<text  x="1064.27" y="943.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.91%)</title><rect x="1147.1" y="613" width="10.7" height="15.0" fill="rgb(214,0,4)" rx="2" ry="2" />
<text  x="1150.09" y="623.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyUpstreamStreamDurationMs() const (1 samples, 0.91%)</title><rect x="975.5" y="709" width="10.7" height="15.0" fill="rgb(207,74,48)" rx="2" ry="2" />
<text  x="978.45" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.91%)</title><rect x="31.5" y="1013" width="10.7" height="15.0" fill="rgb(233,36,20)" rx="2" ry="2" />
<text  x="34.45" y="1023.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.91%)</title><rect x="1157.8" y="693" width="10.7" height="15.0" fill="rgb(240,120,14)" rx="2" ry="2" />
<text  x="1160.82" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&amp;, bool) (26 samples, 23.64%)</title><rect x="170.9" y="901" width="278.9" height="15.0" fill="rgb(225,98,32)" rx="2" ry="2" />
<text  x="173.91" y="911.5" >Envoy::Http::ConnectionManagerImpl::o..</text>
</g>
<g >
<title>__x64_sys_accept4 (2 samples, 1.82%)</title><rect x="514.2" y="853" width="21.4" height="15.0" fill="rgb(229,220,33)" rx="2" ry="2" />
<text  x="517.18" y="863.5" >_..</text>
</g>
<g >
<title>Envoy::Router::VirtualHostImpl::getRouteFromEntries(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (1 samples, 0.91%)</title><rect x="203.1" y="709" width="10.7" height="15.0" fill="rgb(227,90,4)" rx="2" ry="2" />
<text  x="206.09" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.91%)</title><rect x="52.9" y="805" width="10.7" height="15.0" fill="rgb(220,73,19)" rx="2" ry="2" />
<text  x="55.91" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (4 samples, 3.64%)</title><rect x="696.5" y="933" width="43.0" height="15.0" fill="rgb(226,159,35)" rx="2" ry="2" />
<text  x="699.55" y="943.5" >__x6..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (12 samples, 10.91%)</title><rect x="889.6" y="869" width="128.8" height="15.0" fill="rgb(213,57,11)" rx="2" ry="2" />
<text  x="892.64" y="879.5" >Envoy::Http::Htt..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateRequestHeaders(Envoy::Http::RequestHeaderMap&amp;, Envoy::Network::Connection&amp;, Envoy::Http::ConnectionManagerConfig&amp;, Envoy::Router::Config const&amp;, Envoy::LocalInfo::LocalInfo const&amp;) (3 samples, 2.73%)</title><rect x="235.3" y="741" width="32.2" height="15.0" fill="rgb(206,1,52)" rx="2" ry="2" />
<text  x="238.27" y="751.5" >En..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ActiveStreamDecoderFilter::encodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool, absl::string_view) (3 samples, 2.73%)</title><rect x="846.7" y="677" width="32.2" height="15.0" fill="rgb(235,161,28)" rx="2" ry="2" />
<text  x="849.73" y="687.5" >no..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (2 samples, 1.82%)</title><rect x="621.5" y="949" width="21.4" height="15.0" fill="rgb(223,172,36)" rx="2" ry="2" />
<text  x="624.45" y="959.5" >E..</text>
</g>
<g >
<title>- (3 samples, 2.73%)</title><rect x="74.4" y="981" width="32.1" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="77.36" y="991.5" >-</text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int) (3 samples, 2.73%)</title><rect x="546.4" y="789" width="32.1" height="15.0" fill="rgb(234,10,45)" rx="2" ry="2" />
<text  x="549.36" y="799.5" >En..</text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::~SnapshotImpl() (1 samples, 0.91%)</title><rect x="642.9" y="1045" width="10.7" height="15.0" fill="rgb(230,40,48)" rx="2" ry="2" />
<text  x="645.91" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (1 samples, 0.91%)</title><rect x="793.1" y="709" width="10.7" height="15.0" fill="rgb(234,75,5)" rx="2" ry="2" />
<text  x="796.09" y="719.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (1 samples, 0.91%)</title><rect x="181.6" y="773" width="10.8" height="15.0" fill="rgb(222,173,8)" rx="2" ry="2" />
<text  x="184.64" y="783.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (36 samples, 32.73%)</title><rect x="117.3" y="949" width="386.2" height="15.0" fill="rgb(218,136,8)" rx="2" ry="2" />
<text  x="120.27" y="959.5" >Envoy::Network::ConnectionImpl::onFileEvent(unsigned..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.91%)</title><rect x="471.3" y="277" width="10.7" height="15.0" fill="rgb(210,193,46)" rx="2" ry="2" />
<text  x="474.27" y="287.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (4 samples, 3.64%)</title><rect x="460.5" y="597" width="43.0" height="15.0" fill="rgb(213,25,51)" rx="2" ry="2" />
<text  x="463.55" y="607.5" >__tc..</text>
</g>
<g >
<title>__x64_sys_sendto (1 samples, 0.91%)</title><rect x="31.5" y="997" width="10.7" height="15.0" fill="rgb(206,178,54)" rx="2" ry="2" />
<text  x="34.45" y="1007.5" ></text>
</g>
<g >
<title>sock_sendmsg (4 samples, 3.64%)</title><rect x="1114.9" y="709" width="42.9" height="15.0" fill="rgb(214,161,6)" rx="2" ry="2" />
<text  x="1117.91" y="719.5" >sock..</text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (50 samples, 45.45%)</title><rect x="653.6" y="1045" width="536.4" height="15.0" fill="rgb(240,126,10)" rx="2" ry="2" />
<text  x="656.64" y="1055.5" >Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void (..</text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.91%)</title><rect x="1114.9" y="613" width="10.7" height="15.0" fill="rgb(231,223,6)" rx="2" ry="2" />
<text  x="1117.91" y="623.5" ></text>
</g>
<g >
<title>sock_write_iter (2 samples, 1.82%)</title><rect x="621.5" y="725" width="21.4" height="15.0" fill="rgb(237,164,46)" rx="2" ry="2" />
<text  x="624.45" y="735.5" >s..</text>
</g>
<g >
<title>do_iter_write (4 samples, 3.64%)</title><rect x="460.5" y="757" width="43.0" height="15.0" fill="rgb(221,88,40)" rx="2" ry="2" />
<text  x="463.55" y="767.5" >do_i..</text>
</g>
<g >
<title>ip_queue_xmit (4 samples, 3.64%)</title><rect x="460.5" y="581" width="43.0" height="15.0" fill="rgb(208,93,30)" rx="2" ry="2" />
<text  x="463.55" y="591.5" >ip_q..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.91%)</title><rect x="460.5" y="325" width="10.8" height="15.0" fill="rgb(240,134,39)" rx="2" ry="2" />
<text  x="463.55" y="335.5" ></text>
</g>
<g >
<title>Envoy::Router::RouteEntryImplBase::matchRoute(Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (1 samples, 0.91%)</title><rect x="203.1" y="693" width="10.7" height="15.0" fill="rgb(225,95,51)" rx="2" ry="2" />
<text  x="206.09" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (1 samples, 0.91%)</title><rect x="857.5" y="597" width="10.7" height="15.0" fill="rgb(248,125,42)" rx="2" ry="2" />
<text  x="860.45" y="607.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.91%)</title><rect x="1157.8" y="709" width="10.7" height="15.0" fill="rgb(212,33,9)" rx="2" ry="2" />
<text  x="1160.82" y="719.5" ></text>
</g>
<g >
<title>__libc_cfree (1 samples, 0.91%)</title><rect x="1104.2" y="837" width="10.7" height="15.0" fill="rgb(208,161,18)" rx="2" ry="2" />
<text  x="1107.18" y="847.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::HttpConnPoolImplBase::newStream(Envoy::Http::ResponseDecoder&amp;, Envoy::Http::ConnectionPool::Callbacks&amp;, Envoy::Http::ConnectionPool::Instance::StreamOptions const&amp;) (3 samples, 2.73%)</title><rect x="288.9" y="693" width="32.2" height="15.0" fill="rgb(254,219,32)" rx="2" ry="2" />
<text  x="291.91" y="703.5" >no..</text>
</g>
<g >
<title>- (1 samples, 0.91%)</title><rect x="1061.3" y="901" width="10.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1064.27" y="911.5" ></text>
</g>
<g >
<title>__write (1 samples, 0.91%)</title><rect x="52.9" y="837" width="10.7" height="15.0" fill="rgb(208,33,22)" rx="2" ry="2" />
<text  x="55.91" y="847.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.91%)</title><rect x="31.5" y="965" width="10.7" height="15.0" fill="rgb(226,37,32)" rx="2" ry="2" />
<text  x="34.45" y="975.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::newStreamImpl(Envoy::ConnectionPool::AttachContext&amp;, bool) (1 samples, 0.91%)</title><rect x="954.0" y="677" width="10.7" height="15.0" fill="rgb(247,171,33)" rx="2" ry="2" />
<text  x="957.00" y="687.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.91%)</title><rect x="471.3" y="101" width="10.7" height="15.0" fill="rgb(254,126,31)" rx="2" ry="2" />
<text  x="474.27" y="111.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.91%)</title><rect x="471.3" y="197" width="10.7" height="15.0" fill="rgb(222,177,47)" rx="2" ry="2" />
<text  x="474.27" y="207.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (3 samples, 2.73%)</title><rect x="396.2" y="741" width="32.2" height="15.0" fill="rgb(227,221,18)" rx="2" ry="2" />
<text  x="399.18" y="751.5" >En..</text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 1.82%)</title><rect x="1125.6" y="293" width="21.5" height="15.0" fill="rgb(226,194,43)" rx="2" ry="2" />
<text  x="1128.64" y="303.5" >i..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.91%)</title><rect x="1082.7" y="661" width="10.8" height="15.0" fill="rgb(217,220,21)" rx="2" ry="2" />
<text  x="1085.73" y="671.5" ></text>
</g>
<g >
<title>- (2 samples, 1.82%)</title><rect x="621.5" y="853" width="21.4" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="624.45" y="863.5" >-</text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.91%)</title><rect x="482.0" y="245" width="10.7" height="15.0" fill="rgb(229,147,30)" rx="2" ry="2" />
<text  x="485.00" y="255.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.91%)</title><rect x="503.5" y="917" width="10.7" height="15.0" fill="rgb(236,30,47)" rx="2" ry="2" />
<text  x="506.45" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::createCodec(Envoy::Buffer::Instance&amp;) (1 samples, 0.91%)</title><rect x="878.9" y="885" width="10.7" height="15.0" fill="rgb(238,105,8)" rx="2" ry="2" />
<text  x="881.91" y="895.5" ></text>
</g>
<g >
<title>Envoy::Server::Configuration::FilterChainUtility::buildFilterChain(Envoy::Network::FilterManager&amp;, std::__1::vector&lt;std::__1::function&lt;void (Envoy::Network::FilterManager&amp;)&gt;, std::__1::allocator&lt;std::__1::function&lt;void (Envoy::Network::FilterManager&amp;)&gt; &gt; &gt; const&amp;) (3 samples, 2.73%)</title><rect x="578.5" y="853" width="32.2" height="15.0" fill="rgb(254,36,8)" rx="2" ry="2" />
<text  x="581.55" y="863.5" >En..</text>
</g>
<g >
<title>__fput (3 samples, 2.73%)</title><rect x="1029.1" y="805" width="32.2" height="15.0" fill="rgb(231,12,9)" rx="2" ry="2" />
<text  x="1032.09" y="815.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 4.55%)</title><rect x="1114.9" y="821" width="53.6" height="15.0" fill="rgb(212,86,35)" rx="2" ry="2" />
<text  x="1117.91" y="831.5" >do_sy..</text>
</g>
<g >
<title>- (5 samples, 4.55%)</title><rect x="696.5" y="981" width="53.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="699.55" y="991.5" >-</text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 1.82%)</title><rect x="1125.6" y="485" width="21.5" height="15.0" fill="rgb(238,139,9)" rx="2" ry="2" />
<text  x="1128.64" y="495.5" >i..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::TlsCachingDateProviderImpl::onRefreshDate()::$_1, std::__1::allocator&lt;Envoy::Http::TlsCachingDateProviderImpl::onRefreshDate()::$_1&gt;, std::__1::shared_ptr&lt;Envoy::ThreadLocal::ThreadLocalObject&gt; (Envoy::Event::Dispatcher&amp;)&gt;::operator()(Envoy::Event::Dispatcher&amp;) (1 samples, 0.91%)</title><rect x="106.5" y="949" width="10.8" height="15.0" fill="rgb(219,137,7)" rx="2" ry="2" />
<text  x="109.55" y="959.5" ></text>
</g>
<g >
<title>epoll_ctl (2 samples, 1.82%)</title><rect x="546.4" y="693" width="21.4" height="15.0" fill="rgb(237,220,34)" rx="2" ry="2" />
<text  x="549.36" y="703.5" >e..</text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::setInline(Envoy::Http::CustomInlineHeaderRegistry::Handle&lt;(Envoy::Http::CustomInlineHeaderRegistry::Type)0&gt;, unsigned long) (1 samples, 0.91%)</title><rect x="342.5" y="693" width="10.8" height="15.0" fill="rgb(215,183,40)" rx="2" ry="2" />
<text  x="345.55" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (12 samples, 10.91%)</title><rect x="889.6" y="885" width="128.8" height="15.0" fill="rgb(214,101,19)" rx="2" ry="2" />
<text  x="892.64" y="895.5" >Envoy::Http::Htt..</text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::~FilterManagerImpl() (1 samples, 0.91%)</title><rect x="771.6" y="901" width="10.8" height="15.0" fill="rgb(211,23,31)" rx="2" ry="2" />
<text  x="774.64" y="911.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.91%)</title><rect x="911.1" y="677" width="10.7" height="15.0" fill="rgb(230,114,38)" rx="2" ry="2" />
<text  x="914.09" y="687.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 2.73%)</title><rect x="1029.1" y="853" width="32.2" height="15.0" fill="rgb(246,31,31)" rx="2" ry="2" />
<text  x="1032.09" y="863.5" >ex..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0, std::__1::allocator&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0&gt;, void ()&gt;::operator()() (6 samples, 5.45%)</title><rect x="1104.2" y="981" width="64.3" height="15.0" fill="rgb(254,75,31)" rx="2" ry="2" />
<text  x="1107.18" y="991.5" >std::__..</text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 1.82%)</title><rect x="1125.6" y="373" width="21.5" height="15.0" fill="rgb(218,116,23)" rx="2" ry="2" />
<text  x="1128.64" y="383.5" >_..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 1.82%)</title><rect x="85.1" y="869" width="21.4" height="15.0" fill="rgb(226,53,23)" rx="2" ry="2" />
<text  x="88.09" y="879.5" >s..</text>
</g>
<g >
<title>net_rx_action (4 samples, 3.64%)</title><rect x="460.5" y="405" width="43.0" height="15.0" fill="rgb(229,130,34)" rx="2" ry="2" />
<text  x="463.55" y="415.5" >net_..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (18 samples, 16.36%)</title><rect x="203.1" y="789" width="193.1" height="15.0" fill="rgb(210,171,36)" rx="2" ry="2" />
<text  x="206.09" y="799.5" >Envoy::Http::Http1::Conne..</text>
</g>
<g >
<title>Envoy::Network::LcTrie::LcTrie&lt;std::__1::shared_ptr&lt;absl::flat_hash_map&lt;unsigned short, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt;, absl::hash_internal::Hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned short const, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt; &gt; &gt; &gt; &gt; &gt;::LcTrieInternal&lt;unsigned int, 32u&gt;::getData(unsigned int const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="741" width="10.7" height="15.0" fill="rgb(218,145,40)" rx="2" ry="2" />
<text  x="1096.45" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.73%)</title><rect x="1029.1" y="869" width="32.2" height="15.0" fill="rgb(208,129,38)" rx="2" ry="2" />
<text  x="1032.09" y="879.5" >do..</text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int) (1 samples, 0.91%)</title><rect x="1082.7" y="789" width="10.8" height="15.0" fill="rgb(235,22,34)" rx="2" ry="2" />
<text  x="1085.73" y="799.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.91%)</title><rect x="1082.7" y="693" width="10.8" height="15.0" fill="rgb(246,61,14)" rx="2" ry="2" />
<text  x="1085.73" y="703.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.91%)</title><rect x="718.0" y="837" width="10.7" height="15.0" fill="rgb(242,47,50)" rx="2" ry="2" />
<text  x="721.00" y="847.5" ></text>
</g>
<g >
<title>- (3 samples, 2.73%)</title><rect x="514.2" y="901" width="32.2" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="517.18" y="911.5" >-</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (32 samples, 29.09%)</title><rect x="117.3" y="933" width="343.2" height="15.0" fill="rgb(240,51,25)" rx="2" ry="2" />
<text  x="120.27" y="943.5" >Envoy::Network::ConnectionImpl::onReadReady()</text>
</g>
<g >
<title>sock_sendmsg (4 samples, 3.64%)</title><rect x="460.5" y="709" width="43.0" height="15.0" fill="rgb(237,149,29)" rx="2" ry="2" />
<text  x="463.55" y="719.5" >sock..</text>
</g>
<g >
<title>dentry_free (2 samples, 1.82%)</title><rect x="1029.1" y="757" width="21.4" height="15.0" fill="rgb(228,45,4)" rx="2" ry="2" />
<text  x="1032.09" y="767.5" >d..</text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (1 samples, 0.91%)</title><rect x="449.8" y="917" width="10.7" height="15.0" fill="rgb(215,206,21)" rx="2" ry="2" />
<text  x="452.82" y="927.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 1.82%)</title><rect x="42.2" y="1061" width="21.4" height="15.0" fill="rgb(215,188,0)" rx="2" ry="2" />
<text  x="45.18" y="1071.5" >_..</text>
</g>
<g >
<title>Envoy::Http::Http1::ResponseEncoderImpl::encodeHeaders(Envoy::Http::ResponseHeaderMap const&amp;, bool) (1 samples, 0.91%)</title><rect x="857.5" y="629" width="10.7" height="15.0" fill="rgb(250,193,19)" rx="2" ry="2" />
<text  x="860.45" y="639.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#4}::__invoke(http_parser*, char const*, unsigned long) (1 samples, 0.91%)</title><rect x="428.4" y="805" width="10.7" height="15.0" fill="rgb(237,137,36)" rx="2" ry="2" />
<text  x="431.36" y="815.5" ></text>
</g>
<g >
<title>do_writev (4 samples, 3.64%)</title><rect x="460.5" y="789" width="43.0" height="15.0" fill="rgb(215,182,15)" rx="2" ry="2" />
<text  x="463.55" y="799.5" >do_w..</text>
</g>
<g >
<title>inet_getname (1 samples, 0.91%)</title><rect x="1061.3" y="821" width="10.7" height="15.0" fill="rgb(226,32,46)" rx="2" ry="2" />
<text  x="1064.27" y="831.5" ></text>
</g>
<g >
<title>tcp_push (2 samples, 1.82%)</title><rect x="621.5" y="645" width="21.4" height="15.0" fill="rgb(251,70,28)" rx="2" ry="2" />
<text  x="624.45" y="655.5" >t..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageBegin() (2 samples, 1.82%)</title><rect x="911.1" y="789" width="21.4" height="15.0" fill="rgb(224,134,51)" rx="2" ry="2" />
<text  x="914.09" y="799.5" >E..</text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.91%)</title><rect x="52.9" y="853" width="10.7" height="15.0" fill="rgb(241,154,32)" rx="2" ry="2" />
<text  x="55.91" y="863.5" ></text>
</g>
<g >
<title>Envoy::Stats::StatsMatcherImpl::fastRejects(Envoy::Stats::StatName) const (1 samples, 0.91%)</title><rect x="803.8" y="613" width="10.7" height="15.0" fill="rgb(228,9,28)" rx="2" ry="2" />
<text  x="806.82" y="623.5" ></text>
</g>
<g >
<title>wrk:worker_0 (53 samples, 48.18%)</title><rect x="74.4" y="1077" width="568.5" height="15.0" fill="rgb(216,29,18)" rx="2" ry="2" />
<text  x="77.36" y="1087.5" >wrk:worker_0</text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.91%)</title><rect x="471.3" y="165" width="10.7" height="15.0" fill="rgb(246,157,38)" rx="2" ry="2" />
<text  x="474.27" y="175.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (5 samples, 4.55%)</title><rect x="117.3" y="837" width="53.6" height="15.0" fill="rgb(214,39,2)" rx="2" ry="2" />
<text  x="120.27" y="847.5" >Envoy..</text>
</g>
<g >
<title>__x64_sys_epoll_ctl (2 samples, 1.82%)</title><rect x="546.4" y="629" width="21.4" height="15.0" fill="rgb(221,133,50)" rx="2" ry="2" />
<text  x="549.36" y="639.5" >_..</text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.91%)</title><rect x="524.9" y="741" width="10.7" height="15.0" fill="rgb(228,186,21)" rx="2" ry="2" />
<text  x="527.91" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (7 samples, 6.36%)</title><rect x="803.8" y="741" width="75.1" height="15.0" fill="rgb(226,145,2)" rx="2" ry="2" />
<text  x="806.82" y="751.5" >Envoy::H..</text>
</g>
<g >
<title>Envoy::Server::WatchDogImpl::touch() (1 samples, 0.91%)</title><rect x="610.7" y="981" width="10.8" height="15.0" fill="rgb(241,127,31)" rx="2" ry="2" />
<text  x="613.73" y="991.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::UpstreamInfoImpl::setUpstreamLocalAddress(std::__1::shared_ptr&lt;Envoy::Network::Address::Instance const&gt; const&amp;) (1 samples, 0.91%)</title><rect x="954.0" y="597" width="10.7" height="15.0" fill="rgb(213,137,44)" rx="2" ry="2" />
<text  x="957.00" y="607.5" ></text>
</g>
<g >
<title>ip_local_out (2 samples, 1.82%)</title><rect x="1125.6" y="549" width="21.5" height="15.0" fill="rgb(243,202,22)" rx="2" ry="2" />
<text  x="1128.64" y="559.5" >i..</text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 1.82%)</title><rect x="1125.6" y="469" width="21.5" height="15.0" fill="rgb(244,228,35)" rx="2" ry="2" />
<text  x="1128.64" y="479.5" >_..</text>
</g>
<g >
<title>Envoy::Http::CodecClient::CodecReadFilter::onData(Envoy::Buffer::Instance&amp;, bool) (5 samples, 4.55%)</title><rect x="117.3" y="901" width="53.6" height="15.0" fill="rgb(215,152,8)" rx="2" ry="2" />
<text  x="120.27" y="911.5" >Envoy..</text>
</g>
<g >
<title>dog:workers_gua (2 samples, 1.82%)</title><rect x="10.0" y="1077" width="21.5" height="15.0" fill="rgb(249,207,2)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >d..</text>
</g>
<g >
<title>do_epoll_wait (4 samples, 3.64%)</title><rect x="696.5" y="917" width="43.0" height="15.0" fill="rgb(209,203,38)" rx="2" ry="2" />
<text  x="699.55" y="927.5" >do_e..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (1 samples, 0.91%)</title><rect x="557.1" y="597" width="10.7" height="15.0" fill="rgb(246,116,20)" rx="2" ry="2" />
<text  x="560.09" y="607.5" ></text>
</g>
<g >
<title>Envoy::ConstSingleton&lt;Envoy::Http::RequestHeaderMapImpl::HeaderHandleValues&gt;::get() (1 samples, 0.91%)</title><rect x="986.2" y="725" width="10.7" height="15.0" fill="rgb(219,114,41)" rx="2" ry="2" />
<text  x="989.18" y="735.5" ></text>
</g>
<g >
<title>operator new[](unsigned long) (1 samples, 0.91%)</title><rect x="288.9" y="485" width="10.7" height="15.0" fill="rgb(215,2,3)" rx="2" ry="2" />
<text  x="291.91" y="495.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (5 samples, 4.55%)</title><rect x="117.3" y="773" width="53.6" height="15.0" fill="rgb(252,43,47)" rx="2" ry="2" />
<text  x="120.27" y="783.5" >Envoy..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::determineNextProtocol(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;) (1 samples, 0.91%)</title><rect x="170.9" y="821" width="10.7" height="15.0" fill="rgb(232,94,17)" rx="2" ry="2" />
<text  x="173.91" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (24 samples, 21.82%)</title><rect x="181.6" y="869" width="257.5" height="15.0" fill="rgb(233,162,6)" rx="2" ry="2" />
<text  x="184.64" y="879.5" >Envoy::Http::Http1::ConnectionImpl..</text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*, Envoy::Network::ReadBufferSource&amp;) (21 samples, 19.09%)</title><rect x="793.1" y="917" width="225.3" height="15.0" fill="rgb(206,97,34)" rx="2" ry="2" />
<text  x="796.09" y="927.5" >Envoy::Network::FilterManager..</text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::counterFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;) (2 samples, 1.82%)</title><rect x="814.5" y="613" width="21.5" height="15.0" fill="rgb(250,223,3)" rx="2" ry="2" />
<text  x="817.55" y="623.5" >E..</text>
</g>
<g >
<title>Envoy::Server::ActiveTcpSocket::newConnection() (3 samples, 2.73%)</title><rect x="1072.0" y="885" width="32.2" height="15.0" fill="rgb(232,182,0)" rx="2" ry="2" />
<text  x="1075.00" y="895.5" >En..</text>
</g>
<g >
<title>ep_poll (4 samples, 3.64%)</title><rect x="696.5" y="901" width="43.0" height="15.0" fill="rgb(235,52,0)" rx="2" ry="2" />
<text  x="699.55" y="911.5" >ep_p..</text>
</g>
<g >
<title>Envoy::Http::CodecClient::onData(Envoy::Buffer::Instance&amp;) (8 samples, 7.27%)</title><rect x="793.1" y="885" width="85.8" height="15.0" fill="rgb(213,150,3)" rx="2" ry="2" />
<text  x="796.09" y="895.5" >Envoy::Htt..</text>
</g>
<g >
<title>Envoy::Server::FilterChainManagerImpl::findFilterChainForSourceIpAndPort(Envoy::Network::LcTrie::LcTrie&lt;std::__1::shared_ptr&lt;absl::flat_hash_map&lt;unsigned short, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt;, absl::hash_internal::Hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned short const, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt; &gt; &gt; &gt; &gt; &gt; const&amp;, Envoy::Network::ConnectionSocket const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="773" width="10.7" height="15.0" fill="rgb(211,183,16)" rx="2" ry="2" />
<text  x="1096.45" y="783.5" ></text>
</g>
<g >
<title>tcp_send_mss (1 samples, 0.91%)</title><rect x="1147.1" y="645" width="10.7" height="15.0" fill="rgb(207,205,54)" rx="2" ry="2" />
<text  x="1150.09" y="655.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::initializeFileEvent(Envoy::Event::Dispatcher&amp;, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int) (1 samples, 0.91%)</title><rect x="1082.7" y="805" width="10.8" height="15.0" fill="rgb(246,199,44)" rx="2" ry="2" />
<text  x="1085.73" y="815.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.91%)</title><rect x="74.4" y="773" width="10.7" height="15.0" fill="rgb(213,141,7)" rx="2" ry="2" />
<text  x="77.36" y="783.5" ></text>
</g>
<g >
<title>__sys_getsockname (1 samples, 0.91%)</title><rect x="1061.3" y="837" width="10.7" height="15.0" fill="rgb(207,34,26)" rx="2" ry="2" />
<text  x="1064.27" y="847.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 1.82%)</title><rect x="1125.6" y="517" width="21.5" height="15.0" fill="rgb(242,101,10)" rx="2" ry="2" />
<text  x="1128.64" y="527.5" >i..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (3 samples, 2.73%)</title><rect x="74.4" y="933" width="32.1" height="15.0" fill="rgb(249,89,49)" rx="2" ry="2" />
<text  x="77.36" y="943.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.91%)</title><rect x="1061.3" y="869" width="10.7" height="15.0" fill="rgb(253,187,54)" rx="2" ry="2" />
<text  x="1064.27" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#1}::__invoke(http_parser*) (1 samples, 0.91%)</title><rect x="181.6" y="805" width="10.8" height="15.0" fill="rgb(223,141,25)" rx="2" ry="2" />
<text  x="184.64" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 3.64%)</title><rect x="460.5" y="821" width="43.0" height="15.0" fill="rgb(221,159,54)" rx="2" ry="2" />
<text  x="463.55" y="831.5" >do_s..</text>
</g>
<g >
<title>Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;) (1 samples, 0.91%)</title><rect x="878.9" y="853" width="10.7" height="15.0" fill="rgb(209,9,17)" rx="2" ry="2" />
<text  x="881.91" y="863.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::UpstreamRequest(Envoy::Router::RouterFilterInterface&amp;, std::__1::unique_ptr&lt;Envoy::Router::GenericConnPool, std::__1::default_delete&lt;Envoy::Router::GenericConnPool&gt; &gt;&amp;&amp;, bool, bool) (1 samples, 0.91%)</title><rect x="353.3" y="709" width="10.7" height="15.0" fill="rgb(249,218,23)" rx="2" ry="2" />
<text  x="356.27" y="719.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (50 samples, 45.45%)</title><rect x="106.5" y="997" width="536.4" height="15.0" fill="rgb(250,96,47)" rx="2" ry="2" />
<text  x="109.55" y="1007.5" >event_process_active_single_queue</text>
</g>
<g >
<title>Envoy::Stats::StatName::operator==(Envoy::Stats::StatName const&amp;) const (1 samples, 0.91%)</title><rect x="825.3" y="597" width="10.7" height="15.0" fill="rgb(253,77,19)" rx="2" ry="2" />
<text  x="828.27" y="607.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (1 samples, 0.91%)</title><rect x="364.0" y="693" width="10.7" height="15.0" fill="rgb(220,156,5)" rx="2" ry="2" />
<text  x="367.00" y="703.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (4 samples, 3.64%)</title><rect x="460.5" y="565" width="43.0" height="15.0" fill="rgb(225,181,5)" rx="2" ry="2" />
<text  x="463.55" y="575.5" >__ip..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (18 samples, 16.36%)</title><rect x="203.1" y="805" width="193.1" height="15.0" fill="rgb(244,196,18)" rx="2" ry="2" />
<text  x="206.09" y="815.5" >Envoy::Http::Http1::Legac..</text>
</g>
<g >
<title>__ip_queue_xmit (2 samples, 1.82%)</title><rect x="1125.6" y="565" width="21.5" height="15.0" fill="rgb(233,142,49)" rx="2" ry="2" />
<text  x="1128.64" y="575.5" >_..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;) (1 samples, 0.91%)</title><rect x="170.9" y="869" width="10.7" height="15.0" fill="rgb(220,171,31)" rx="2" ry="2" />
<text  x="173.91" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onMessageCompleteBase() (5 samples, 4.55%)</title><rect x="117.3" y="757" width="53.6" height="15.0" fill="rgb(244,100,51)" rx="2" ry="2" />
<text  x="120.27" y="767.5" >Envoy..</text>
</g>
<g >
<title>- (1 samples, 0.91%)</title><rect x="10.0" y="981" width="10.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>epoll_wait (1 samples, 0.91%)</title><rect x="10.0" y="997" width="10.7" height="15.0" fill="rgb(236,159,38)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (2 samples, 1.82%)</title><rect x="621.5" y="917" width="21.4" height="15.0" fill="rgb(222,188,11)" rx="2" ry="2" />
<text  x="624.45" y="927.5" >E..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.91%)</title><rect x="74.4" y="837" width="10.7" height="15.0" fill="rgb(253,50,15)" rx="2" ry="2" />
<text  x="77.36" y="847.5" ></text>
</g>
<g >
<title>bool url::(anonymous namespace)::DoPartialPathInternal&lt;char, unsigned char&gt;(char const*, url::Component const&amp;, int, url::CanonOutputT&lt;char&gt;*) (1 samples, 0.91%)</title><rect x="224.5" y="693" width="10.8" height="15.0" fill="rgb(229,131,39)" rx="2" ry="2" />
<text  x="227.55" y="703.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.91%)</title><rect x="1082.7" y="725" width="10.8" height="15.0" fill="rgb(223,156,21)" rx="2" ry="2" />
<text  x="1085.73" y="735.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageCompleteBase() (5 samples, 4.55%)</title><rect x="943.3" y="773" width="53.6" height="15.0" fill="rgb(211,222,47)" rx="2" ry="2" />
<text  x="946.27" y="783.5" >Envoy..</text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::newStream(Envoy::Router::GenericConnectionPoolCallbacks*) (4 samples, 3.64%)</title><rect x="278.2" y="709" width="42.9" height="15.0" fill="rgb(211,211,3)" rx="2" ry="2" />
<text  x="281.18" y="719.5" >Envo..</text>
</g>
<g >
<title>schedule (1 samples, 0.91%)</title><rect x="728.7" y="837" width="10.8" height="15.0" fill="rgb(219,149,23)" rx="2" ry="2" />
<text  x="731.73" y="847.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (1 samples, 0.91%)</title><rect x="524.9" y="805" width="10.7" height="15.0" fill="rgb(226,217,2)" rx="2" ry="2" />
<text  x="527.91" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.91%)</title><rect x="1082.7" y="645" width="10.8" height="15.0" fill="rgb(246,61,28)" rx="2" ry="2" />
<text  x="1085.73" y="655.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.91%)</title><rect x="1082.7" y="517" width="10.8" height="15.0" fill="rgb(242,99,9)" rx="2" ry="2" />
<text  x="1085.73" y="527.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 1.82%)</title><rect x="10.0" y="1013" width="21.5" height="15.0" fill="rgb(241,101,17)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >e..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;) (1 samples, 0.91%)</title><rect x="878.9" y="869" width="10.7" height="15.0" fill="rgb(214,135,6)" rx="2" ry="2" />
<text  x="881.91" y="879.5" ></text>
</g>
<g >
<title>void Envoy::Event::TimerUtils::durationToTimeval&lt;std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt; &gt;(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt; const&amp;, timeval&amp;) (1 samples, 0.91%)</title><rect x="331.8" y="677" width="10.7" height="15.0" fill="rgb(205,200,3)" rx="2" ry="2" />
<text  x="334.82" y="687.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::attachStreamToClient(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (1 samples, 0.91%)</title><rect x="954.0" y="661" width="10.7" height="15.0" fill="rgb(244,65,35)" rx="2" ry="2" />
<text  x="957.00" y="671.5" ></text>
</g>
<g >
<title>do_iter_write (5 samples, 4.55%)</title><rect x="1114.9" y="757" width="53.6" height="15.0" fill="rgb(238,206,7)" rx="2" ry="2" />
<text  x="1117.91" y="767.5" >do_it..</text>
</g>
<g >
<title>__x64_sys_writev (4 samples, 3.64%)</title><rect x="460.5" y="805" width="43.0" height="15.0" fill="rgb(205,156,39)" rx="2" ry="2" />
<text  x="463.55" y="815.5" >__x6..</text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::newStreamImpl(Envoy::ConnectionPool::AttachContext&amp;, bool) (1 samples, 0.91%)</title><rect x="278.2" y="693" width="10.7" height="15.0" fill="rgb(215,158,0)" rx="2" ry="2" />
<text  x="281.18" y="703.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::RouterFilter::RouterFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::router::v3::Router const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::RouterFilter::RouterFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::router::v3::Router const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (1 samples, 0.91%)</title><rect x="267.5" y="709" width="10.7" height="15.0" fill="rgb(233,109,14)" rx="2" ry="2" />
<text  x="270.45" y="719.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::removeEnvoyRetryGrpcOn() (1 samples, 0.91%)</title><rect x="246.0" y="709" width="10.7" height="15.0" fill="rgb(238,9,29)" rx="2" ry="2" />
<text  x="249.00" y="719.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (1 samples, 0.91%)</title><rect x="1082.7" y="549" width="10.8" height="15.0" fill="rgb(221,14,1)" rx="2" ry="2" />
<text  x="1085.73" y="559.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (8 samples, 7.27%)</title><rect x="793.1" y="853" width="85.8" height="15.0" fill="rgb(254,5,26)" rx="2" ry="2" />
<text  x="796.09" y="863.5" >Envoy::Htt..</text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onMessageCompleteBase() (7 samples, 6.36%)</title><rect x="803.8" y="757" width="75.1" height="15.0" fill="rgb(253,116,18)" rx="2" ry="2" />
<text  x="806.82" y="767.5" >Envoy::H..</text>
</g>
<g >
<title>Envoy::Http::CodecClient::deleteRequest(Envoy::Http::CodecClient::ActiveRequest&amp;) (1 samples, 0.91%)</title><rect x="117.3" y="709" width="10.7" height="15.0" fill="rgb(244,94,53)" rx="2" ry="2" />
<text  x="120.27" y="719.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::CommandLineFlag*&gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::CommandLineFlag*&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::CommandLineFlag*&gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::CommandLineFlag*&gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (1 samples, 0.91%)</title><rect x="439.1" y="869" width="10.7" height="15.0" fill="rgb(250,70,2)" rx="2" ry="2" />
<text  x="442.09" y="879.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 1.82%)</title><rect x="1125.6" y="341" width="21.5" height="15.0" fill="rgb(214,222,52)" rx="2" ry="2" />
<text  x="1128.64" y="351.5" >i..</text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.91%)</title><rect x="1125.6" y="245" width="10.8" height="15.0" fill="rgb(229,204,43)" rx="2" ry="2" />
<text  x="1128.64" y="255.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageBegin() (1 samples, 0.91%)</title><rect x="181.6" y="789" width="10.8" height="15.0" fill="rgb(206,207,38)" rx="2" ry="2" />
<text  x="184.64" y="799.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2 samples, 1.82%)</title><rect x="1125.6" y="581" width="21.5" height="15.0" fill="rgb(234,154,44)" rx="2" ry="2" />
<text  x="1128.64" y="591.5" >i..</text>
</g>
<g >
<title>event_add_nolock_ (2 samples, 1.82%)</title><rect x="546.4" y="741" width="21.4" height="15.0" fill="rgb(248,168,15)" rx="2" ry="2" />
<text  x="549.36" y="751.5" >e..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::autoCreateCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;, Envoy::Stats::Scope&amp;, Envoy::Random::RandomGenerator&amp;, Envoy::Thread::AtomicPtr&lt;Envoy::Http::Http1::CodecStats, (Envoy::Thread::AtomicPtrAllocMode)1&gt;&amp;, Envoy::Thread::AtomicPtr&lt;Envoy::Http::Http2::CodecStats, (Envoy::Thread::AtomicPtrAllocMode)1&gt;&amp;, Envoy::Http::Http1Settings const&amp;, envoy::config::core::v3::Http2ProtocolOptions const&amp;, unsigned int, unsigned int, envoy::config::core::v3::HttpProtocolOptions_HeadersWithUnderscoresAction) (1 samples, 0.91%)</title><rect x="878.9" y="837" width="10.7" height="15.0" fill="rgb(232,174,43)" rx="2" ry="2" />
<text  x="881.91" y="847.5" ></text>
</g>
<g >
<title>http_parser_execute (24 samples, 21.82%)</title><rect x="181.6" y="821" width="257.5" height="15.0" fill="rgb(210,182,53)" rx="2" ry="2" />
<text  x="184.64" y="831.5" >http_parser_execute</text>
</g>
<g >
<title>__sys_accept4 (2 samples, 1.82%)</title><rect x="514.2" y="837" width="21.4" height="15.0" fill="rgb(232,197,5)" rx="2" ry="2" />
<text  x="517.18" y="847.5" >_..</text>
</g>
<g >
<title>Envoy::Server::ActiveTcpSocket::continueFilterChain(bool) (6 samples, 5.45%)</title><rect x="546.4" y="901" width="64.3" height="15.0" fill="rgb(217,14,13)" rx="2" ry="2" />
<text  x="549.36" y="911.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Generic::GenericGenericConnPoolFactory::createGenericConnPool(Envoy::Upstream::ThreadLocalCluster&amp;, bool, Envoy::Router::RouteEntry const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) const (1 samples, 0.91%)</title><rect x="321.1" y="693" width="10.7" height="15.0" fill="rgb(223,157,11)" rx="2" ry="2" />
<text  x="324.09" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::doEndStream(Envoy::Http::ConnectionManagerImpl::ActiveStream&amp;) (2 samples, 1.82%)</title><rect x="149.5" y="645" width="21.4" height="15.0" fill="rgb(248,210,16)" rx="2" ry="2" />
<text  x="152.45" y="655.5" >E..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#1}::__invoke(http_parser*) (2 samples, 1.82%)</title><rect x="911.1" y="805" width="21.4" height="15.0" fill="rgb(244,70,4)" rx="2" ry="2" />
<text  x="914.09" y="815.5" >E..</text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::addFragments(absl::Span&lt;absl::string_view const&gt;) (1 samples, 0.91%)</title><rect x="288.9" y="533" width="10.7" height="15.0" fill="rgb(214,84,40)" rx="2" ry="2" />
<text  x="291.91" y="543.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.91%)</title><rect x="1136.4" y="197" width="10.7" height="15.0" fill="rgb(235,37,26)" rx="2" ry="2" />
<text  x="1139.36" y="207.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2 samples, 1.82%)</title><rect x="621.5" y="965" width="21.4" height="15.0" fill="rgb(214,100,4)" rx="2" ry="2" />
<text  x="624.45" y="975.5" >s..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::ConnectionImpl(Envoy::Event::Dispatcher&amp;, std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;, bool) (3 samples, 2.73%)</title><rect x="546.4" y="821" width="32.1" height="15.0" fill="rgb(224,9,8)" rx="2" ry="2" />
<text  x="549.36" y="831.5" >En..</text>
</g>
<g >
<title>net_rx_action (2 samples, 1.82%)</title><rect x="1125.6" y="405" width="21.5" height="15.0" fill="rgb(223,59,8)" rx="2" ry="2" />
<text  x="1128.64" y="415.5" >n..</text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.91%)</title><rect x="492.7" y="293" width="10.8" height="15.0" fill="rgb(253,73,37)" rx="2" ry="2" />
<text  x="495.73" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.91%)</title><rect x="10.0" y="965" width="10.7" height="15.0" fill="rgb(241,29,36)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (4 samples, 3.64%)</title><rect x="696.5" y="885" width="43.0" height="15.0" fill="rgb(211,220,47)" rx="2" ry="2" />
<text  x="699.55" y="895.5" >sche..</text>
</g>
<g >
<title>Envoy::Random::RandomGeneratorImpl::random() (1 samples, 0.91%)</title><rect x="911.1" y="709" width="10.7" height="15.0" fill="rgb(205,73,0)" rx="2" ry="2" />
<text  x="914.09" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (1 samples, 0.91%)</title><rect x="192.4" y="741" width="10.7" height="15.0" fill="rgb(251,136,26)" rx="2" ry="2" />
<text  x="195.36" y="751.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (2 samples, 1.82%)</title><rect x="621.5" y="901" width="21.4" height="15.0" fill="rgb(229,134,20)" rx="2" ry="2" />
<text  x="624.45" y="911.5" >E..</text>
</g>
<g >
<title>Envoy::Http::ContextImpl::userAgentContext() const (1 samples, 0.91%)</title><rect x="589.3" y="821" width="10.7" height="15.0" fill="rgb(214,170,24)" rx="2" ry="2" />
<text  x="592.27" y="831.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (2 samples, 1.82%)</title><rect x="621.5" y="933" width="21.4" height="15.0" fill="rgb(237,227,32)" rx="2" ry="2" />
<text  x="624.45" y="943.5" >E..</text>
</g>
<g >
<title>writev (5 samples, 4.55%)</title><rect x="1114.9" y="869" width="53.6" height="15.0" fill="rgb(253,70,25)" rx="2" ry="2" />
<text  x="1117.91" y="879.5" >writev</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.91%)</title><rect x="52.9" y="773" width="10.7" height="15.0" fill="rgb(239,61,52)" rx="2" ry="2" />
<text  x="55.91" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.91%)</title><rect x="642.9" y="1029" width="10.7" height="15.0" fill="rgb(232,61,22)" rx="2" ry="2" />
<text  x="645.91" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::ConnectionImpl(Envoy::Event::Dispatcher&amp;, std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;, bool) (1 samples, 0.91%)</title><rect x="1082.7" y="821" width="10.8" height="15.0" fill="rgb(236,113,54)" rx="2" ry="2" />
<text  x="1085.73" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (1 samples, 0.91%)</title><rect x="428.4" y="773" width="10.7" height="15.0" fill="rgb(249,202,34)" rx="2" ry="2" />
<text  x="431.36" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (1 samples, 0.91%)</title><rect x="192.4" y="757" width="10.7" height="15.0" fill="rgb(247,141,16)" rx="2" ry="2" />
<text  x="195.36" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeHeaders(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Http::RequestHeaderMap&amp;, bool) (10 samples, 9.09%)</title><rect x="278.2" y="741" width="107.3" height="15.0" fill="rgb(230,183,35)" rx="2" ry="2" />
<text  x="281.18" y="751.5" >Envoy::Http::..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.91%)</title><rect x="52.9" y="709" width="10.7" height="15.0" fill="rgb(228,149,22)" rx="2" ry="2" />
<text  x="55.91" y="719.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.91%)</title><rect x="482.0" y="309" width="10.7" height="15.0" fill="rgb(237,11,10)" rx="2" ry="2" />
<text  x="485.00" y="319.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2 samples, 1.82%)</title><rect x="1125.6" y="277" width="21.5" height="15.0" fill="rgb(207,133,30)" rx="2" ry="2" />
<text  x="1128.64" y="287.5" >i..</text>
</g>
<g >
<title>event_queue_remove_timeout (1 samples, 0.91%)</title><rect x="42.2" y="949" width="10.7" height="15.0" fill="rgb(223,209,49)" rx="2" ry="2" />
<text  x="45.18" y="959.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int) (2 samples, 1.82%)</title><rect x="546.4" y="773" width="21.4" height="15.0" fill="rgb(205,107,6)" rx="2" ry="2" />
<text  x="549.36" y="783.5" >E..</text>
</g>
<g >
<title>Envoy::Http::PathUtil::canonicalPath(Envoy::Http::RequestHeaderMap&amp;) (1 samples, 0.91%)</title><rect x="224.5" y="725" width="10.8" height="15.0" fill="rgb(248,66,46)" rx="2" ry="2" />
<text  x="227.55" y="735.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.91%)</title><rect x="1136.4" y="213" width="10.7" height="15.0" fill="rgb(213,96,30)" rx="2" ry="2" />
<text  x="1139.36" y="223.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 1.82%)</title><rect x="1125.6" y="437" width="21.5" height="15.0" fill="rgb(243,39,49)" rx="2" ry="2" />
<text  x="1128.64" y="447.5" >d..</text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.91%)</title><rect x="482.0" y="277" width="10.7" height="15.0" fill="rgb(220,12,12)" rx="2" ry="2" />
<text  x="485.00" y="287.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::requestShouldHaveNoBody(Envoy::Http::RequestHeaderMap const&amp;) (1 samples, 0.91%)</title><rect x="299.6" y="533" width="10.8" height="15.0" fill="rgb(249,135,46)" rx="2" ry="2" />
<text  x="302.64" y="543.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt; const&amp;) (1 samples, 0.91%)</title><rect x="288.9" y="501" width="10.7" height="15.0" fill="rgb(249,44,32)" rx="2" ry="2" />
<text  x="291.91" y="511.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 1.82%)</title><rect x="1125.6" y="325" width="21.5" height="15.0" fill="rgb(228,201,20)" rx="2" ry="2" />
<text  x="1128.64" y="335.5" >i..</text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::reserveWithMaxLength(unsigned long) (1 samples, 0.91%)</title><rect x="1018.4" y="869" width="10.7" height="15.0" fill="rgb(228,41,32)" rx="2" ry="2" />
<text  x="1021.36" y="879.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.91%)</title><rect x="632.2" y="453" width="10.7" height="15.0" fill="rgb(238,42,17)" rx="2" ry="2" />
<text  x="635.18" y="463.5" ></text>
</g>
<g >
<title>__sys_sendto (1 samples, 0.91%)</title><rect x="31.5" y="981" width="10.7" height="15.0" fill="rgb(235,30,2)" rx="2" ry="2" />
<text  x="34.45" y="991.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (46 samples, 41.82%)</title><rect x="117.3" y="981" width="493.4" height="15.0" fill="rgb(240,119,49)" rx="2" ry="2" />
<text  x="120.27" y="991.5" >Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*..</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.91%)</title><rect x="1136.4" y="229" width="10.7" height="15.0" fill="rgb(226,17,36)" rx="2" ry="2" />
<text  x="1139.36" y="239.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.91%)</title><rect x="471.3" y="213" width="10.7" height="15.0" fill="rgb(225,82,43)" rx="2" ry="2" />
<text  x="474.27" y="223.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeResponseStat(Envoy::Http::CodeStats::ResponseStatInfo const&amp;, bool) const (4 samples, 3.64%)</title><rect x="803.8" y="661" width="42.9" height="15.0" fill="rgb(236,162,21)" rx="2" ry="2" />
<text  x="806.82" y="671.5" >Envo..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (30 samples, 27.27%)</title><rect x="782.4" y="965" width="321.8" height="15.0" fill="rgb(221,186,47)" rx="2" ry="2" />
<text  x="785.36" y="975.5" >std::__1::__function::__func&lt;Envoy::Event::..</text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onHeadersCompleteBase() (1 samples, 0.91%)</title><rect x="793.1" y="741" width="10.7" height="15.0" fill="rgb(218,41,33)" rx="2" ry="2" />
<text  x="796.09" y="751.5" ></text>
</g>
<g >
<title>Envoy::Network::TcpListenerImpl::onSocketEvent(short) (10 samples, 9.09%)</title><rect x="503.5" y="949" width="107.2" height="15.0" fill="rgb(228,98,46)" rx="2" ry="2" />
<text  x="506.45" y="959.5" >Envoy::Networ..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.91%)</title><rect x="632.2" y="469" width="10.7" height="15.0" fill="rgb(246,72,15)" rx="2" ry="2" />
<text  x="635.18" y="479.5" ></text>
</g>
<g >
<title>sock_write_iter (4 samples, 3.64%)</title><rect x="460.5" y="725" width="43.0" height="15.0" fill="rgb(250,172,13)" rx="2" ry="2" />
<text  x="463.55" y="735.5" >sock..</text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (5 samples, 4.55%)</title><rect x="117.3" y="869" width="53.6" height="15.0" fill="rgb(224,54,10)" rx="2" ry="2" />
<text  x="120.27" y="879.5" >Envoy..</text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::isSpecial1xx(Envoy::Http::ResponseHeaderMap const&amp;) (1 samples, 0.91%)</title><rect x="793.1" y="725" width="10.7" height="15.0" fill="rgb(220,212,49)" rx="2" ry="2" />
<text  x="796.09" y="735.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::incCounter(Envoy::Stats::Scope&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName) const (3 samples, 2.73%)</title><rect x="803.8" y="629" width="32.2" height="15.0" fill="rgb(224,191,42)" rx="2" ry="2" />
<text  x="806.82" y="639.5" >En..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (1 samples, 0.91%)</title><rect x="1082.7" y="597" width="10.8" height="15.0" fill="rgb(221,161,53)" rx="2" ry="2" />
<text  x="1085.73" y="607.5" ></text>
</g>
<g >
<title>__ip_append_data.isra.0 (1 samples, 0.91%)</title><rect x="31.5" y="885" width="10.7" height="15.0" fill="rgb(254,9,45)" rx="2" ry="2" />
<text  x="34.45" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (6 samples, 5.45%)</title><rect x="932.5" y="805" width="64.4" height="15.0" fill="rgb(206,188,54)" rx="2" ry="2" />
<text  x="935.55" y="815.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::ThreadLocal::TypedSlot&lt;Envoy::Stats::ThreadLocalStoreImpl::TlsCache&gt;::runOnAllThreads(std::__1::function&lt;void (Envoy::OptRef&lt;Envoy::Stats::ThreadLocalStoreImpl::TlsCache&gt;)&gt; const&amp;, std::__1::function&lt;void ()&gt; const&amp;) (1 samples, 0.91%)</title><rect x="52.9" y="917" width="10.7" height="15.0" fill="rgb(207,77,53)" rx="2" ry="2" />
<text  x="55.91" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (2 samples, 1.82%)</title><rect x="911.1" y="757" width="21.4" height="15.0" fill="rgb(207,15,18)" rx="2" ry="2" />
<text  x="914.09" y="767.5" >E..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ClientConnectionImpl::onHeadersCompleteBase() (1 samples, 0.91%)</title><rect x="793.1" y="757" width="10.7" height="15.0" fill="rgb(253,162,21)" rx="2" ry="2" />
<text  x="796.09" y="767.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (1 samples, 0.91%)</title><rect x="364.0" y="709" width="10.7" height="15.0" fill="rgb(233,178,50)" rx="2" ry="2" />
<text  x="367.00" y="719.5" ></text>
</g>
<g >
<title>- (4 samples, 3.64%)</title><rect x="460.5" y="853" width="43.0" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="463.55" y="863.5" >-</text>
</g>
<g >
<title>Envoy::Server::ActiveTcpListener::onAcceptWorker(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, bool, bool) (3 samples, 2.73%)</title><rect x="1072.0" y="933" width="32.2" height="15.0" fill="rgb(230,201,4)" rx="2" ry="2" />
<text  x="1075.00" y="943.5" >En..</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.91%)</title><rect x="524.9" y="757" width="10.7" height="15.0" fill="rgb(249,100,42)" rx="2" ry="2" />
<text  x="527.91" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.91%)</title><rect x="642.9" y="1061" width="10.7" height="15.0" fill="rgb(218,155,2)" rx="2" ry="2" />
<text  x="645.91" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::newStream(Envoy::Http::ResponseDecoder&amp;) (1 samples, 0.91%)</title><rect x="310.4" y="597" width="10.7" height="15.0" fill="rgb(211,22,46)" rx="2" ry="2" />
<text  x="313.36" y="607.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 1.82%)</title><rect x="85.1" y="805" width="21.4" height="15.0" fill="rgb(216,19,21)" rx="2" ry="2" />
<text  x="88.09" y="815.5" >f..</text>
</g>
<g >
<title>do_softirq_own_stack (4 samples, 3.64%)</title><rect x="460.5" y="437" width="43.0" height="15.0" fill="rgb(252,203,42)" rx="2" ry="2" />
<text  x="463.55" y="447.5" >do_s..</text>
</g>
<g >
<title>evict (1 samples, 0.91%)</title><rect x="535.6" y="725" width="10.8" height="15.0" fill="rgb(227,96,43)" rx="2" ry="2" />
<text  x="538.64" y="735.5" ></text>
</g>
<g >
<title>all (110 samples, 100%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(230,149,20)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>Envoy::ConstSingleton&lt;Envoy::Http::HeaderValues&gt;::get() (1 samples, 0.91%)</title><rect x="299.6" y="517" width="10.8" height="15.0" fill="rgb(213,65,17)" rx="2" ry="2" />
<text  x="302.64" y="527.5" ></text>
</g>
<g >
<title>Envoy::Router::ConfigImpl::route(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (1 samples, 0.91%)</title><rect x="203.1" y="725" width="10.7" height="15.0" fill="rgb(250,48,6)" rx="2" ry="2" />
<text  x="206.09" y="735.5" ></text>
</g>
<g >
<title>Envoy::Network::ServerConnectionImpl::ServerConnectionImpl(Envoy::Event::Dispatcher&amp;, std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;, bool) (2 samples, 1.82%)</title><rect x="1072.0" y="837" width="21.5" height="15.0" fill="rgb(214,195,51)" rx="2" ry="2" />
<text  x="1075.00" y="847.5" >E..</text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamHeaders(unsigned long, std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (7 samples, 6.36%)</title><rect x="803.8" y="693" width="75.1" height="15.0" fill="rgb(236,136,22)" rx="2" ry="2" />
<text  x="806.82" y="703.5" >Envoy::R..</text>
</g>
<g >
<title>Envoy::Router::Filter::onRequestComplete() (1 samples, 0.91%)</title><rect x="331.8" y="709" width="10.7" height="15.0" fill="rgb(211,54,44)" rx="2" ry="2" />
<text  x="334.82" y="719.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveStreamListenerBase::onSocketAccepted(std::__1::unique_ptr&lt;Envoy::Server::ActiveTcpSocket, std::__1::default_delete&lt;Envoy::Server::ActiveTcpSocket&gt; &gt;) (3 samples, 2.73%)</title><rect x="1072.0" y="917" width="32.2" height="15.0" fill="rgb(241,31,43)" rx="2" ry="2" />
<text  x="1075.00" y="927.5" >En..</text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 1.82%)</title><rect x="696.5" y="853" width="21.5" height="15.0" fill="rgb(207,162,14)" rx="2" ry="2" />
<text  x="699.55" y="863.5" >h..</text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 0.91%)</title><rect x="10.0" y="869" width="10.7" height="15.0" fill="rgb(230,209,5)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>do_writev (2 samples, 1.82%)</title><rect x="621.5" y="789" width="21.4" height="15.0" fill="rgb(239,229,0)" rx="2" ry="2" />
<text  x="624.45" y="799.5" >d..</text>
</g>
<g >
<title>kmem_cache_free (2 samples, 1.82%)</title><rect x="1029.1" y="741" width="21.4" height="15.0" fill="rgb(223,20,21)" rx="2" ry="2" />
<text  x="1032.09" y="751.5" >k..</text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 1.82%)</title><rect x="471.3" y="325" width="21.4" height="15.0" fill="rgb(226,41,45)" rx="2" ry="2" />
<text  x="474.27" y="335.5" >i..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (7 samples, 6.36%)</title><rect x="803.8" y="773" width="75.1" height="15.0" fill="rgb(253,85,16)" rx="2" ry="2" />
<text  x="806.82" y="783.5" >Envoy::H..</text>
</g>
<g >
<title>event_process_active_single_queue (37 samples, 33.64%)</title><rect x="771.6" y="997" width="396.9" height="15.0" fill="rgb(227,5,10)" rx="2" ry="2" />
<text  x="774.64" y="1007.5" >event_process_active_single_queue</text>
</g>
<g >
<title>accept4 (3 samples, 2.73%)</title><rect x="1029.1" y="917" width="32.2" height="15.0" fill="rgb(251,87,3)" rx="2" ry="2" />
<text  x="1032.09" y="927.5" >ac..</text>
</g>
<g >
<title>__lock_text_start (2 samples, 1.82%)</title><rect x="696.5" y="837" width="21.5" height="15.0" fill="rgb(250,207,50)" rx="2" ry="2" />
<text  x="699.55" y="847.5" >_..</text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (50 samples, 45.45%)</title><rect x="653.6" y="1029" width="536.4" height="15.0" fill="rgb(234,91,15)" rx="2" ry="2" />
<text  x="656.64" y="1039.5" >Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::_..</text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (4 samples, 3.64%)</title><rect x="460.5" y="917" width="43.0" height="15.0" fill="rgb(240,52,33)" rx="2" ry="2" />
<text  x="463.55" y="927.5" >Envo..</text>
</g>
<g >
<title>Envoy::Server::ActiveStreamListenerBase::onSocketAccepted(std::__1::unique_ptr&lt;Envoy::Server::ActiveTcpSocket, std::__1::default_delete&lt;Envoy::Server::ActiveTcpSocket&gt; &gt;) (6 samples, 5.45%)</title><rect x="546.4" y="917" width="64.3" height="15.0" fill="rgb(243,147,47)" rx="2" ry="2" />
<text  x="549.36" y="927.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpUpstream::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (2 samples, 1.82%)</title><rect x="288.9" y="597" width="21.5" height="15.0" fill="rgb(238,103,46)" rx="2" ry="2" />
<text  x="291.91" y="607.5" >E..</text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int) (1 samples, 0.91%)</title><rect x="1082.7" y="773" width="10.8" height="15.0" fill="rgb(237,33,50)" rx="2" ry="2" />
<text  x="1085.73" y="783.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (2 samples, 1.82%)</title><rect x="621.5" y="885" width="21.4" height="15.0" fill="rgb(246,34,32)" rx="2" ry="2" />
<text  x="624.45" y="895.5" >E..</text>
</g>
<g >
<title>Envoy::Stats::Counter&amp; Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::safeMakeStat&lt;Envoy::Stats::Counter&gt;(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; &gt; const&amp;, absl::flat_hash_map&lt;Envoy::Stats::StatName, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;&amp;, Envoy::Stats::StatsMatcher::FastResult, Envoy::Stats::StatNameStorageSet&amp;, std::__1::function&lt;Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; (Envoy::Stats::Allocator&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&amp;)&gt;, absl::flat_hash_map&lt;Envoy::Stats::StatName, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;*, absl::flat_hash_set&lt;Envoy::Stats::StatName, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt;*, Envoy::Stats::Counter&amp;) (1 samples, 0.91%)</title><rect x="814.5" y="597" width="10.8" height="15.0" fill="rgb(217,146,28)" rx="2" ry="2" />
<text  x="817.55" y="607.5" ></text>
</g>
<g >
<title>wrk:worker_1 (51 samples, 46.36%)</title><rect x="642.9" y="1077" width="547.1" height="15.0" fill="rgb(250,5,21)" rx="2" ry="2" />
<text  x="645.91" y="1087.5" >wrk:worker_1</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (22 samples, 20.00%)</title><rect x="793.1" y="933" width="236.0" height="15.0" fill="rgb(224,218,10)" rx="2" ry="2" />
<text  x="796.09" y="943.5" >Envoy::Network::ConnectionImpl:..</text>
</g>
<g >
<title>clock_gettime (1 samples, 0.91%)</title><rect x="63.6" y="1061" width="10.8" height="15.0" fill="rgb(244,23,32)" rx="2" ry="2" />
<text  x="66.64" y="1071.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2 samples, 1.82%)</title><rect x="621.5" y="565" width="21.4" height="15.0" fill="rgb(233,43,11)" rx="2" ry="2" />
<text  x="624.45" y="575.5" >_..</text>
</g>
<g >
<title>tcp_sendmsg_locked (4 samples, 3.64%)</title><rect x="460.5" y="661" width="43.0" height="15.0" fill="rgb(209,220,33)" rx="2" ry="2" />
<text  x="463.55" y="671.5" >tcp_..</text>
</g>
<g >
<title>tcp_write_xmit (4 samples, 3.64%)</title><rect x="460.5" y="613" width="43.0" height="15.0" fill="rgb(237,127,11)" rx="2" ry="2" />
<text  x="463.55" y="623.5" >tcp_..</text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::drain(unsigned long) (1 samples, 0.91%)</title><rect x="1104.2" y="885" width="10.7" height="15.0" fill="rgb(232,107,53)" rx="2" ry="2" />
<text  x="1107.18" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::ActiveStream(Envoy::Http::ConnectionManagerImpl&amp;, unsigned int, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;) (1 samples, 0.91%)</title><rect x="911.1" y="725" width="10.7" height="15.0" fill="rgb(249,202,40)" rx="2" ry="2" />
<text  x="914.09" y="735.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeHeaders(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Http::RequestHeaderMap&amp;, bool) (4 samples, 3.64%)</title><rect x="943.3" y="741" width="42.9" height="15.0" fill="rgb(207,176,10)" rx="2" ry="2" />
<text  x="946.27" y="751.5" >Envo..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.91%)</title><rect x="718.0" y="821" width="10.7" height="15.0" fill="rgb(238,95,15)" rx="2" ry="2" />
<text  x="721.00" y="831.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.91%)</title><rect x="74.4" y="869" width="10.7" height="15.0" fill="rgb(226,29,21)" rx="2" ry="2" />
<text  x="77.36" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (1 samples, 0.91%)</title><rect x="256.7" y="677" width="10.8" height="15.0" fill="rgb(228,206,17)" rx="2" ry="2" />
<text  x="259.73" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (1 samples, 0.91%)</title><rect x="1082.7" y="629" width="10.8" height="15.0" fill="rgb(230,56,38)" rx="2" ry="2" />
<text  x="1085.73" y="639.5" ></text>
</g>
<g >
<title>event_add (2 samples, 1.82%)</title><rect x="546.4" y="757" width="21.4" height="15.0" fill="rgb(247,117,26)" rx="2" ry="2" />
<text  x="549.36" y="767.5" >e..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderValue(char const*, unsigned long) (1 samples, 0.91%)</title><rect x="428.4" y="789" width="10.7" height="15.0" fill="rgb(209,71,37)" rx="2" ry="2" />
<text  x="431.36" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::cleanInternalHeaders(Envoy::Http::RequestHeaderMap&amp;, bool, std::__1::list&lt;Envoy::Http::LowerCaseString, std::__1::allocator&lt;Envoy::Http::LowerCaseString&gt; &gt; const&amp;) (1 samples, 0.91%)</title><rect x="246.0" y="725" width="10.7" height="15.0" fill="rgb(222,181,38)" rx="2" ry="2" />
<text  x="249.00" y="735.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.91%)</title><rect x="471.3" y="133" width="10.7" height="15.0" fill="rgb(246,113,2)" rx="2" ry="2" />
<text  x="474.27" y="143.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::accept(sockaddr*, unsigned int*) (4 samples, 3.64%)</title><rect x="503.5" y="933" width="42.9" height="15.0" fill="rgb(244,97,20)" rx="2" ry="2" />
<text  x="506.45" y="943.5" >Envo..</text>
</g>
<g >
<title>sock_sendmsg (2 samples, 1.82%)</title><rect x="621.5" y="709" width="21.4" height="15.0" fill="rgb(223,117,32)" rx="2" ry="2" />
<text  x="624.45" y="719.5" >s..</text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::runPostCallbacks() (1 samples, 0.91%)</title><rect x="106.5" y="981" width="10.8" height="15.0" fill="rgb(211,190,52)" rx="2" ry="2" />
<text  x="109.55" y="991.5" ></text>
</g>
<g >
<title>Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;) (1 samples, 0.91%)</title><rect x="170.9" y="853" width="10.7" height="15.0" fill="rgb(210,22,37)" rx="2" ry="2" />
<text  x="173.91" y="863.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.91%)</title><rect x="31.5" y="949" width="10.7" height="15.0" fill="rgb(244,93,37)" rx="2" ry="2" />
<text  x="34.45" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (1 samples, 0.91%)</title><rect x="256.7" y="709" width="10.8" height="15.0" fill="rgb(242,163,31)" rx="2" ry="2" />
<text  x="259.73" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeBasicResponseStat(Envoy::Stats::Scope&amp;, Envoy::Stats::StatName, Envoy::Http::Code, bool) const (3 samples, 2.73%)</title><rect x="803.8" y="645" width="32.2" height="15.0" fill="rgb(249,133,24)" rx="2" ry="2" />
<text  x="806.82" y="655.5" >En..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onUrl(char const*, unsigned long) (2 samples, 1.82%)</title><rect x="996.9" y="789" width="21.5" height="15.0" fill="rgb(238,215,49)" rx="2" ry="2" />
<text  x="999.91" y="799.5" >n..</text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.91%)</title><rect x="514.2" y="821" width="10.7" height="15.0" fill="rgb(254,106,54)" rx="2" ry="2" />
<text  x="517.18" y="831.5" ></text>
</g>
<g >
<title>operator new[](unsigned long) (1 samples, 0.91%)</title><rect x="449.8" y="853" width="10.7" height="15.0" fill="rgb(245,87,23)" rx="2" ry="2" />
<text  x="452.82" y="863.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.91%)</title><rect x="74.4" y="789" width="10.7" height="15.0" fill="rgb(223,211,34)" rx="2" ry="2" />
<text  x="77.36" y="799.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::onPoolReady(Envoy::Http::RequestEncoder&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (1 samples, 0.91%)</title><rect x="954.0" y="629" width="10.7" height="15.0" fill="rgb(239,131,10)" rx="2" ry="2" />
<text  x="957.00" y="639.5" ></text>
</g>
<g >
<title>tcp_push (2 samples, 1.82%)</title><rect x="1125.6" y="645" width="21.5" height="15.0" fill="rgb(253,172,42)" rx="2" ry="2" />
<text  x="1128.64" y="655.5" >t..</text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (1 samples, 0.91%)</title><rect x="256.7" y="693" width="10.8" height="15.0" fill="rgb(235,114,25)" rx="2" ry="2" />
<text  x="259.73" y="703.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.91%)</title><rect x="632.2" y="517" width="10.7" height="15.0" fill="rgb(242,144,21)" rx="2" ry="2" />
<text  x="635.18" y="527.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.91%)</title><rect x="471.3" y="37" width="10.7" height="15.0" fill="rgb(246,214,12)" rx="2" ry="2" />
<text  x="474.27" y="47.5" ></text>
</g>
<g >
<title>do_writev (5 samples, 4.55%)</title><rect x="1114.9" y="789" width="53.6" height="15.0" fill="rgb(221,223,50)" rx="2" ry="2" />
<text  x="1117.91" y="799.5" >do_wr..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.91%)</title><rect x="471.3" y="293" width="10.7" height="15.0" fill="rgb(209,126,50)" rx="2" ry="2" />
<text  x="474.27" y="303.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (7 samples, 6.36%)</title><rect x="803.8" y="725" width="75.1" height="15.0" fill="rgb(242,210,44)" rx="2" ry="2" />
<text  x="806.82" y="735.5" >Envoy::H..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (12 samples, 10.91%)</title><rect x="889.6" y="853" width="128.8" height="15.0" fill="rgb(237,17,41)" rx="2" ry="2" />
<text  x="892.64" y="863.5" >Envoy::Http::Htt..</text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::newStreamImpl(Envoy::ConnectionPool::AttachContext&amp;, bool) (3 samples, 2.73%)</title><rect x="288.9" y="677" width="32.2" height="15.0" fill="rgb(242,121,37)" rx="2" ry="2" />
<text  x="291.91" y="687.5" >En..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7&gt;, void ()&gt;::operator()() (1 samples, 0.91%)</title><rect x="20.7" y="997" width="10.8" height="15.0" fill="rgb(223,218,48)" rx="2" ry="2" />
<text  x="23.73" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (7 samples, 6.36%)</title><rect x="803.8" y="789" width="75.1" height="15.0" fill="rgb(225,219,47)" rx="2" ry="2" />
<text  x="806.82" y="799.5" >Envoy::H..</text>
</g>
<g >
<title>ep_insert (1 samples, 0.91%)</title><rect x="1082.7" y="613" width="10.8" height="15.0" fill="rgb(211,51,21)" rx="2" ry="2" />
<text  x="1085.73" y="623.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.91%)</title><rect x="632.2" y="405" width="10.7" height="15.0" fill="rgb(225,40,41)" rx="2" ry="2" />
<text  x="635.18" y="415.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (4 samples, 3.64%)</title><rect x="128.0" y="725" width="42.9" height="15.0" fill="rgb(234,187,32)" rx="2" ry="2" />
<text  x="131.00" y="735.5" >Envo..</text>
</g>
<g >
<title>tcp_sendmsg_locked (2 samples, 1.82%)</title><rect x="621.5" y="661" width="21.4" height="15.0" fill="rgb(210,84,18)" rx="2" ry="2" />
<text  x="624.45" y="671.5" >t..</text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 1.82%)</title><rect x="85.1" y="885" width="21.4" height="15.0" fill="rgb(253,105,26)" rx="2" ry="2" />
<text  x="88.09" y="895.5" >s..</text>
</g>
<g >
<title>nf_ip_checksum (1 samples, 0.91%)</title><rect x="492.7" y="245" width="10.8" height="15.0" fill="rgb(221,12,30)" rx="2" ry="2" />
<text  x="495.73" y="255.5" ></text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (2 samples, 1.82%)</title><rect x="10.0" y="1045" width="21.5" height="15.0" fill="rgb(227,5,48)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >E..</text>
</g>
<g >
<title>event_queue_remove_timeout (2 samples, 1.82%)</title><rect x="750.2" y="981" width="21.4" height="15.0" fill="rgb(205,166,15)" rx="2" ry="2" />
<text  x="753.18" y="991.5" >e..</text>
</g>
<g >
<title>evthread_posix_lock (1 samples, 0.91%)</title><rect x="1168.5" y="997" width="10.8" height="15.0" fill="rgb(231,4,46)" rx="2" ry="2" />
<text  x="1171.55" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (5 samples, 4.55%)</title><rect x="117.3" y="789" width="53.6" height="15.0" fill="rgb(210,23,2)" rx="2" ry="2" />
<text  x="120.27" y="799.5" >Envoy..</text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.91%)</title><rect x="911.1" y="661" width="10.7" height="15.0" fill="rgb(239,187,14)" rx="2" ry="2" />
<text  x="914.09" y="671.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::HttpConnPool(Envoy::Upstream::ThreadLocalCluster&amp;, bool, Envoy::Router::RouteEntry const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) (1 samples, 0.91%)</title><rect x="321.1" y="677" width="10.7" height="15.0" fill="rgb(216,213,9)" rx="2" ry="2" />
<text  x="324.09" y="687.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.91%)</title><rect x="471.3" y="53" width="10.7" height="15.0" fill="rgb(225,42,45)" rx="2" ry="2" />
<text  x="474.27" y="63.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::reserveForRead() (1 samples, 0.91%)</title><rect x="449.8" y="885" width="10.7" height="15.0" fill="rgb(215,136,42)" rx="2" ry="2" />
<text  x="452.82" y="895.5" ></text>
</g>
<g >
<title>nf_ip_checksum (1 samples, 0.91%)</title><rect x="492.7" y="261" width="10.8" height="15.0" fill="rgb(241,38,43)" rx="2" ry="2" />
<text  x="495.73" y="271.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.91%)</title><rect x="482.0" y="293" width="10.7" height="15.0" fill="rgb(212,116,29)" rx="2" ry="2" />
<text  x="485.00" y="303.5" ></text>
</g>
<g >
<title>event_base_loop (49 samples, 44.55%)</title><rect x="653.6" y="1013" width="525.7" height="15.0" fill="rgb(229,180,27)" rx="2" ry="2" />
<text  x="656.64" y="1023.5" >event_base_loop</text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (8 samples, 7.27%)</title><rect x="793.1" y="869" width="85.8" height="15.0" fill="rgb(214,14,53)" rx="2" ry="2" />
<text  x="796.09" y="879.5" >Envoy::Htt..</text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.91%)</title><rect x="632.2" y="421" width="10.7" height="15.0" fill="rgb(218,81,8)" rx="2" ry="2" />
<text  x="635.18" y="431.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::createServerConnection(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;) (3 samples, 2.73%)</title><rect x="546.4" y="853" width="32.1" height="15.0" fill="rgb(227,156,49)" rx="2" ry="2" />
<text  x="549.36" y="863.5" >En..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (12 samples, 10.91%)</title><rect x="889.6" y="837" width="128.8" height="15.0" fill="rgb(209,133,10)" rx="2" ry="2" />
<text  x="892.64" y="847.5" >Envoy::Http::Htt..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (6 samples, 5.45%)</title><rect x="932.5" y="789" width="64.4" height="15.0" fill="rgb(212,4,23)" rx="2" ry="2" />
<text  x="935.55" y="799.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::drainImpl(unsigned long) (1 samples, 0.91%)</title><rect x="1104.2" y="869" width="10.7" height="15.0" fill="rgb(246,133,21)" rx="2" ry="2" />
<text  x="1107.18" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#2}::__invoke(http_parser*) (1 samples, 0.91%)</title><rect x="192.4" y="805" width="10.7" height="15.0" fill="rgb(205,56,31)" rx="2" ry="2" />
<text  x="195.36" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::maybeNormalizePath(Envoy::Http::RequestHeaderMap&amp;, Envoy::Http::ConnectionManagerConfig const&amp;) (1 samples, 0.91%)</title><rect x="224.5" y="741" width="10.8" height="15.0" fill="rgb(220,3,40)" rx="2" ry="2" />
<text  x="227.55" y="751.5" ></text>
</g>
<g >
<title>ep_insert (1 samples, 0.91%)</title><rect x="557.1" y="613" width="10.7" height="15.0" fill="rgb(206,54,19)" rx="2" ry="2" />
<text  x="560.09" y="623.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (6 samples, 5.45%)</title><rect x="1104.2" y="901" width="64.3" height="15.0" fill="rgb(228,103,1)" rx="2" ry="2" />
<text  x="1107.18" y="911.5" >Envoy::..</text>
</g>
<g >
<title>tcp_grow_window.isra.0 (1 samples, 0.91%)</title><rect x="1136.4" y="165" width="10.7" height="15.0" fill="rgb(210,72,15)" rx="2" ry="2" />
<text  x="1139.36" y="175.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::createCodec(Envoy::Buffer::Instance&amp;) (1 samples, 0.91%)</title><rect x="170.9" y="885" width="10.7" height="15.0" fill="rgb(220,55,45)" rx="2" ry="2" />
<text  x="173.91" y="895.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::runOnAllThreads(std::__1::function&lt;void ()&gt;, std::__1::function&lt;void ()&gt;) (1 samples, 0.91%)</title><rect x="52.9" y="885" width="10.7" height="15.0" fill="rgb(252,41,29)" rx="2" ry="2" />
<text  x="55.91" y="895.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 1.82%)</title><rect x="42.2" y="981" width="21.4" height="15.0" fill="rgb(234,40,33)" rx="2" ry="2" />
<text  x="45.18" y="991.5" >e..</text>
</g>
<g >
<title>Envoy::Server::FilterChainManagerImpl::findFilterChainForTransportProtocol(absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt; &gt; &gt; &gt; const&amp;, Envoy::Network::ConnectionSocket const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="805" width="10.7" height="15.0" fill="rgb(222,168,29)" rx="2" ry="2" />
<text  x="1096.45" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool) (1 samples, 0.91%)</title><rect x="857.5" y="613" width="10.7" height="15.0" fill="rgb(245,174,42)" rx="2" ry="2" />
<text  x="860.45" y="623.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.91%)</title><rect x="52.9" y="741" width="10.7" height="15.0" fill="rgb(219,108,47)" rx="2" ry="2" />
<text  x="55.91" y="751.5" ></text>
</g>
<g >
<title>ip_finish_output2 (4 samples, 3.64%)</title><rect x="460.5" y="485" width="43.0" height="15.0" fill="rgb(215,182,26)" rx="2" ry="2" />
<text  x="463.55" y="495.5" >ip_f..</text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.91%)</title><rect x="482.0" y="229" width="10.7" height="15.0" fill="rgb(205,171,8)" rx="2" ry="2" />
<text  x="485.00" y="239.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpConnection::~ActiveTcpConnection() (1 samples, 0.91%)</title><rect x="771.6" y="965" width="10.8" height="15.0" fill="rgb(210,90,29)" rx="2" ry="2" />
<text  x="774.64" y="975.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.91%)</title><rect x="1114.9" y="629" width="10.7" height="15.0" fill="rgb(226,19,26)" rx="2" ry="2" />
<text  x="1117.91" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.73%)</title><rect x="514.2" y="869" width="32.2" height="15.0" fill="rgb(254,186,22)" rx="2" ry="2" />
<text  x="517.18" y="879.5" >do..</text>
</g>
<g >
<title>__tcp_push_pending_frames (4 samples, 3.64%)</title><rect x="460.5" y="629" width="43.0" height="15.0" fill="rgb(208,163,47)" rx="2" ry="2" />
<text  x="463.55" y="639.5" >__tc..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeadersComplete() (1 samples, 0.91%)</title><rect x="192.4" y="789" width="10.7" height="15.0" fill="rgb(247,172,16)" rx="2" ry="2" />
<text  x="195.36" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_writev (5 samples, 4.55%)</title><rect x="1114.9" y="805" width="53.6" height="15.0" fill="rgb(213,124,34)" rx="2" ry="2" />
<text  x="1117.91" y="815.5" >__x64..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::initializeFileEvent(Envoy::Event::Dispatcher&amp;, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int) (3 samples, 2.73%)</title><rect x="546.4" y="805" width="32.1" height="15.0" fill="rgb(246,0,6)" rx="2" ry="2" />
<text  x="549.36" y="815.5" >En..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (6 samples, 5.45%)</title><rect x="1104.2" y="965" width="64.3" height="15.0" fill="rgb(251,19,22)" rx="2" ry="2" />
<text  x="1107.18" y="975.5" >std::__..</text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::writeCategory(Envoy::Http::CodeStats::ResponseStatInfo const&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, Envoy::Stats::StatName) const (1 samples, 0.91%)</title><rect x="836.0" y="645" width="10.7" height="15.0" fill="rgb(218,54,18)" rx="2" ry="2" />
<text  x="839.00" y="655.5" ></text>
</g>
<g >
<title>- (1 samples, 0.91%)</title><rect x="1082.7" y="677" width="10.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1085.73" y="687.5" ></text>
</g>
<g >
<title>event_add (1 samples, 0.91%)</title><rect x="1082.7" y="757" width="10.8" height="15.0" fill="rgb(248,78,47)" rx="2" ry="2" />
<text  x="1085.73" y="767.5" ></text>
</g>
<g >
<title>process_backlog (4 samples, 3.64%)</title><rect x="460.5" y="389" width="43.0" height="15.0" fill="rgb(209,49,19)" rx="2" ry="2" />
<text  x="463.55" y="399.5" >proc..</text>
</g>
<g >
<title>process_backlog (2 samples, 1.82%)</title><rect x="1125.6" y="389" width="21.5" height="15.0" fill="rgb(215,186,28)" rx="2" ry="2" />
<text  x="1128.64" y="399.5" >p..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.91%)</title><rect x="74.4" y="853" width="10.7" height="15.0" fill="rgb(207,218,54)" rx="2" ry="2" />
<text  x="77.36" y="863.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.91%)</title><rect x="1050.5" y="677" width="10.8" height="15.0" fill="rgb(217,48,21)" rx="2" ry="2" />
<text  x="1053.55" y="687.5" ></text>
</g>
<g >
<title>writev (4 samples, 3.64%)</title><rect x="460.5" y="869" width="43.0" height="15.0" fill="rgb(242,222,14)" rx="2" ry="2" />
<text  x="463.55" y="879.5" >writev</text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::run() (2 samples, 1.82%)</title><rect x="42.2" y="997" width="21.4" height="15.0" fill="rgb(214,175,3)" rx="2" ry="2" />
<text  x="45.18" y="1007.5" >E..</text>
</g>
<g >
<title>__libc_send (1 samples, 0.91%)</title><rect x="31.5" y="1061" width="10.7" height="15.0" fill="rgb(205,175,48)" rx="2" ry="2" />
<text  x="34.45" y="1071.5" ></text>
</g>
<g >
<title>http_parser_execute (12 samples, 10.91%)</title><rect x="889.6" y="821" width="128.8" height="15.0" fill="rgb(253,62,33)" rx="2" ry="2" />
<text  x="892.64" y="831.5" >http_parser_exec..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.91%)</title><rect x="52.9" y="789" width="10.7" height="15.0" fill="rgb(224,147,4)" rx="2" ry="2" />
<text  x="55.91" y="799.5" ></text>
</g>
<g >
<title>sock_write_iter (4 samples, 3.64%)</title><rect x="1114.9" y="725" width="42.9" height="15.0" fill="rgb(232,7,53)" rx="2" ry="2" />
<text  x="1117.91" y="735.5" >sock..</text>
</g>
<g >
<title>ip_output (1 samples, 0.91%)</title><rect x="632.2" y="533" width="10.7" height="15.0" fill="rgb(239,86,20)" rx="2" ry="2" />
<text  x="635.18" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 1.82%)</title><rect x="85.1" y="821" width="21.4" height="15.0" fill="rgb(234,68,8)" rx="2" ry="2" />
<text  x="88.09" y="831.5" >f..</text>
</g>
<g >
<title>vfs_writev (4 samples, 3.64%)</title><rect x="460.5" y="773" width="43.0" height="15.0" fill="rgb(250,174,38)" rx="2" ry="2" />
<text  x="463.55" y="783.5" >vfs_..</text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::onPoolReady(std::__1::unique_ptr&lt;Envoy::Router::GenericUpstream, std::__1::default_delete&lt;Envoy::Router::GenericUpstream&gt; &gt;&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, std::__1::shared_ptr&lt;Envoy::Network::Address::Instance const&gt; const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (2 samples, 1.82%)</title><rect x="288.9" y="613" width="21.5" height="15.0" fill="rgb(254,36,15)" rx="2" ry="2" />
<text  x="291.91" y="623.5" >E..</text>
</g>
<g >
<title>Envoy::Stats::SymbolTable::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (1 samples, 0.91%)</title><rect x="836.0" y="629" width="10.7" height="15.0" fill="rgb(239,190,31)" rx="2" ry="2" />
<text  x="839.00" y="639.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 1.82%)</title><rect x="1125.6" y="421" width="21.5" height="15.0" fill="rgb(208,34,24)" rx="2" ry="2" />
<text  x="1128.64" y="431.5" >_..</text>
</g>
<g >
<title>absl::hash_internal::LowLevelHash(void const*, unsigned long, unsigned long, unsigned long const*) (1 samples, 0.91%)</title><rect x="364.0" y="677" width="10.7" height="15.0" fill="rgb(225,190,17)" rx="2" ry="2" />
<text  x="367.00" y="687.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.91%)</title><rect x="471.3" y="149" width="10.7" height="15.0" fill="rgb(251,166,40)" rx="2" ry="2" />
<text  x="474.27" y="159.5" ></text>
</g>
<g >
<title>__ip_finish_output (4 samples, 3.64%)</title><rect x="460.5" y="501" width="43.0" height="15.0" fill="rgb(245,205,2)" rx="2" ry="2" />
<text  x="463.55" y="511.5" >__ip..</text>
</g>
<g >
<title>Envoy::Stats::StatName::dataSize() const (1 samples, 0.91%)</title><rect x="814.5" y="581" width="10.8" height="15.0" fill="rgb(236,159,35)" rx="2" ry="2" />
<text  x="817.55" y="591.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 1.82%)</title><rect x="1125.6" y="261" width="21.5" height="15.0" fill="rgb(248,180,1)" rx="2" ry="2" />
<text  x="1128.64" y="271.5" >t..</text>
</g>
<g >
<title>iput (1 samples, 0.91%)</title><rect x="535.6" y="741" width="10.8" height="15.0" fill="rgb(220,21,5)" rx="2" ry="2" />
<text  x="538.64" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.73%)</title><rect x="1029.1" y="885" width="32.2" height="15.0" fill="rgb(205,139,5)" rx="2" ry="2" />
<text  x="1032.09" y="895.5" >en..</text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (24 samples, 21.82%)</title><rect x="181.6" y="885" width="257.5" height="15.0" fill="rgb(253,168,9)" rx="2" ry="2" />
<text  x="184.64" y="895.5" >Envoy::Http::Http1::ServerConnecti..</text>
</g>
<g >
<title>- (2 samples, 1.82%)</title><rect x="546.4" y="677" width="21.4" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="549.36" y="687.5" >-</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (2 samples, 1.82%)</title><rect x="846.7" y="645" width="21.5" height="15.0" fill="rgb(233,148,17)" rx="2" ry="2" />
<text  x="849.73" y="655.5" >E..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.91%)</title><rect x="1136.4" y="245" width="10.7" height="15.0" fill="rgb(220,167,4)" rx="2" ry="2" />
<text  x="1139.36" y="255.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.91%)</title><rect x="1061.3" y="805" width="10.7" height="15.0" fill="rgb(254,185,20)" rx="2" ry="2" />
<text  x="1064.27" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderField(char const*, unsigned long) (3 samples, 2.73%)</title><rect x="396.2" y="789" width="32.2" height="15.0" fill="rgb(235,194,32)" rx="2" ry="2" />
<text  x="399.18" y="799.5" >En..</text>
</g>
<g >
<title>Envoy::Server::ActiveStreamListenerBase::newConnection(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::StreamInfo::StreamInfo, std::__1::default_delete&lt;Envoy::StreamInfo::StreamInfo&gt; &gt;) (6 samples, 5.45%)</title><rect x="546.4" y="869" width="64.3" height="15.0" fill="rgb(232,155,6)" rx="2" ry="2" />
<text  x="549.36" y="879.5" >Envoy::..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.73%)</title><rect x="74.4" y="949" width="32.1" height="15.0" fill="rgb(219,102,43)" rx="2" ry="2" />
<text  x="77.36" y="959.5" >do..</text>
</g>
<g >
<title>Envoy::Router::Filter::chargeUpstreamCode(unsigned long, Envoy::Http::ResponseHeaderMap const&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, bool) (4 samples, 3.64%)</title><rect x="803.8" y="677" width="42.9" height="15.0" fill="rgb(249,185,17)" rx="2" ry="2" />
<text  x="806.82" y="687.5" >Envo..</text>
</g>
<g >
<title>Envoy::Router::FilterUtility::finalTimeout(Envoy::Router::RouteEntry const&amp;, Envoy::Http::RequestHeaderMap&amp;, bool, bool, bool, bool) (1 samples, 0.91%)</title><rect x="342.5" y="709" width="10.8" height="15.0" fill="rgb(216,207,50)" rx="2" ry="2" />
<text  x="345.55" y="719.5" ></text>
</g>
<g >
<title>inet_sendmsg (4 samples, 3.64%)</title><rect x="1114.9" y="693" width="42.9" height="15.0" fill="rgb(212,209,36)" rx="2" ry="2" />
<text  x="1117.91" y="703.5" >inet..</text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::runOnAllThreads(std::__1::function&lt;void (std::__1::shared_ptr&lt;Envoy::ThreadLocal::ThreadLocalObject&gt;)&gt; const&amp;, std::__1::function&lt;void ()&gt; const&amp;) (1 samples, 0.91%)</title><rect x="52.9" y="901" width="10.7" height="15.0" fill="rgb(230,186,37)" rx="2" ry="2" />
<text  x="55.91" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::shouldCloseConnection(Envoy::Http::Protocol, Envoy::Http::RequestOrResponseHeaderMap const&amp;) (1 samples, 0.91%)</title><rect x="986.2" y="741" width="10.7" height="15.0" fill="rgb(211,152,4)" rx="2" ry="2" />
<text  x="989.18" y="751.5" ></text>
</g>
<g >
<title>void absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Assign&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char*&gt; &gt;(absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char*&gt;, unsigned long) (1 samples, 0.91%)</title><rect x="342.5" y="661" width="10.8" height="15.0" fill="rgb(227,163,47)" rx="2" ry="2" />
<text  x="345.55" y="671.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.91%)</title><rect x="535.6" y="677" width="10.8" height="15.0" fill="rgb(208,201,40)" rx="2" ry="2" />
<text  x="538.64" y="687.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::accept(sockaddr*, unsigned int*) (3 samples, 2.73%)</title><rect x="1029.1" y="933" width="32.2" height="15.0" fill="rgb(232,26,53)" rx="2" ry="2" />
<text  x="1032.09" y="943.5" >En..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::RequestHeaderMap, std::__1::default_delete&lt;Envoy::Http::RequestHeaderMap&gt; &gt;&amp;&amp;, bool) (5 samples, 4.55%)</title><rect x="943.3" y="757" width="53.6" height="15.0" fill="rgb(250,67,31)" rx="2" ry="2" />
<text  x="946.27" y="767.5" >Envoy..</text>
</g>
<g >
<title>____fput (3 samples, 2.73%)</title><rect x="1029.1" y="821" width="32.2" height="15.0" fill="rgb(236,174,38)" rx="2" ry="2" />
<text  x="1032.09" y="831.5" >__..</text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.91%)</title><rect x="1082.7" y="501" width="10.8" height="15.0" fill="rgb(226,22,37)" rx="2" ry="2" />
<text  x="1085.73" y="511.5" ></text>
</g>
<g >
<title>Envoy::Http::HttpConnPoolImplBase::onPoolReady(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (3 samples, 2.73%)</title><rect x="288.9" y="645" width="32.2" height="15.0" fill="rgb(245,84,18)" rx="2" ry="2" />
<text  x="291.91" y="655.5" >En..</text>
</g>
<g >
<title>ip_output (2 samples, 1.82%)</title><rect x="1125.6" y="533" width="21.5" height="15.0" fill="rgb(218,199,11)" rx="2" ry="2" />
<text  x="1128.64" y="543.5" >i..</text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (4 samples, 3.64%)</title><rect x="128.0" y="709" width="42.9" height="15.0" fill="rgb(206,71,5)" rx="2" ry="2" />
<text  x="131.00" y="719.5" >Envo..</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (24 samples, 21.82%)</title><rect x="181.6" y="853" width="257.5" height="15.0" fill="rgb(206,57,7)" rx="2" ry="2" />
<text  x="184.64" y="863.5" >Envoy::Http::Http1::ConnectionImpl..</text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.91%)</title><rect x="632.2" y="501" width="10.7" height="15.0" fill="rgb(206,190,26)" rx="2" ry="2" />
<text  x="635.18" y="511.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::newStream(Envoy::Http::ResponseEncoder&amp;, bool) (1 samples, 0.91%)</title><rect x="181.6" y="741" width="10.8" height="15.0" fill="rgb(225,222,38)" rx="2" ry="2" />
<text  x="184.64" y="751.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2 samples, 1.82%)</title><rect x="621.5" y="677" width="21.4" height="15.0" fill="rgb(212,157,38)" rx="2" ry="2" />
<text  x="624.45" y="687.5" >t..</text>
</g>
<g >
<title>do_iter_write (2 samples, 1.82%)</title><rect x="621.5" y="757" width="21.4" height="15.0" fill="rgb(222,36,8)" rx="2" ry="2" />
<text  x="624.45" y="767.5" >d..</text>
</g>
<g >
<title>ip_queue_xmit (2 samples, 1.82%)</title><rect x="621.5" y="581" width="21.4" height="15.0" fill="rgb(221,226,51)" rx="2" ry="2" />
<text  x="624.45" y="591.5" >i..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPool(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*)::$_14::operator()() const::{lambda()#1}, std::__1::allocator&lt;{lambda()#1}&gt;, Envoy::ConnectionPool::Instance* ()&gt;::destroy_deallocate() (1 samples, 0.91%)</title><rect x="964.7" y="693" width="10.8" height="15.0" fill="rgb(210,47,43)" rx="2" ry="2" />
<text  x="967.73" y="703.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.91%)</title><rect x="535.6" y="821" width="10.8" height="15.0" fill="rgb(219,67,10)" rx="2" ry="2" />
<text  x="538.64" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (1 samples, 0.91%)</title><rect x="181.6" y="757" width="10.8" height="15.0" fill="rgb(207,200,18)" rx="2" ry="2" />
<text  x="184.64" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_writev (2 samples, 1.82%)</title><rect x="621.5" y="805" width="21.4" height="15.0" fill="rgb(232,92,30)" rx="2" ry="2" />
<text  x="624.45" y="815.5" >_..</text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 0.91%)</title><rect x="10.0" y="885" width="10.7" height="15.0" fill="rgb(248,209,37)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>event_base_loop (53 samples, 48.18%)</title><rect x="74.4" y="1013" width="568.5" height="15.0" fill="rgb(213,52,37)" rx="2" ry="2" />
<text  x="77.36" y="1023.5" >event_base_loop</text>
</g>
<g >
<title>inode_wait_for_writeback (1 samples, 0.91%)</title><rect x="1050.5" y="709" width="10.8" height="15.0" fill="rgb(236,92,45)" rx="2" ry="2" />
<text  x="1053.55" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.73%)</title><rect x="514.2" y="885" width="32.2" height="15.0" fill="rgb(228,151,8)" rx="2" ry="2" />
<text  x="517.18" y="895.5" >en..</text>
</g>
<g >
<title>- (1 samples, 0.91%)</title><rect x="52.9" y="821" width="10.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="55.91" y="831.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::onPoolReady(Envoy::Http::RequestEncoder&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (2 samples, 1.82%)</title><rect x="288.9" y="629" width="21.5" height="15.0" fill="rgb(220,119,3)" rx="2" ry="2" />
<text  x="291.91" y="639.5" >E..</text>
</g>
<g >
<title>tcp_poll (1 samples, 0.91%)</title><rect x="1082.7" y="565" width="10.8" height="15.0" fill="rgb(214,165,24)" rx="2" ry="2" />
<text  x="1085.73" y="575.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.91%)</title><rect x="632.2" y="437" width="10.7" height="15.0" fill="rgb(209,1,39)" rx="2" ry="2" />
<text  x="635.18" y="447.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4, std::__1::allocator&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4&gt;, void ()&gt;::operator()() (2 samples, 1.82%)</title><rect x="10.0" y="1029" width="21.5" height="15.0" fill="rgb(239,96,4)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.91%)</title><rect x="739.5" y="933" width="10.7" height="15.0" fill="rgb(251,9,42)" rx="2" ry="2" />
<text  x="742.45" y="943.5" ></text>
</g>
<g >
<title>udp_sendmsg (1 samples, 0.91%)</title><rect x="31.5" y="933" width="10.7" height="15.0" fill="rgb(254,112,28)" rx="2" ry="2" />
<text  x="34.45" y="943.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.91%)</title><rect x="1050.5" y="741" width="10.8" height="15.0" fill="rgb(213,64,6)" rx="2" ry="2" />
<text  x="1053.55" y="751.5" ></text>
</g>
<g >
<title>main (2 samples, 1.82%)</title><rect x="42.2" y="1045" width="21.4" height="15.0" fill="rgb(209,12,51)" rx="2" ry="2" />
<text  x="45.18" y="1055.5" >m..</text>
</g>
<g >
<title>epoll_nochangelist_add (2 samples, 1.82%)</title><rect x="546.4" y="709" width="21.4" height="15.0" fill="rgb(243,29,49)" rx="2" ry="2" />
<text  x="549.36" y="719.5" >e..</text>
</g>
<g >
<title>- (3 samples, 2.73%)</title><rect x="1029.1" y="901" width="32.2" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1032.09" y="911.5" >-</text>
</g>
<g >
<title>schedule (2 samples, 1.82%)</title><rect x="85.1" y="853" width="21.4" height="15.0" fill="rgb(237,49,21)" rx="2" ry="2" />
<text  x="88.09" y="863.5" >s..</text>
</g>
<g >
<title>inet_sendmsg (4 samples, 3.64%)</title><rect x="460.5" y="693" width="43.0" height="15.0" fill="rgb(240,123,53)" rx="2" ry="2" />
<text  x="463.55" y="703.5" >inet..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (8 samples, 7.27%)</title><rect x="793.1" y="821" width="85.8" height="15.0" fill="rgb(234,175,25)" rx="2" ry="2" />
<text  x="796.09" y="831.5" >Envoy::Htt..</text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamComplete(Envoy::Router::UpstreamRequest&amp;) (2 samples, 1.82%)</title><rect x="128.0" y="677" width="21.5" height="15.0" fill="rgb(216,126,9)" rx="2" ry="2" />
<text  x="131.00" y="687.5" >E..</text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (1 samples, 0.91%)</title><rect x="1104.2" y="853" width="10.7" height="15.0" fill="rgb(226,158,15)" rx="2" ry="2" />
<text  x="1107.18" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::doEndStream(Envoy::Http::ConnectionManagerImpl::ActiveStream&amp;) (1 samples, 0.91%)</title><rect x="868.2" y="645" width="10.7" height="15.0" fill="rgb(229,11,50)" rx="2" ry="2" />
<text  x="871.18" y="655.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::reserveWithMaxLength(unsigned long) (1 samples, 0.91%)</title><rect x="449.8" y="869" width="10.7" height="15.0" fill="rgb(214,167,46)" rx="2" ry="2" />
<text  x="452.82" y="879.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (1 samples, 0.91%)</title><rect x="1018.4" y="917" width="10.7" height="15.0" fill="rgb(233,179,30)" rx="2" ry="2" />
<text  x="1021.36" y="927.5" ></text>
</g>
<g >
<title>start_thread (53 samples, 48.18%)</title><rect x="74.4" y="1061" width="568.5" height="15.0" fill="rgb(235,34,12)" rx="2" ry="2" />
<text  x="77.36" y="1071.5" >start_thread</text>
</g>
<g >
<title>accept4 (3 samples, 2.73%)</title><rect x="514.2" y="917" width="32.2" height="15.0" fill="rgb(246,90,41)" rx="2" ry="2" />
<text  x="517.18" y="927.5" >ac..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 3.64%)</title><rect x="460.5" y="837" width="43.0" height="15.0" fill="rgb(242,187,9)" rx="2" ry="2" />
<text  x="463.55" y="847.5" >entr..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (24 samples, 21.82%)</title><rect x="181.6" y="837" width="257.5" height="15.0" fill="rgb(227,122,23)" rx="2" ry="2" />
<text  x="184.64" y="847.5" >Envoy::Http::Http1::LegacyHttpPars..</text>
</g>
<g >
<title>__lock_text_start (2 samples, 1.82%)</title><rect x="696.5" y="821" width="21.5" height="15.0" fill="rgb(215,30,49)" rx="2" ry="2" />
<text  x="699.55" y="831.5" >_..</text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeHeaders(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Http::ResponseHeaderMap&amp;, bool) (2 samples, 1.82%)</title><rect x="149.5" y="661" width="21.4" height="15.0" fill="rgb(230,173,24)" rx="2" ry="2" />
<text  x="152.45" y="671.5" >E..</text>
</g>
<g >
<title>Envoy::Http::HeaderString::setInteger(unsigned long) (1 samples, 0.91%)</title><rect x="342.5" y="677" width="10.8" height="15.0" fill="rgb(240,217,0)" rx="2" ry="2" />
<text  x="345.55" y="687.5" ></text>
</g>
<g >
<title>- (5 samples, 4.55%)</title><rect x="1114.9" y="853" width="53.6" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1117.91" y="863.5" >-</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (5 samples, 4.55%)</title><rect x="117.3" y="821" width="53.6" height="15.0" fill="rgb(237,39,19)" rx="2" ry="2" />
<text  x="120.27" y="831.5" >Envoy..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0, std::__1::allocator&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0&gt;, void ()&gt;::operator()() (2 samples, 1.82%)</title><rect x="621.5" y="981" width="21.4" height="15.0" fill="rgb(253,19,27)" rx="2" ry="2" />
<text  x="624.45" y="991.5" >s..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (4 samples, 3.64%)</title><rect x="460.5" y="901" width="43.0" height="15.0" fill="rgb(207,56,54)" rx="2" ry="2" />
<text  x="463.55" y="911.5" >Envo..</text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (6 samples, 5.45%)</title><rect x="1104.2" y="917" width="64.3" height="15.0" fill="rgb(228,211,9)" rx="2" ry="2" />
<text  x="1107.18" y="927.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (1 samples, 0.91%)</title><rect x="1018.4" y="901" width="10.7" height="15.0" fill="rgb(251,63,40)" rx="2" ry="2" />
<text  x="1021.36" y="911.5" ></text>
</g>
<g >
<title>http_parser_execute (8 samples, 7.27%)</title><rect x="793.1" y="805" width="85.8" height="15.0" fill="rgb(213,115,5)" rx="2" ry="2" />
<text  x="796.09" y="815.5" >http_parse..</text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.91%)</title><rect x="1082.7" y="741" width="10.8" height="15.0" fill="rgb(236,84,47)" rx="2" ry="2" />
<text  x="1085.73" y="751.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPool(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) (1 samples, 0.91%)</title><rect x="321.1" y="661" width="10.7" height="15.0" fill="rgb(206,113,50)" rx="2" ry="2" />
<text  x="324.09" y="671.5" ></text>
</g>
<g >
<title>__d_alloc (1 samples, 0.91%)</title><rect x="524.9" y="773" width="10.7" height="15.0" fill="rgb(205,29,25)" rx="2" ry="2" />
<text  x="527.91" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::HttpConnPoolImplBase::onPoolReady(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (1 samples, 0.91%)</title><rect x="954.0" y="645" width="10.7" height="15.0" fill="rgb(238,5,8)" rx="2" ry="2" />
<text  x="957.00" y="655.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;) (1 samples, 0.91%)</title><rect x="52.9" y="933" width="10.7" height="15.0" fill="rgb(238,73,18)" rx="2" ry="2" />
<text  x="55.91" y="943.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpListener::onAcceptWorker(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, bool, bool) (6 samples, 5.45%)</title><rect x="546.4" y="933" width="64.3" height="15.0" fill="rgb(239,50,48)" rx="2" ry="2" />
<text  x="549.36" y="943.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Server::FilterChainManagerImpl::findFilterChainForServerName(absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; const&amp;, Envoy::Network::ConnectionSocket const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="821" width="10.7" height="15.0" fill="rgb(241,162,8)" rx="2" ry="2" />
<text  x="1096.45" y="831.5" ></text>
</g>
<g >
<title>event_active (1 samples, 0.91%)</title><rect x="52.9" y="869" width="10.7" height="15.0" fill="rgb(240,128,22)" rx="2" ry="2" />
<text  x="55.91" y="879.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ActiveStreamDecoderFilter::encodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool, absl::string_view) (2 samples, 1.82%)</title><rect x="149.5" y="677" width="21.4" height="15.0" fill="rgb(213,224,49)" rx="2" ry="2" />
<text  x="152.45" y="687.5" >n..</text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.91%)</title><rect x="535.6" y="773" width="10.8" height="15.0" fill="rgb(221,171,54)" rx="2" ry="2" />
<text  x="538.64" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeHeaders(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Http::ResponseHeaderMap&amp;, bool) (3 samples, 2.73%)</title><rect x="846.7" y="661" width="32.2" height="15.0" fill="rgb(211,193,53)" rx="2" ry="2" />
<text  x="849.73" y="671.5" >En..</text>
</g>
<g >
<title>tcp_sendmsg_locked (4 samples, 3.64%)</title><rect x="1114.9" y="661" width="42.9" height="15.0" fill="rgb(235,32,48)" rx="2" ry="2" />
<text  x="1117.91" y="671.5" >tcp_..</text>
</g>
<g >
<title>Envoy::Upstream::ZoneAwareLoadBalancerBase::chooseHost(Envoy::Upstream::LoadBalancerContext*) (1 samples, 0.91%)</title><rect x="321.1" y="645" width="10.7" height="15.0" fill="rgb(249,139,0)" rx="2" ry="2" />
<text  x="324.09" y="655.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.91%)</title><rect x="52.9" y="757" width="10.7" height="15.0" fill="rgb(205,203,6)" rx="2" ry="2" />
<text  x="55.91" y="767.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0, std::__1::allocator&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0&gt;, void (Envoy::Http::ResponseHeaderMap&amp;)&gt;::__clone(std::__1::__function::__base&lt;void (Envoy::Http::ResponseHeaderMap&amp;)&gt;*) const (1 samples, 0.91%)</title><rect x="374.7" y="725" width="10.8" height="15.0" fill="rgb(220,103,32)" rx="2" ry="2" />
<text  x="377.73" y="735.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::newStream(Envoy::Http::ResponseDecoder&amp;) (1 samples, 0.91%)</title><rect x="310.4" y="613" width="10.7" height="15.0" fill="rgb(225,181,0)" rx="2" ry="2" />
<text  x="313.36" y="623.5" ></text>
</g>
<g >
<title>- (1 samples, 0.91%)</title><rect x="911.1" y="693" width="10.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="914.09" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (5 samples, 4.55%)</title><rect x="117.3" y="741" width="53.6" height="15.0" fill="rgb(213,145,7)" rx="2" ry="2" />
<text  x="120.27" y="751.5" >Envoy..</text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.91%)</title><rect x="1157.8" y="741" width="10.7" height="15.0" fill="rgb(237,46,35)" rx="2" ry="2" />
<text  x="1160.82" y="751.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (4 samples, 3.64%)</title><rect x="943.3" y="725" width="42.9" height="15.0" fill="rgb(254,114,4)" rx="2" ry="2" />
<text  x="946.27" y="735.5" >Envo..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::HttpConnPoolImplBase::newStream(Envoy::Http::ResponseDecoder&amp;, Envoy::Http::ConnectionPool::Callbacks&amp;, Envoy::Http::ConnectionPool::Instance::StreamOptions const&amp;) (1 samples, 0.91%)</title><rect x="954.0" y="693" width="10.7" height="15.0" fill="rgb(236,175,26)" rx="2" ry="2" />
<text  x="957.00" y="703.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 1.82%)</title><rect x="85.1" y="837" width="21.4" height="15.0" fill="rgb(209,126,47)" rx="2" ry="2" />
<text  x="88.09" y="847.5" >_..</text>
</g>
<g >
<title>char* absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Insert&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(char const*, absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (1 samples, 0.91%)</title><rect x="428.4" y="757" width="10.7" height="15.0" fill="rgb(222,146,54)" rx="2" ry="2" />
<text  x="431.36" y="767.5" ></text>
</g>
<g >
<title>Envoy::Server::FilterChainManagerImpl::findFilterChainForDirectSourceIP(Envoy::Network::LcTrie::LcTrie&lt;std::__1::shared_ptr&lt;std::__1::array&lt;std::__1::pair&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;absl::flat_hash_map&lt;unsigned short, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt;, absl::hash_internal::Hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned short const, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt; &gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;absl::flat_hash_map&lt;unsigned short, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt;, absl::hash_internal::Hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned short const, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::__1::unique_ptr&lt;Envoy::Network::LcTrie::LcTrie&lt;std::__1::shared_ptr&lt;absl::flat_hash_map&lt;unsigned short, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt;, absl::hash_internal::Hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned short const, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt; &gt; &gt; &gt; &gt; &gt;, std::__1::default_delete&lt;Envoy::Network::LcTrie::LcTrie&lt;std::__1::shared_ptr&lt;absl::flat_hash_map&lt;unsigned short, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt;, absl::hash_internal::Hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned short const, std::__1::shared_ptr&lt;Envoy::Network::FilterChain&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, 3ul&gt; &gt; &gt; const&amp;, Envoy::Network::ConnectionSocket const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="789" width="10.7" height="15.0" fill="rgb(220,6,25)" rx="2" ry="2" />
<text  x="1096.45" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (1 samples, 0.91%)</title><rect x="192.4" y="725" width="10.7" height="15.0" fill="rgb(235,89,7)" rx="2" ry="2" />
<text  x="195.36" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 4.55%)</title><rect x="1114.9" y="837" width="53.6" height="15.0" fill="rgb(213,6,23)" rx="2" ry="2" />
<text  x="1117.91" y="847.5" >entry..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::RequestHeaderMap, std::__1::default_delete&lt;Envoy::Http::RequestHeaderMap&gt; &gt;&amp;&amp;, bool) (18 samples, 16.36%)</title><rect x="203.1" y="757" width="193.1" height="15.0" fill="rgb(218,189,39)" rx="2" ry="2" />
<text  x="206.09" y="767.5" >Envoy::Http::ConnectionMa..</text>
</g>
<g >
<title>Envoy::Http::CodecClient::CodecReadFilter::onData(Envoy::Buffer::Instance&amp;, bool) (8 samples, 7.27%)</title><rect x="793.1" y="901" width="85.8" height="15.0" fill="rgb(217,197,13)" rx="2" ry="2" />
<text  x="796.09" y="911.5" >Envoy::Htt..</text>
</g>
<g >
<title>nf_conntrack_tcp_packet (1 samples, 0.91%)</title><rect x="492.7" y="277" width="10.8" height="15.0" fill="rgb(210,30,18)" rx="2" ry="2" />
<text  x="495.73" y="287.5" ></text>
</g>
<g >
<title>epoll_nochangelist_add (1 samples, 0.91%)</title><rect x="1082.7" y="709" width="10.8" height="15.0" fill="rgb(216,31,36)" rx="2" ry="2" />
<text  x="1085.73" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.82%)</title><rect x="621.5" y="821" width="21.4" height="15.0" fill="rgb(224,74,54)" rx="2" ry="2" />
<text  x="624.45" y="831.5" >d..</text>
</g>
<g >
<title>schedule (2 samples, 1.82%)</title><rect x="718.0" y="853" width="21.5" height="15.0" fill="rgb(249,110,6)" rx="2" ry="2" />
<text  x="721.00" y="863.5" >s..</text>
</g>
<g >
<title>ip_local_out (4 samples, 3.64%)</title><rect x="460.5" y="549" width="43.0" height="15.0" fill="rgb(229,17,25)" rx="2" ry="2" />
<text  x="463.55" y="559.5" >ip_l..</text>
</g>
<g >
<title>event_del_nolock_ (1 samples, 0.91%)</title><rect x="42.2" y="965" width="10.7" height="15.0" fill="rgb(205,79,12)" rx="2" ry="2" />
<text  x="45.18" y="975.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.91%)</title><rect x="535.6" y="709" width="10.8" height="15.0" fill="rgb(218,119,22)" rx="2" ry="2" />
<text  x="538.64" y="719.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpSocket::newConnection() (6 samples, 5.45%)</title><rect x="546.4" y="885" width="64.3" height="15.0" fill="rgb(241,53,9)" rx="2" ry="2" />
<text  x="549.36" y="895.5" >Envoy::..</text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (53 samples, 48.18%)</title><rect x="74.4" y="1045" width="568.5" height="15.0" fill="rgb(245,69,38)" rx="2" ry="2" />
<text  x="77.36" y="1055.5" >Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, a..</text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 3.64%)</title><rect x="460.5" y="421" width="43.0" height="15.0" fill="rgb(232,174,28)" rx="2" ry="2" />
<text  x="463.55" y="431.5" >__so..</text>
</g>
<g >
<title>operator new[](unsigned long) (1 samples, 0.91%)</title><rect x="267.5" y="693" width="10.7" height="15.0" fill="rgb(217,127,46)" rx="2" ry="2" />
<text  x="270.45" y="703.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (1 samples, 0.91%)</title><rect x="642.9" y="1013" width="10.7" height="15.0" fill="rgb(226,185,11)" rx="2" ry="2" />
<text  x="645.91" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (1 samples, 0.91%)</title><rect x="192.4" y="773" width="10.7" height="15.0" fill="rgb(226,173,52)" rx="2" ry="2" />
<text  x="195.36" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (3 samples, 2.73%)</title><rect x="396.2" y="757" width="32.2" height="15.0" fill="rgb(220,113,52)" rx="2" ry="2" />
<text  x="399.18" y="767.5" >En..</text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.91%)</title><rect x="911.1" y="645" width="10.7" height="15.0" fill="rgb(242,125,54)" rx="2" ry="2" />
<text  x="914.09" y="655.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::autoCreateCodec(Envoy::Network::Connection&amp;, Envoy::Buffer::Instance const&amp;, Envoy::Http::ServerConnectionCallbacks&amp;, Envoy::Stats::Scope&amp;, Envoy::Random::RandomGenerator&amp;, Envoy::Thread::AtomicPtr&lt;Envoy::Http::Http1::CodecStats, (Envoy::Thread::AtomicPtrAllocMode)1&gt;&amp;, Envoy::Thread::AtomicPtr&lt;Envoy::Http::Http2::CodecStats, (Envoy::Thread::AtomicPtrAllocMode)1&gt;&amp;, Envoy::Http::Http1Settings const&amp;, envoy::config::core::v3::Http2ProtocolOptions const&amp;, unsigned int, unsigned int, envoy::config::core::v3::HttpProtocolOptions_HeadersWithUnderscoresAction) (1 samples, 0.91%)</title><rect x="170.9" y="837" width="10.7" height="15.0" fill="rgb(232,114,36)" rx="2" ry="2" />
<text  x="173.91" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.91%)</title><rect x="10.0" y="933" width="10.7" height="15.0" fill="rgb(254,214,17)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::histogramFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::Histogram::Unit) (1 samples, 0.91%)</title><rect x="128.0" y="661" width="10.7" height="15.0" fill="rgb(253,71,45)" rx="2" ry="2" />
<text  x="131.00" y="671.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (2 samples, 1.82%)</title><rect x="1125.6" y="453" width="21.5" height="15.0" fill="rgb(248,99,44)" rx="2" ry="2" />
<text  x="1128.64" y="463.5" >d..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.91%)</title><rect x="718.0" y="805" width="10.7" height="15.0" fill="rgb(232,68,36)" rx="2" ry="2" />
<text  x="721.00" y="815.5" ></text>
</g>
<g >
<title>ip_make_skb (1 samples, 0.91%)</title><rect x="31.5" y="917" width="10.7" height="15.0" fill="rgb(249,207,20)" rx="2" ry="2" />
<text  x="34.45" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 4.55%)</title><rect x="696.5" y="949" width="53.7" height="15.0" fill="rgb(205,172,15)" rx="2" ry="2" />
<text  x="699.55" y="959.5" >do_sy..</text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackCurrentIteration() (1 samples, 0.91%)</title><rect x="117.3" y="693" width="10.7" height="15.0" fill="rgb(233,172,13)" rx="2" ry="2" />
<text  x="120.27" y="703.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (4 samples, 3.64%)</title><rect x="460.5" y="741" width="43.0" height="15.0" fill="rgb(226,130,36)" rx="2" ry="2" />
<text  x="463.55" y="751.5" >do_i..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.91%)</title><rect x="1179.3" y="1013" width="10.7" height="15.0" fill="rgb(252,62,3)" rx="2" ry="2" />
<text  x="1182.27" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::createConnPool(Envoy::Upstream::ThreadLocalCluster&amp;) (1 samples, 0.91%)</title><rect x="321.1" y="709" width="10.7" height="15.0" fill="rgb(244,217,30)" rx="2" ry="2" />
<text  x="324.09" y="719.5" ></text>
</g>
<g >
<title>epoll_wait (3 samples, 2.73%)</title><rect x="74.4" y="997" width="32.1" height="15.0" fill="rgb(226,165,15)" rx="2" ry="2" />
<text  x="77.36" y="1007.5" >ep..</text>
</g>
<g >
<title>operator new[](unsigned long) (1 samples, 0.91%)</title><rect x="106.5" y="933" width="10.8" height="15.0" fill="rgb(242,196,2)" rx="2" ry="2" />
<text  x="109.55" y="943.5" ></text>
</g>
<g >
<title>writev (2 samples, 1.82%)</title><rect x="621.5" y="869" width="21.4" height="15.0" fill="rgb(238,169,30)" rx="2" ry="2" />
<text  x="624.45" y="879.5" >w..</text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addFragments(absl::Span&lt;absl::string_view const&gt;) (1 samples, 0.91%)</title><rect x="288.9" y="517" width="10.7" height="15.0" fill="rgb(230,224,50)" rx="2" ry="2" />
<text  x="291.91" y="527.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (30 samples, 27.27%)</title><rect x="782.4" y="981" width="321.8" height="15.0" fill="rgb(248,46,10)" rx="2" ry="2" />
<text  x="785.36" y="991.5" >Envoy::Event::FileEventImpl::assignEvents(u..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (5 samples, 4.55%)</title><rect x="1114.9" y="885" width="53.6" height="15.0" fill="rgb(229,210,47)" rx="2" ry="2" />
<text  x="1117.91" y="895.5" >Envoy..</text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.91%)</title><rect x="514.2" y="805" width="10.7" height="15.0" fill="rgb(205,174,48)" rx="2" ry="2" />
<text  x="517.18" y="815.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.91%)</title><rect x="1050.5" y="693" width="10.8" height="15.0" fill="rgb(216,101,19)" rx="2" ry="2" />
<text  x="1053.55" y="703.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::attachStreamToClient(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (3 samples, 2.73%)</title><rect x="288.9" y="661" width="32.2" height="15.0" fill="rgb(245,37,10)" rx="2" ry="2" />
<text  x="291.91" y="671.5" >En..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::ThreadLocal::InstanceImpl::SlotImpl::set(std::__1::function&lt;std::__1::shared_ptr&lt;Envoy::ThreadLocal::ThreadLocalObject&gt; (Envoy::Event::Dispatcher&amp;)&gt;)::$_2, std::__1::allocator&lt;Envoy::ThreadLocal::InstanceImpl::SlotImpl::set(std::__1::function&lt;std::__1::shared_ptr&lt;Envoy::ThreadLocal::ThreadLocalObject&gt; (Envoy::Event::Dispatcher&amp;)&gt;)::$_2&gt;, void ()&gt;::operator()() (1 samples, 0.91%)</title><rect x="106.5" y="965" width="10.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="109.55" y="975.5" ></text>
</g>
<g >
<title>tcp_grow_window.isra.0 (1 samples, 0.91%)</title><rect x="1136.4" y="181" width="10.7" height="15.0" fill="rgb(244,172,3)" rx="2" ry="2" />
<text  x="1139.36" y="191.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpSocket::continueFilterChain(bool) (3 samples, 2.73%)</title><rect x="1072.0" y="901" width="32.2" height="15.0" fill="rgb(243,200,21)" rx="2" ry="2" />
<text  x="1075.00" y="911.5" >En..</text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (1 samples, 0.91%)</title><rect x="857.5" y="581" width="10.7" height="15.0" fill="rgb(214,9,12)" rx="2" ry="2" />
<text  x="860.45" y="591.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.91%)</title><rect x="1147.1" y="629" width="10.7" height="15.0" fill="rgb(210,100,0)" rx="2" ry="2" />
<text  x="1150.09" y="639.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.91%)</title><rect x="1125.6" y="229" width="10.8" height="15.0" fill="rgb(249,183,1)" rx="2" ry="2" />
<text  x="1128.64" y="239.5" ></text>
</g>
<g >
<title>Envoy::Server::FilterChainManagerImpl::findFilterChainForDestinationIP(Envoy::Network::LcTrie::LcTrie&lt;std::__1::shared_ptr&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair, absl::container_internal::StringHash, absl::container_internal::StringEq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Server::FilterChainManagerImpl::DirectSourceIPsPair&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; const&amp;, Envoy::Network::ConnectionSocket const&amp;) const (1 samples, 0.91%)</title><rect x="1093.5" y="837" width="10.7" height="15.0" fill="rgb(241,108,52)" rx="2" ry="2" />
<text  x="1096.45" y="847.5" ></text>
</g>
<g >
<title>envoy (4 samples, 3.64%)</title><rect x="31.5" y="1077" width="42.9" height="15.0" fill="rgb(225,11,1)" rx="2" ry="2" />
<text  x="34.45" y="1087.5" >envoy</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::doDeferredStreamDestroy(Envoy::Http::ConnectionManagerImpl::ActiveStream&amp;) (1 samples, 0.91%)</title><rect x="149.5" y="629" width="10.7" height="15.0" fill="rgb(253,89,35)" rx="2" ry="2" />
<text  x="152.45" y="639.5" ></text>
</g>
<g >
<title>start_thread (50 samples, 45.45%)</title><rect x="653.6" y="1061" width="536.4" height="15.0" fill="rgb(221,7,53)" rx="2" ry="2" />
<text  x="656.64" y="1071.5" >start_thread</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.91%)</title><rect x="10.0" y="949" width="10.7" height="15.0" fill="rgb(247,74,40)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>url::CanonicalizePath(char const*, url::Component const&amp;, url::CanonOutputT&lt;char&gt;*, url::Component*) (1 samples, 0.91%)</title><rect x="224.5" y="709" width="10.8" height="15.0" fill="rgb(245,65,46)" rx="2" ry="2" />
<text  x="227.55" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.73%)</title><rect x="74.4" y="965" width="32.1" height="15.0" fill="rgb(208,229,21)" rx="2" ry="2" />
<text  x="77.36" y="975.5" >en..</text>
</g>
<g >
<title>Envoy::Event::TimerImpl::enableTimer(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;, Envoy::ScopeTrackedObject const*) (1 samples, 0.91%)</title><rect x="331.8" y="693" width="10.7" height="15.0" fill="rgb(209,36,33)" rx="2" ry="2" />
<text  x="334.82" y="703.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (1 samples, 0.91%)</title><rect x="449.8" y="901" width="10.7" height="15.0" fill="rgb(226,37,47)" rx="2" ry="2" />
<text  x="452.82" y="911.5" ></text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (53 samples, 48.18%)</title><rect x="74.4" y="1029" width="568.5" height="15.0" fill="rgb(230,182,18)" rx="2" ry="2" />
<text  x="77.36" y="1039.5" >Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::f..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.82%)</title><rect x="621.5" y="837" width="21.4" height="15.0" fill="rgb(253,152,23)" rx="2" ry="2" />
<text  x="624.45" y="847.5" >e..</text>
</g>
<g >
<title>tcp_poll (1 samples, 0.91%)</title><rect x="557.1" y="549" width="10.7" height="15.0" fill="rgb(254,26,43)" rx="2" ry="2" />
<text  x="560.09" y="559.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2 samples, 1.82%)</title><rect x="621.5" y="613" width="21.4" height="15.0" fill="rgb(206,152,37)" rx="2" ry="2" />
<text  x="624.45" y="623.5" >t..</text>
</g>
<g >
<title>task_work_run (1 samples, 0.91%)</title><rect x="535.6" y="837" width="10.8" height="15.0" fill="rgb(219,167,46)" rx="2" ry="2" />
<text  x="538.64" y="847.5" ></text>
</g>
</g>
</svg>
